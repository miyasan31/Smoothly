[{"/Users/miyashota/project/react-app/src/reducks/store/store.js":"1","/Users/miyashota/project/react-app/src/reducks/store/initialState.js":"2","/Users/miyashota/project/react-app/src/reducks/chats/operations.js":"3","/Users/miyashota/project/react-app/src/App.js":"4","/Users/miyashota/project/react-app/src/reportWebVitals.js":"5","/Users/miyashota/project/react-app/src/reducks/users/operations.js":"6","/Users/miyashota/project/react-app/src/Auth.js":"7","/Users/miyashota/project/react-app/src/reducks/posts/actions.js":"8","/Users/miyashota/project/react-app/src/firebase/firebase.js":"9","/Users/miyashota/project/react-app/src/reducks/questions/operations.js":"10","/Users/miyashota/project/react-app/src/index.js":"11","/Users/miyashota/project/react-app/src/reducks/users/selectors.js":"12","/Users/miyashota/project/react-app/src/reducks/chats/selectors.js":"13","/Users/miyashota/project/react-app/src/reducks/posts/selectors.js":"14","/Users/miyashota/project/react-app/src/reducks/users/actions.js":"15","/Users/miyashota/project/react-app/src/firebase/config.js":"16","/Users/miyashota/project/react-app/src/reducks/questions/selectors.js":"17","/Users/miyashota/project/react-app/src/reducks/chats/actions.js":"18","/Users/miyashota/project/react-app/src/reducks/chats/reducers.js":"19","/Users/miyashota/project/react-app/src/reducks/users/reducers.js":"20","/Users/miyashota/project/react-app/src/functions/function.js":"21","/Users/miyashota/project/react-app/src/reducks/posts/operations.js":"22","/Users/miyashota/project/react-app/src/reducks/posts/reducers.js":"23","/Users/miyashota/project/react-app/src/reducks/questions/actions.js":"24","/Users/miyashota/project/react-app/src/reducks/missions/operations.js":"25","/Users/miyashota/project/react-app/src/reducks/questions/reducers.js":"26","/Users/miyashota/project/react-app/src/reducks/missions/actions.js":"27","/Users/miyashota/project/react-app/src/reducks/missions/selectors.js":"28","/Users/miyashota/project/react-app/src/reducks/missions/reducers.js":"29","/Users/miyashota/project/react-app/src/reducks/tasks/operations.js":"30","/Users/miyashota/project/react-app/src/reducks/tasks/reducers.js":"31","/Users/miyashota/project/react-app/src/reducks/tasks/actions.js":"32","/Users/miyashota/project/react-app/src/reducks/tasks/selectors.js":"33","/Users/miyashota/project/react-app/src/TemplateTheme.js":"34","/Users/miyashota/project/react-app/src/script/components/Chat/RoomUserList.jsx":"35","/Users/miyashota/project/react-app/src/script/components/Layout/ActionCheckDialog.jsx":"36","/Users/miyashota/project/react-app/src/script/components/Question/AnalyticsList.jsx":"37","/Users/miyashota/project/react-app/src/script/components/Setting/IconCropper.jsx":"38","/Users/miyashota/project/react-app/src/script/components/M-ui/SelectBox.jsx":"39","/Users/miyashota/project/react-app/src/script/components/M-ui/QuestionInput.jsx":"40","/Users/miyashota/project/react-app/src/script/components/M-ui/AnswerRadio3.jsx":"41","/Users/miyashota/project/react-app/src/script/components/M-ui/PinkButtonNomal.jsx":"42","/Users/miyashota/project/react-app/src/script/components/Mission/MissionList.jsx":"43","/Users/miyashota/project/react-app/src/script/pages/Post.jsx":"44","/Users/miyashota/project/react-app/src/script/pages/index.js":"45","/Users/miyashota/project/react-app/src/script/pages/RoomEdit.jsx":"46","/Users/miyashota/project/react-app/src/script/pages/Task.jsx":"47","/Users/miyashota/project/react-app/src/script/pages/TaskEdit.jsx":"48","/Users/miyashota/project/react-app/src/script/pages/Question.jsx":"49","/Users/miyashota/project/react-app/src/script/pages/AnswerEdit.jsx":"50","/Users/miyashota/project/react-app/src/script/pages/AuthEdit.jsx":"51","/Users/miyashota/project/react-app/src/script/pages/PostEdit.jsx":"52","/Users/miyashota/project/react-app/src/script/pages/Analytics.jsx":"53","/Users/miyashota/project/react-app/src/script/pages/Chat.jsx":"54","/Users/miyashota/project/react-app/src/script/pages/ChatMessage.jsx":"55","/Users/miyashota/project/react-app/src/script/pages/Collect.jsx":"56","/Users/miyashota/project/react-app/src/script/pages/Mission.jsx":"57","/Users/miyashota/project/react-app/src/script/pages/MissionEdit.jsx":"58","/Users/miyashota/project/react-app/src/script/pages/MissionSubmit.jsx":"59","/Users/miyashota/project/react-app/src/script/pages/ProfEdit.jsx":"60","/Users/miyashota/project/react-app/src/script/components/Question/index.js":"61","/Users/miyashota/project/react-app/src/script/pages/QuestionEdit.jsx":"62","/Users/miyashota/project/react-app/src/script/pages/ReIssue.jsx":"63","/Users/miyashota/project/react-app/src/script/pages/Schedule.jsx":"64","/Users/miyashota/project/react-app/src/script/pages/Setting.jsx":"65","/Users/miyashota/project/react-app/src/script/pages/SignIn.jsx":"66","/Users/miyashota/project/react-app/src/script/pages/SignUp.jsx":"67","/Users/miyashota/project/react-app/src/script/components/Task/TaskList.jsx":"68","/Users/miyashota/project/react-app/src/script/pages/UserDelete.jsx":"69","/Users/miyashota/project/react-app/src/script/components/Chat/ChatMessageComponent.jsx":"70","/Users/miyashota/project/react-app/src/script/components/Chat/ChatMessageList.jsx":"71","/Users/miyashota/project/react-app/src/script/components/Chat/ChatRoomList.jsx":"72","/Users/miyashota/project/react-app/src/script/components/Layout/CheckViewDialog.jsx":"73","/Users/miyashota/project/react-app/src/script/components/Layout/Header.jsx":"74","/Users/miyashota/project/react-app/src/script/components/Layout/Nav.jsx":"75","/Users/miyashota/project/react-app/src/script/components/Layout/ProfDialog.jsx":"76","/Users/miyashota/project/react-app/src/script/components/Mission/CollectList.jsx":"77","/Users/miyashota/project/react-app/src/script/components/Post/PostList.jsx":"78","/Users/miyashota/project/react-app/src/script/components/Question/QuestionComponent.jsx":"79","/Users/miyashota/project/react-app/src/script/components/Question/QuestionList.jsx":"80","/Users/miyashota/project/react-app/src/script/components/Task/TaskTab.jsx":"81","/Users/miyashota/project/react-app/src/script/components/M-ui/AppBarHeader.jsx":"82","/Users/miyashota/project/react-app/src/script/components/M-ui/AppBarSubHeader.jsx":"83","/Users/miyashota/project/react-app/src/script/components/M-ui/ClosableDrawer.jsx":"84","/Users/miyashota/project/react-app/src/script/components/M-ui/index.js":"85","/Users/miyashota/project/react-app/src/script/components/M-ui/NativeSelectBox.jsx":"86","/Users/miyashota/project/react-app/src/script/components/M-ui/AddButton.jsx":"87","/Users/miyashota/project/react-app/src/script/components/M-ui/AnswerRadio2.jsx":"88","/Users/miyashota/project/react-app/src/script/components/M-ui/BlueButton.jsx":"89","/Users/miyashota/project/react-app/src/script/components/M-ui/DateTimePicker.jsx":"90","/Users/miyashota/project/react-app/src/script/components/M-ui/ErrorAlert.jsx":"91","/Users/miyashota/project/react-app/src/script/components/M-ui/QuestionSelect.jsx":"92","/Users/miyashota/project/react-app/src/script/components/Task/index.js":"93","/Users/miyashota/project/react-app/src/script/components/M-ui/BlueButtonNomal.jsx":"94","/Users/miyashota/project/react-app/src/script/components/M-ui/BlueInput.jsx":"95","/Users/miyashota/project/react-app/src/script/components/M-ui/ToolTipTime.jsx":"96","/Users/miyashota/project/react-app/src/script/components/M-ui/BlueInputOutlined.jsx":"97"},{"size":1849,"mtime":1617161879243,"results":"98","hashOfConfig":"99"},{"size":474,"mtime":1617131774942,"results":"100","hashOfConfig":"99"},{"size":6193,"mtime":1615301873552,"results":"101","hashOfConfig":"99"},{"size":2383,"mtime":1617248263002,"results":"102","hashOfConfig":"99"},{"size":356,"mtime":1609345151014,"results":"103","hashOfConfig":"99"},{"size":11573,"mtime":1617236900912,"results":"104","hashOfConfig":"99"},{"size":846,"mtime":1617248166019,"results":"105","hashOfConfig":"99"},{"size":296,"mtime":1610856678749,"results":"106","hashOfConfig":"99"},{"size":452,"mtime":1610304223284,"results":"107","hashOfConfig":"99"},{"size":5505,"mtime":1615301765177,"results":"108","hashOfConfig":"99"},{"size":985,"mtime":1617247517617,"results":"109","hashOfConfig":"99"},{"size":900,"mtime":1617158294708,"results":"110","hashOfConfig":"99"},{"size":253,"mtime":1613065924830,"results":"111","hashOfConfig":"99"},{"size":254,"mtime":1610856734092,"results":"112","hashOfConfig":"99"},{"size":430,"mtime":1617158350774,"results":"113","hashOfConfig":"99"},{"size":349,"mtime":1609698268328,"results":"114","hashOfConfig":"99"},{"size":566,"mtime":1612750080135,"results":"115","hashOfConfig":"99"},{"size":300,"mtime":1613066105397,"results":"116","hashOfConfig":"99"},{"size":506,"mtime":1613066124258,"results":"117","hashOfConfig":"99"},{"size":570,"mtime":1617161887323,"results":"118","hashOfConfig":"99"},{"size":2090,"mtime":1613978975046,"results":"119","hashOfConfig":"99"},{"size":4356,"mtime":1615832663362,"results":"120","hashOfConfig":"99"},{"size":513,"mtime":1612666103769,"results":"121","hashOfConfig":"99"},{"size":1203,"mtime":1612671017954,"results":"122","hashOfConfig":"99"},{"size":6188,"mtime":1615367083221,"results":"123","hashOfConfig":"99"},{"size":1234,"mtime":1612751550526,"results":"124","hashOfConfig":"99"},{"size":333,"mtime":1611690403718,"results":"125","hashOfConfig":"99"},{"size":265,"mtime":1611690546822,"results":"126","hashOfConfig":"99"},{"size":525,"mtime":1613105234100,"results":"127","hashOfConfig":"99"},{"size":6178,"mtime":1613059619545,"results":"128","hashOfConfig":"99"},{"size":910,"mtime":1613057767556,"results":"129","hashOfConfig":"99"},{"size":710,"mtime":1613057768352,"results":"130","hashOfConfig":"99"},{"size":448,"mtime":1613053422138,"results":"131","hashOfConfig":"99"},{"size":1148,"mtime":1617160071854,"results":"132","hashOfConfig":"99"},{"size":2962,"mtime":1617236900917,"results":"133","hashOfConfig":"99"},{"size":1469,"mtime":1617244977107,"results":"134","hashOfConfig":"99"},{"size":4027,"mtime":1617131774948,"results":"135","hashOfConfig":"99"},{"size":797,"mtime":1617164064571,"results":"136","hashOfConfig":"99"},{"size":1092,"mtime":1617236900935,"results":"137","hashOfConfig":"99"},{"size":655,"mtime":1615823876646,"results":"138","hashOfConfig":"99"},{"size":1409,"mtime":1612235275158,"results":"139","hashOfConfig":"99"},{"size":725,"mtime":1617131774960,"results":"140","hashOfConfig":"99"},{"size":7767,"mtime":1617245053095,"results":"141","hashOfConfig":"99"},{"size":1874,"mtime":1617244531369,"results":"142","hashOfConfig":"99"},{"size":1134,"mtime":1617244106470,"results":"143","hashOfConfig":"99"},{"size":6730,"mtime":1617244723496,"results":"144","hashOfConfig":"99"},{"size":1819,"mtime":1617245566440,"results":"145","hashOfConfig":"99"},{"size":5134,"mtime":1617244845272,"results":"146","hashOfConfig":"99"},{"size":2111,"mtime":1617244581253,"results":"147","hashOfConfig":"99"},{"size":3895,"mtime":1617244392174,"results":"148","hashOfConfig":"99"},{"size":5085,"mtime":1617244400036,"results":"149","hashOfConfig":"99"},{"size":6098,"mtime":1617244549635,"results":"150","hashOfConfig":"99"},{"size":1690,"mtime":1617245184854,"results":"151","hashOfConfig":"99"},{"size":954,"mtime":1617244415599,"results":"152","hashOfConfig":"99"},{"size":501,"mtime":1617244431095,"results":"153","hashOfConfig":"99"},{"size":1567,"mtime":1617244449845,"results":"154","hashOfConfig":"99"},{"size":2162,"mtime":1617244473872,"results":"155","hashOfConfig":"99"},{"size":6919,"mtime":1617244500750,"results":"156","hashOfConfig":"99"},{"size":3791,"mtime":1617244517588,"results":"157","hashOfConfig":"99"},{"size":3667,"mtime":1617244575288,"results":"158","hashOfConfig":"99"},{"size":183,"mtime":1617244249684,"results":"159","hashOfConfig":"99"},{"size":5719,"mtime":1617244636620,"results":"160","hashOfConfig":"99"},{"size":2067,"mtime":1617244644434,"results":"161","hashOfConfig":"99"},{"size":5754,"mtime":1617246389764,"results":"162","hashOfConfig":"99"},{"size":5579,"mtime":1617244800905,"results":"163","hashOfConfig":"99"},{"size":3520,"mtime":1617247703675,"results":"164","hashOfConfig":"99"},{"size":5204,"mtime":1617244819545,"results":"165","hashOfConfig":"99"},{"size":3095,"mtime":1617245216700,"results":"166","hashOfConfig":"99"},{"size":3248,"mtime":1617244859430,"results":"167","hashOfConfig":"99"},{"size":3186,"mtime":1617244901500,"results":"168","hashOfConfig":"99"},{"size":4623,"mtime":1617244956679,"results":"169","hashOfConfig":"99"},{"size":3548,"mtime":1617244963150,"results":"170","hashOfConfig":"99"},{"size":7954,"mtime":1617244987113,"results":"171","hashOfConfig":"99"},{"size":287,"mtime":1617245305338,"results":"172","hashOfConfig":"99"},{"size":5646,"mtime":1617246050078,"results":"173","hashOfConfig":"99"},{"size":3980,"mtime":1617245013523,"results":"174","hashOfConfig":"99"},{"size":3406,"mtime":1617245023859,"results":"175","hashOfConfig":"99"},{"size":6575,"mtime":1617245072706,"results":"176","hashOfConfig":"99"},{"size":3628,"mtime":1617245083068,"results":"177","hashOfConfig":"99"},{"size":5986,"mtime":1617245099808,"results":"178","hashOfConfig":"99"},{"size":2390,"mtime":1617245621357,"results":"179","hashOfConfig":"99"},{"size":6718,"mtime":1617245474239,"results":"180","hashOfConfig":"99"},{"size":4445,"mtime":1617245481014,"results":"181","hashOfConfig":"99"},{"size":5082,"mtime":1617246099863,"results":"182","hashOfConfig":"99"},{"size":1638,"mtime":1617246250787,"results":"183","hashOfConfig":"99"},{"size":1936,"mtime":1617246193570,"results":"184","hashOfConfig":"99"},{"size":561,"mtime":1617247046784,"results":"185","hashOfConfig":"99"},{"size":1272,"mtime":1617247058486,"results":"186","hashOfConfig":"99"},{"size":792,"mtime":1617247076495,"results":"187","hashOfConfig":"99"},{"size":1180,"mtime":1617247095359,"results":"188","hashOfConfig":"99"},{"size":505,"mtime":1617247102613,"results":"189","hashOfConfig":"99"},{"size":1321,"mtime":1617247130910,"results":"190","hashOfConfig":"99"},{"size":96,"mtime":1617244215990,"results":"191","hashOfConfig":"99"},{"size":771,"mtime":1617131774956,"results":"192","hashOfConfig":"99"},{"size":721,"mtime":1617248025570,"results":"193","hashOfConfig":"99"},{"size":687,"mtime":1611897207077,"results":"194","hashOfConfig":"99"},{"size":659,"mtime":1615827840099,"results":"195","hashOfConfig":"99"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},"noc2iu",{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"219"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"198"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"253"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"260"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"295"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"198"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"260"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"260"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"295"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"372","messages":"373","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"260"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"198"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"295"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"198"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"295"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"295"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/miyashota/project/react-app/src/reducks/store/store.js",[],["417","418"],"/Users/miyashota/project/react-app/src/reducks/store/initialState.js",[],"/Users/miyashota/project/react-app/src/reducks/chats/operations.js",[],"/Users/miyashota/project/react-app/src/App.js",[],"/Users/miyashota/project/react-app/src/reportWebVitals.js",[],["419","420"],"/Users/miyashota/project/react-app/src/reducks/users/operations.js",[],"/Users/miyashota/project/react-app/src/Auth.js",["421"],"/Users/miyashota/project/react-app/src/reducks/posts/actions.js",[],"/Users/miyashota/project/react-app/src/firebase/firebase.js",[],"/Users/miyashota/project/react-app/src/reducks/questions/operations.js",["422","423"],"import firebase from 'firebase/app'\nimport { push } from 'connected-react-router'\nimport { db, FirebaseTimestamp } from '../../firebase/firebase'\nimport {\n  readQuestionsAction,\n  deleteQuestionsAction,\n  addQuestionItemAction,\n  deleteQuestionItemAction,\n  readQuestionItemAction,\n  readAnswersAction,\n} from './actions.js'\n/* ===================================================================== */\n\nconst questionsRef = db.collection('questions')\nconst schedulesRef = db.collection('schedules')\n\nexport const readQuestions = () => {\n  return async (dispatch, getState) => {\n    const state = getState()\n    const userId = state.users.uid\n    const className = state.users.class_name\n    const userValue = state.users.user_value\n\n    questionsRef\n      // .where('limit_time', '>', new Date())\n      .orderBy('limit_time', 'asc')\n      .onSnapshot((snapshots) => {\n        const questionList = []\n        snapshots.forEach((snapshot) => {\n          const question = snapshot.data()\n          if (question.destination === 'all') {\n            questionList.push(question)\n          } else if (question.destination === userValue) {\n            questionList.push(question)\n          } else if (question.destination === className) {\n            questionList.push(question)\n          } else if (question.creater_uid === userId) {\n            questionList.push(question)\n          }\n        })\n        dispatch(readQuestionsAction(questionList))\n      })\n  }\n}\n\nexport const createQuestions = (\n  qid,\n  destination,\n  title,\n  item,\n  limitTime,\n  questionData\n) => {\n  return async (dispatch, getState) => {\n    let nullData = ''\n    if (destination === '') {\n      nullData = nullData + '【投稿先】'\n    }\n    if (title === '') {\n      nullData = nullData + '【タイトル】'\n    }\n    if (limitTime === '') {\n      nullData = nullData + '【期限】'\n    }\n    if (questionData.length === 0) {\n      nullData = nullData + '【質問】'\n    }\n    if (nullData !== '') {\n      alert(`項目：${nullData}を入力してください。`)\n      return false\n    }\n\n    const state = getState()\n    const userId = state.users.uid\n    const timestamp = FirebaseTimestamp.now()\n    const data = {\n      destination: destination,\n      title: title,\n      item: item,\n      limit_time: limitTime,\n      question_data: questionData,\n      creater_uid: userId,\n      update_time: timestamp,\n    }\n    if (qid === '') {\n      const ref = questionsRef.doc()\n      data.created_time = timestamp\n      // 要注意！！ドキュメントのIDだよ！\n      qid = ref.id\n      data.qid = qid\n    }\n\n    const task = {\n      doc: qid,\n      title: title,\n      startDate: timestamp,\n      endDate: limitTime,\n      tag: '3',\n      destination: destination,\n      creater_uid: userId,\n    }\n\n    return questionsRef\n      .doc(qid)\n      .set(data, { merge: true })\n      .then(() => {\n        schedulesRef\n          .doc(qid)\n          .set(task, { merge: true })\n          .then(() => {\n            dispatch(push('/question'))\n          })\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const deleteQuestions = (qid) => {\n  return async (dispatch, getState) => {\n    questionsRef\n      .doc(qid)\n      .delete()\n      .then(() => {\n        schedulesRef\n          .doc(qid)\n          .delete()\n          .then(() => {\n            dispatch(push('/question'))\n          })\n      })\n  }\n}\n\nexport const addQuestionItem = (questionItem, questionType) => {\n  return async (dispatch) => {\n    if (questionItem === '' || questionType === '') {\n      alert('質問内容と質問のタイプを入力してください。')\n      return false\n    }\n    const data = {\n      item: questionItem,\n      type: questionType,\n    }\n    dispatch(addQuestionItemAction(data))\n  }\n}\n\nexport const deleteQuestionItem = (index) => {\n  return async (dispatch) => {\n    dispatch(deleteQuestionItemAction(index))\n  }\n}\n\nexport const readQuestionItem = (questionData) => {\n  return async (dispatch) => {\n    const data = questionData\n    dispatch(readQuestionItemAction(data))\n  }\n}\n\nexport const readAnswers = (qid) => {\n  return async (dispatch) => {\n    questionsRef\n      .doc(qid)\n      .collection('answers')\n      .orderBy('answer_class', 'desc')\n      .get()\n      .then((snapshots) => {\n        const AnswersList = []\n        snapshots.forEach((snapshots) => {\n          const answers = snapshots.data()\n          AnswersList.push(answers)\n        })\n        dispatch(readAnswersAction(AnswersList))\n      })\n  }\n}\n\nexport const createAnswers = (qid, answerData) => {\n  return async (dispatch, getState) => {\n    const state = getState()\n    const userId = state.users.uid\n    const userName = state.users.user_name\n    const userValue = state.users.user_value\n    const userNumber = state.users.user_number\n    const className = state.users.class_name\n\n    const timestamp = FirebaseTimestamp.now()\n    const ref = questionsRef.doc().collection('answers').doc()\n    const aid = ref.id\n\n    const data = {\n      aid: aid,\n      answer_uid: userId,\n      answer_name: userName,\n      answer_value: userValue,\n      answer_number: userNumber,\n      answer_class: className,\n      answer_data: answerData,\n      answer_time: timestamp,\n    }\n\n    return questionsRef\n      .doc(qid)\n      .collection('answers')\n      .doc(userId)\n      .set(data)\n      .then(() => {\n        dispatch(push('/question'))\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n",["424","425"],"/Users/miyashota/project/react-app/src/index.js",[],"/Users/miyashota/project/react-app/src/reducks/users/selectors.js",[],["426","427"],"/Users/miyashota/project/react-app/src/reducks/chats/selectors.js",[],"/Users/miyashota/project/react-app/src/reducks/posts/selectors.js",[],["428","429"],"/Users/miyashota/project/react-app/src/reducks/users/actions.js",[],"/Users/miyashota/project/react-app/src/firebase/config.js",[],"/Users/miyashota/project/react-app/src/reducks/questions/selectors.js",[],"/Users/miyashota/project/react-app/src/reducks/chats/actions.js",[],"/Users/miyashota/project/react-app/src/reducks/chats/reducers.js",[],["430","431"],"/Users/miyashota/project/react-app/src/reducks/users/reducers.js",[],"/Users/miyashota/project/react-app/src/functions/function.js",["432","433","434","435","436","437","438","439"],"import React, { useCallback, useState, useEffect, useRef } from 'react'\nimport { storage } from '../firebase/firebase.js'\nimport HTMLReactParser from 'html-react-parser'\n/* ===================================================================== */\n\n/**\n * Validate input email\n * @param email\n * @returns {boolean}\n */\nexport const isValidEmailFormat = (email) => {\n  const regex = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n  return regex.test(email)\n}\n\n/**\n * Show an alert if required input is blank\n * @param args Required input values\n * @returns {boolean}\n */\nexport const isValidRequiredInput = (...args) => {\n  let validator = true\n  for (let i = 0; i < args.length; i = (i + 1) | 0) {\n    if (args[i] === '') {\n      validator = false\n    }\n  }\n  return validator\n}\n\n// create the image with a src of the base64 string\nconst createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', (error) => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous')\n    image.src = url\n  })\n\nexport default async function getCroppedImg(imageSrc, crop) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  /* setting canvas width & height allows us to \n    resize from the original image resolution */\n  canvas.width = 250\n  canvas.height = 250\n\n  ctx.drawImage(\n    image,\n    crop.x,\n    crop.y,\n    crop.width,\n    crop.height,\n    0,\n    0,\n    canvas.width,\n    canvas.height\n  )\n  return new Promise((resolve) => {\n    canvas.toBlob((blob) => {\n      resolve(blob)\n    }, 'image/jpeg')\n  })\n}\n\nconst allow_exts = ['jpg', 'jpeg', 'png']\nconst getExt = (filename) => {\n  var pos = filename.lastIndexOf('.')\n  if (pos === -1) return ''\n  return filename.slice(pos + 1)\n}\nexport const checkExt = (filename) => {\n  if (filename) {\n    var ext = getExt(filename).toLowerCase()\n    if (allow_exts.indexOf(ext) === -1) return false\n    return true\n  }\n}\n","/Users/miyashota/project/react-app/src/reducks/posts/operations.js",[],"/Users/miyashota/project/react-app/src/reducks/posts/reducers.js",[],["440","441"],"/Users/miyashota/project/react-app/src/reducks/questions/actions.js",[],["442","443"],"/Users/miyashota/project/react-app/src/reducks/missions/operations.js",["444"],"import firebase from 'firebase/app'\nimport { push } from 'connected-react-router'\nimport { db, FirebaseTimestamp, storage } from '../../firebase/firebase'\nimport { readMissionsAction, deleteMissionsAction } from './actions.js'\n/* ===================================================================== */\n\nconst missionsRef = db.collection('missions')\nconst schedulesRef = db.collection('schedules')\n\nexport const readMissions = () => {\n  return async (dispatch, getState) => {\n    const state = getState()\n    const userId = state.users.uid\n    const className = state.users.class_name\n    const userValue = state.users.user_value\n\n    missionsRef\n      // .where('limit_time', '>', new Date())\n      .orderBy('limit_time', 'asc')\n      .get()\n      .then((snapshots) => {\n        // .onSnapshot((snapshots) => {\n        const missionList = []\n        snapshots.forEach((snapshot) => {\n          const mission = snapshot.data()\n          if (mission.destination === userValue) {\n            missionList.push(mission)\n          } else if (mission.destination === className) {\n            missionList.push(mission)\n          } else if (mission.creater_uid === userId) {\n            missionList.push(mission)\n          }\n        })\n        dispatch(readMissionsAction(missionList))\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const createMissison = (\n  mid,\n  destination,\n  title,\n  item,\n  limitTime,\n  file,\n  fileName\n) => {\n  return async (dispatch, getState) => {\n    let nullData = ''\n    if (destination === '') {\n      nullData = nullData + '【投稿先】'\n    }\n    if (title === '') {\n      nullData = nullData + '【タイトル】'\n    }\n    if (item === '') {\n      nullData = nullData + '【内容】'\n    }\n    if (limitTime === '') {\n      nullData = nullData + '【期限】'\n    }\n    if (nullData !== '') {\n      alert(`項目：${nullData}を入力してください。`)\n      return false\n    }\n\n    const state = getState()\n    const userId = state.users.uid\n    const timestamp = FirebaseTimestamp.now()\n    let data = {}\n    if (fileName === '') {\n      data = {\n        destination: destination,\n        title: title,\n        item: item,\n        file: '',\n        limit_time: limitTime,\n        creater_uid: userId,\n        update_time: timestamp,\n      }\n    } else {\n      data = {\n        destination: destination,\n        title: title,\n        item: item,\n        limit_time: limitTime,\n        creater_uid: userId,\n        update_time: timestamp,\n      }\n    }\n\n    if (mid === '') {\n      const ref = missionsRef.doc()\n      data.created_time = timestamp\n      // 要注意！！ドキュメントのIDだよ！\n      mid = ref.id\n      data.mid = mid\n    }\n    const task = {\n      doc: mid,\n      title: title,\n      startDate: timestamp,\n      endDate: limitTime,\n      tag: '2',\n      destination: destination,\n      creater_uid: userId,\n    }\n\n    return missionsRef\n      .doc(mid)\n      .set(data, { merge: true })\n      .then(() => {\n        schedulesRef\n          .doc(mid)\n          .set(task, { merge: true })\n          .then(() => {\n            if (fileName !== '' && file === '') {\n              dispatch(push('/mission'))\n            } else if (fileName === '' && file === '') {\n              dispatch(push('/mission'))\n            } else {\n              dispatch(createFile(mid, file, fileName))\n            }\n          })\n          .catch((error) => {\n            throw new Error(error)\n          })\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const deleteMission = (mid) => {\n  return async (dispatch, getState) => {\n    missionsRef\n      .doc(mid)\n      .delete()\n      .then(() => {\n        schedulesRef.doc(mid).delete()\n        storage.ref('mission_files').child(mid).delete()\n        const prevMissions = getState().missions.list\n        const nextMissions = prevMissions.filter(\n          (mission) => mission.mid !== mid\n        )\n        dispatch(deleteMissionsAction(nextMissions))\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const createFile = (mid, file, fileName) => {\n  return async (dispatch) => {\n    const uploadRef = storage.ref('mission_files').child(mid)\n    const uploadTask = uploadRef.put(file)\n\n    uploadTask\n      .then(() => {\n        return uploadTask.snapshot.ref.getDownloadURL()\n      })\n      .then((downloadURL) => {\n        const fileData = { id: mid, path: downloadURL, file_name: fileName }\n        const data = {\n          file: fileData,\n        }\n        missionsRef\n          .doc(mid)\n          .set(data, { merge: true })\n          .then(() => {\n            dispatch(push('/mission'))\n          })\n          .catch((error) => {\n            throw new Error(error)\n          })\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const deleteFile = (mid) => {\n  return async (dispatch) => {\n    storage\n      .ref('mission_files')\n      .child(mid)\n      .delete()\n      .then(() => {\n        dispatch(push('/mission'))\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const submitMissions = (mid, file, fileName) => {\n  return async (dispatch, getState) => {\n    const state = getState()\n    const userId = state.users.uid\n    const userName = state.users.user_name\n\n    const uploadRef = storage.ref('mission_files/' + mid).child(userId)\n    const uploadTask = uploadRef.put(file)\n\n    uploadTask\n      .then(() => {\n        return uploadTask.snapshot.ref.getDownloadURL()\n      })\n      .then((downloadURL) => {\n        const fileData = { id: userId, path: downloadURL, file_name: fileName }\n        const data = {\n          creater_uid: userId,\n          creater_name: userName,\n          file: fileData,\n        }\n\n        missionsRef\n          .doc(mid)\n          .collection('submits')\n          .doc(userId)\n          .set(data, { merge: true })\n          .then(() => {\n            dispatch(push('/mission'))\n          })\n          .catch((error) => {\n            throw new Error(error)\n          })\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n","/Users/miyashota/project/react-app/src/reducks/questions/reducers.js",["445"],"import * as Action from './actions'\nimport { initialState } from '../store/initialState.js'\n/* ===================================================================== */\n\nexport const QuestionsReducter = (state = initialState.questions, action) => {\n  switch (action.type) {\n    case Action.READ_QUESTIONS:\n      return {\n        ...state,\n        list: [...action.payload],\n      }\n    case Action.DELETE_QUESTIONS:\n      return {\n        ...state,\n        list: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const QuestionItemReducter = (\n  state = initialState.addquestions,\n  action\n) => {\n  switch (action.type) {\n    case Action.ADD_QUESTIONITEM:\n      return [...state, action.payload]\n    case Action.DELETE_QUESTIONITEM:\n      return state.filter((state, index) => index !== action.payload)\n    case Action.READ_QUESTIONITEM:\n      return action.payload\n    case Action.CLEAR_QUESTIONITEM:\n      return state, action.payload\n    default:\n      return state\n  }\n}\n\nexport const AnswersReducter = (state = initialState.answers, action) => {\n  switch (action.type) {\n    case Action.READ_ANSWERS:\n      return {\n        ...state,\n        list: action.payload,\n      }\n    default:\n      return state\n  }\n}\n",["446","447"],"/Users/miyashota/project/react-app/src/reducks/missions/actions.js",[],"/Users/miyashota/project/react-app/src/reducks/missions/selectors.js",[],"/Users/miyashota/project/react-app/src/reducks/missions/reducers.js",[],["448","449"],"/Users/miyashota/project/react-app/src/reducks/tasks/operations.js",[],["450","451"],"/Users/miyashota/project/react-app/src/reducks/tasks/reducers.js",[],"/Users/miyashota/project/react-app/src/reducks/tasks/actions.js",[],"/Users/miyashota/project/react-app/src/reducks/tasks/selectors.js",[],"/Users/miyashota/project/react-app/src/TemplateTheme.js",["452","453","454","455"],"import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { getTheme } from './reducks/users/selectors.js'\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n/* ===================================================================== */\n\nconst TemplateTheme = ({ children }) => {\n  const selector = useSelector((state) => state)\n  const themeType = getTheme(selector)\n\n  const theme = createMuiTheme({\n    palette: {\n      type: themeType ? 'dark' : 'light',\n      primary: {\n        main: '#2196f3',\n        light: '#2196f3',\n        dark: '#64b5f6',\n      },\n      secondary: {\n        main: '#e91e63',\n        light: '#e91e63',\n        dark: '#ff4081',\n      },\n      text: {\n        // main: '#000000de',\n        // light: '#000000de',\n        // dark: '#ffffff',\n      },\n      background: {\n        main: '#fff',\n        light: '#fff',\n        dark: '#303030',\n      },\n    },\n  })\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </ThemeProvider>\n  )\n}\n\nexport default TemplateTheme\n","/Users/miyashota/project/react-app/src/script/components/Chat/RoomUserList.jsx",["456"],"/Users/miyashota/project/react-app/src/script/components/Layout/ActionCheckDialog.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Question/AnalyticsList.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Setting/IconCropper.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/SelectBox.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/QuestionInput.jsx",["457","458"],"import React, { useState, useCallback } from 'react'\n\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\n/* ===================================================================== */\n\nconst useStyles = makeStyles({\n  input: {\n    width: '65%',\n    marginTop: '15px',\n  },\n})\n\nconst QuestionInput = (props) => {\n  const classes = useStyles()\n\n  return (\n    <TextField\n      error={props.error}\n      className={classes.input}\n      multiline\n      label=\"質問内容\"\n      type=\"text\"\n      rows=\"1\"\n      value={props.value}\n      onChange={props.onChange}\n    />\n  )\n}\nexport default QuestionInput\n","/Users/miyashota/project/react-app/src/script/components/M-ui/AnswerRadio3.jsx",[],["459","460"],"/Users/miyashota/project/react-app/src/script/components/M-ui/PinkButtonNomal.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Mission/MissionList.jsx",["461"],"/Users/miyashota/project/react-app/src/script/pages/Post.jsx",["462"],"/Users/miyashota/project/react-app/src/script/pages/index.js",[],"/Users/miyashota/project/react-app/src/script/pages/RoomEdit.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/Task.jsx",["463","464"],"/Users/miyashota/project/react-app/src/script/pages/TaskEdit.jsx",["465"],"/Users/miyashota/project/react-app/src/script/pages/Question.jsx",["466"],"/Users/miyashota/project/react-app/src/script/pages/AnswerEdit.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/AuthEdit.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/PostEdit.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/Analytics.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/Chat.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/ChatMessage.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/Collect.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/Mission.jsx",["467"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nimport { MissionList } from '../components/Mission'\nimport { AppBarSubHeader, ToolTip } from '../components/M-ui'\nimport { readMissions } from '../../reducks/missions/operations'\nimport { getUserValue } from '../../reducks/users/selectors'\nimport { getUserId } from '../../reducks/users/selectors'\nimport { getMissionLists } from '../../reducks/missions/selectors'\n\nimport EditIcon from '@material-ui/icons/Edit'\nimport Fab from '@material-ui/core/Fab'\n/* ===================================================================== */\n\nconst Mission = () => {\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const current_uid = getUserId(selector)\n  const current_value = getUserValue(selector)\n  const missions = getMissionLists(selector)\n\n  // 課題作成ボタンクリック\n  const pushHandleClick = () => {\n    dispatch(push('/mission/edit'))\n  }\n  // 全投稿を取得\n  useEffect(() => {\n    dispatch(readMissions())\n  }, [])\n\n  return (\n    <section className=\"main\">\n      <AppBarSubHeader subtitle={'課題一覧'} />\n\n      {current_value === 'teacher' && (\n        <div className=\"edit_addbtn\">\n          <ToolTip title=\"課題作成\">\n            <Fab color=\"secondary\" onClick={pushHandleClick}>\n              <EditIcon />\n            </Fab>\n          </ToolTip>\n        </div>\n      )}\n\n      <div className=\"contents_style\">\n        {missions.length > 0 ? (\n          missions.map((mission) => (\n            <MissionList\n              currentUid={current_uid}\n              key={mission.mid}\n              mid={mission.mid}\n              title={mission.title}\n              item={mission.item}\n              file={mission.file}\n              limitTime={mission.limit_time}\n              createrUid={mission.creater_uid}\n              updateTime={mission.update_time}\n            />\n          ))\n        ) : missions.length === 0 ? (\n          <h3>現在出ている課題はありません</h3>\n        ) : null}\n      </div>\n    </section>\n  )\n}\nexport default Mission\n","/Users/miyashota/project/react-app/src/script/pages/MissionEdit.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/MissionSubmit.jsx",["468"],"/Users/miyashota/project/react-app/src/script/pages/ProfEdit.jsx",["469"],"/Users/miyashota/project/react-app/src/script/components/Question/index.js",[],"/Users/miyashota/project/react-app/src/script/pages/QuestionEdit.jsx",["470"],"/Users/miyashota/project/react-app/src/script/pages/ReIssue.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/Schedule.jsx",["471","472"],"/Users/miyashota/project/react-app/src/script/pages/Setting.jsx",["473"],"import React, { useState, useEffect } from 'react'\nimport { push } from 'connected-react-router'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { ActionCheckDialog } from '../components/Layout'\nimport { AppBarSubHeader, BlueButton, PinkButton } from '../components/M-ui'\nimport { signOut } from '../../reducks/users/operations'\nimport { getUserId } from '../../reducks/users/selectors'\nimport { db } from '../../firebase/firebase'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { Avatar } from '@material-ui/core'\n/* ===================================================================== */\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    margin: '0 5px 0 10px',\n    border: '3px solid #90caf9',\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    marginRight: 30,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(15),\n      height: theme.spacing(15),\n      marginRight: 80,\n    },\n  },\n  label: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  flex: {\n    display: 'block',\n    padding: '25px 0',\n    [theme.breakpoints.up('sm')]: {\n      display: 'flex',\n    },\n  },\n}))\n\nconst Setting = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const current_uid = getUserId(selector)\n  const [prof, setProf] = useState('')\n  const [icon, setIcon] = useState('')\n  const [mail, setMail] = useState('')\n  const [openCheckDialog, setOpenCheckDialog] = useState(false)\n\n  // サインアウトボタンクリック\n  const signOutHandleClick = () => {\n    setOpenCheckDialog(false)\n    dispatch(signOut())\n  }\n  // 確認ダイアログ表示\n  const checkHandleClick = () => {\n    setOpenCheckDialog(true)\n  }\n  // ユーザー情報を取得\n  useEffect(() => {\n    db.collection('users')\n      .doc(current_uid)\n      .get()\n      .then((snapshots) => {\n        const userData = snapshots.data()\n        setMail(userData.email)\n        setIcon(userData.icon.path)\n        if (userData.prof !== '') {\n          setProf(userData.prof)\n        }\n      })\n  }, [])\n\n  return (\n    <section className=\"main\">\n      <AppBarSubHeader subtitle={'設定'} />\n\n      <ActionCheckDialog\n        text={'サインアウトしてもよろしいですか？'}\n        buttonLabel={'サインアウト'}\n        openDialog={openCheckDialog}\n        setOpenDialog={setOpenCheckDialog}\n        actionHandleClick={signOutHandleClick}\n      />\n\n      <div className=\"contents_style\">\n        <Paper className=\"paper mg_btm_20px\">\n          <Typography\n            variant=\"h6\"\n            className={classes.label}\n            color=\"textPrimary\"\n          >\n            プロフィール\n          </Typography>\n          <div className={classes.flex}>\n            <div>\n              <Typography\n                variant=\"body2\"\n                className=\"pd_btm_10px\"\n                color=\"textSecondary\"\n              >\n                アイコン\n              </Typography>\n              <Avatar className={classes.icon} src={icon} />\n            </div>\n            <div>\n              <Typography\n                variant=\"body2\"\n                className=\"pd_y_10px\"\n                color=\"textSecondary\"\n              >\n                自己紹介文\n              </Typography>\n              <Typography variant=\"body2\" style={{ whiteSpace: 'pre-wrap' }}>\n                {prof !== '' ? prof : 'プロフィールを登録しましょう！'}\n              </Typography>\n            </div>\n          </div>\n          <div className=\"right pd_top_10px\">\n            <BlueButton\n              label={'編集'}\n              onClick={() => dispatch(push('/setting/prof'))}\n            />\n          </div>\n        </Paper>\n\n        <Paper className=\"paper mg_btm_20px\">\n          <Typography\n            variant=\"h6\"\n            className={classes.label}\n            color=\"textPrimary\"\n          >\n            メールアドレス・パスワード\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            className=\"pd_top_10px\"\n            color=\"textSecondary\"\n          >\n            登録中のメールアドレス\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            className=\"pd_top_10px\"\n            color=\"textPrimary\"\n          >\n            {mail}\n          </Typography>\n          <div className=\"right\">\n            <BlueButton\n              label={'変更'}\n              onClick={() => dispatch(push('/setting/auth'))}\n            />\n          </div>\n        </Paper>\n\n        <Paper className=\"paper mg_btm_20px\">\n          <Typography\n            variant=\"h6\"\n            className={classes.label}\n            color=\"textPrimary\"\n          >\n            サインアウト\n          </Typography>\n          <div className=\"right pd_top_10px\">\n            <BlueButton label={'サインアウト'} onClick={checkHandleClick} />\n          </div>\n        </Paper>\n\n        <Paper className=\"paper mg_btm_20px\">\n          <Typography\n            variant=\"h6\"\n            className={classes.label}\n            color=\"textPrimary\"\n          >\n            退会\n          </Typography>\n          <div className=\"right pd_top_10px\">\n            <PinkButton\n              label={'退会手続きへ'}\n              onClick={() => dispatch(push('/setting/delete'))}\n            />\n          </div>\n        </Paper>\n      </div>\n    </section>\n  )\n}\nexport default Setting\n","/Users/miyashota/project/react-app/src/script/pages/SignIn.jsx",["474"],"/Users/miyashota/project/react-app/src/script/pages/SignUp.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Task/TaskList.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/UserDelete.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Chat/ChatMessageComponent.jsx",["475","476"],"/Users/miyashota/project/react-app/src/script/components/Chat/ChatMessageList.jsx",["477","478"],"import React, { useCallback, useState, useEffect, useRef } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { ChatMessageComponent } from './index'\nimport { ProfDialog } from '../Layout'\nimport { BlueInputOutlined } from '../M-ui'\nimport { createChatMessage } from '../../../reducks/chats/operations'\nimport { db } from '../../../firebase/firebase'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport SendSharpIcon from '@material-ui/icons/SendSharp'\nimport { makeStyles } from '@material-ui/core/styles'\n/* ===================================================================== */\n\nconst useStyles = makeStyles((theme) => ({\n  chatBtn: {\n    margin: '0 0 8px 0',\n    [theme.breakpoints.up('md')]: {\n      margin: '0 10px 3px 0px',\n    },\n  },\n  activeBtn: {\n    fontSize: '30px',\n    [theme.breakpoints.up('md')]: {\n      fontSize: '40px',\n    },\n  },\n  passiveBtn: {\n    opacity: '0.4',\n    fontSize: '30px',\n    [theme.breakpoints.up('md')]: {\n      fontSize: '40px',\n    },\n  },\n}))\n\nconst ChatMessageList = (props) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [messageData, setMessageData] = useState('')\n  const [message, setMessage] = useState('')\n  const [uid, setUid] = useState(null)\n  const [openDialog, setOpenDialog] = useState(false)\n\n  useEffect(() => {\n    // URLからridを取得\n    let rid = window.location.pathname.split('/chat/room')[1]\n    if (rid !== '') {\n      rid = rid.split('/')[1]\n    }\n    // 常時データの更新を監視\n    const unsubscribe = db\n      .collection('chats')\n      .doc(rid)\n      .collection('messages')\n      .orderBy('update_time', 'asc')\n      .onSnapshot((snapshots) => {\n        const messageList = []\n        snapshots.forEach((snapshots) => {\n          const msg = snapshots.data()\n          messageList.push(msg)\n        })\n        setMessageData(messageList)\n      })\n    // タイトルの取得、親に渡す\n    db.collection('chats')\n      .doc(rid)\n      .get()\n      .then((snapshots) => {\n        const roomData = snapshots.data()\n        if (roomData.members.length !== 0) {\n          props.setRoomName(\n            `${roomData.room_name}（${\n              roomData.members && roomData.members.length\n            }）`\n          )\n        } else {\n          props.setRoomName(roomData.room_name)\n        }\n      })\n    return () => {\n      unsubscribe()\n    }\n  }, [])\n  // プロフの表示\n  const handleIconView = (uid) => {\n    setUid(uid)\n    setOpenDialog(true)\n  }\n  // メッセージ入力イベント\n  const inputMessage = useCallback((event) => {\n    setMessage(event.target.value)\n  })\n  // メッセージ送信ボタンクリック\n  const handleClick = () => {\n    let rid = window.location.pathname.split('/chat/room')[1]\n    if (rid !== '') {\n      rid = rid.split('/')[1]\n    }\n    dispatch(createChatMessage(rid, message))\n    setMessage('')\n  }\n  // 新規メッセージを受信したらスクロールを一番下に持ってくる\n  const messagesEndRef = useRef(null)\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView()\n  }\n  useEffect(scrollToBottom, [messageData])\n\n  return (\n    <div id=\"chatroom\" className=\"chat_contents_style\">\n      {messageData.length !== 0 &&\n        messageData.map((msg, index) => {\n          return (\n            <ChatMessageComponent\n              key={index}\n              createrUid={msg.creater_uid}\n              updateTime={msg.update_time}\n              message={msg.message}\n              onClick={handleIconView}\n            />\n          )\n        })}\n\n      <ProfDialog\n        uid={uid}\n        openDialog={openDialog}\n        setOpenDialog={setOpenDialog}\n      />\n\n      <div ref={messagesEndRef} />\n      <div className=\"chat_content\">\n        <div className=\"chat_textarea\">\n          <BlueInputOutlined\n            fullWidth={true}\n            multiline={true}\n            autoFocus={false}\n            value={message}\n            onChange={inputMessage}\n            placeholder={'メッセージを送信する'}\n          />\n        </div>\n\n        <div className={classes.chatBtn}>\n          <IconButton className={classes.sendBtn}>\n            {message ? (\n              <SendSharpIcon\n                className={classes.activeBtn}\n                color=\"primary\"\n                onClick={handleClick}\n              />\n            ) : (\n              <SendSharpIcon className={classes.passiveBtn} />\n            )}\n          </IconButton>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ChatMessageList\n\n/* ===================================================================== */\n","/Users/miyashota/project/react-app/src/script/components/Chat/ChatRoomList.jsx",["479"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { format } from 'date-fns'\nimport { ja } from 'date-fns/locale'\n\nimport { readChatRoom } from '../../../reducks/chats/operations'\nimport { getClassName } from '../../../reducks/users/selectors'\nimport { getRoomLists } from '../../../reducks/chats/selectors'\nimport { db } from '../../../firebase/firebase'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Paper from '@material-ui/core/Paper'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider'\n/* ===================================================================== */\n\nconst useStyles = makeStyles({\n  info: {\n    minWidth: 100,\n  },\n})\n\nconst ChatRoomList = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const current_class = getClassName(selector)\n  const roomLists = getRoomLists(selector)\n  const [classRoom, setClassRoom] = useState([])\n\n  // ログインユーザーが所属するルームを検索\n  useEffect(() => {\n    db.collection('chats')\n      .where('room_name', '==', current_class)\n      .get()\n      .then((snapshots) => {\n        snapshots.forEach((snapshots) => {\n          const classRoom = snapshots.data()\n          const timeStamp = classRoom.update_time\n          const redate = timeStamp.toDate()\n          const date = format(redate, 'yyyy年M月dd日 H:mm', { locale: ja })\n          const classData = {\n            rid: classRoom.rid,\n            room_name: classRoom.room_name,\n            update_time: date,\n          }\n          setClassRoom(classData)\n        })\n      })\n    dispatch(readChatRoom())\n  }, [])\n  // ルーム画面へ飛ぶ\n  const RoomPushHandleClick = (rid) => {\n    dispatch(push('/chat/room/' + rid))\n  }\n\n  return (\n    <div className=\"contents_style\">\n      <Paper className=\"paper_sub\">\n        <List component=\"nav\">\n          <ListItem\n            button\n            alignItems=\"flex-start\"\n            onClick={() => RoomPushHandleClick(classRoom.rid)}\n          >\n            <ListItemAvatar>\n              <Avatar style={{ backgroundColor: '#2196f3', fontSize: 17 }}>\n                {classRoom.room_name ? classRoom.room_name.substr(0, 2) : ''}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              className={classes.info}\n              primary={classRoom.room_name}\n              secondary={classRoom.update_time}\n            />\n          </ListItem>\n\n          {roomLists.length !== 0 && <Divider />}\n\n          {roomLists.map((e) => {\n            return (\n              <ListItem\n                key={e.rid}\n                button\n                alignItems=\"flex-start\"\n                onClick={() => RoomPushHandleClick(e.rid)}\n              >\n                <ListItemAvatar>\n                  <Avatar src={e.icon} />\n                </ListItemAvatar>\n                <ListItemText\n                  className={classes.info}\n                  primary={`${e.room_name}（${e.memberNum}）`}\n                  secondary={e.update_time}\n                />\n              </ListItem>\n            )\n          })}\n        </List>\n      </Paper>\n    </div>\n  )\n}\n\nexport default ChatRoomList\n","/Users/miyashota/project/react-app/src/script/components/Layout/CheckViewDialog.jsx",["480"],"/Users/miyashota/project/react-app/src/script/components/Layout/Header.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Layout/Nav.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Layout/ProfDialog.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Mission/CollectList.jsx",["481","482","483","484","485"],"/Users/miyashota/project/react-app/src/script/components/Post/PostList.jsx",["486","487"],"import React, { useState, useEffect } from 'react'\nimport { push } from 'connected-react-router'\nimport { useDispatch } from 'react-redux'\nimport clsx from 'clsx'\nimport { format } from 'date-fns'\nimport { ja } from 'date-fns/locale'\n\nimport { ProfDialog, ActionCheckDialog } from '../Layout'\nimport { BlueButtonNomal } from '../M-ui'\nimport { deletePost } from '../../../reducks/posts/operations'\nimport { db } from '../../../firebase/firebase'\nimport { checkExt } from '../../../functions/function'\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Collapse from '@material-ui/core/Collapse'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Button from '@material-ui/core/Button'\nimport Avatar from '@material-ui/core/Avatar'\nimport { makeStyles } from '@material-ui/core/styles'\n/* ===================================================================== */\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background,\n  },\n  media: {\n    height: '0',\n    padding: '50%',\n    backgroundSize: 'contain',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(-90deg)',\n  },\n}))\n\nconst PostList = (props) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [name, setName] = useState('')\n  const [className, setClassName] = useState('')\n  const [icon, setIcon] = useState('')\n  const [expanded, setExpanded] = useState(false)\n  const [openProfDialog, setOpenProfDialog] = useState(false)\n  const [openDeleteCheckDialog, setOpenDeleteCheckDialog] = useState(false)\n\n  // 時間を正規表現\n  const updateTime = props.updateTime.toDate()\n  const updateDateTime = format(updateTime, 'yyyy年M月dd日 H:mm', {\n    locale: ja,\n  })\n  // 編集ボタンクリック\n  const editHandleClick = () => {\n    dispatch(push('/post/edit/' + props.pid))\n  }\n  // 削除ボタンクリック\n  const deleteHandleClick = () => {\n    dispatch(deletePost(props.pid))\n    setOpenDeleteCheckDialog(false)\n  }\n  // プロフの表示\n  const IconViewHandleClick = () => {\n    setOpenProfDialog(true)\n  }\n  // 確認ダイアログ表示\n  const deleteCheckHandleClick = () => {\n    setOpenDeleteCheckDialog(true)\n  }\n  // ファイル表示ボタンクリック&矢印アイコンの向き変更\n  const expandHandleClick = () => {\n    setExpanded(!expanded)\n  }\n  // 投稿者の情報を取得\n  useEffect(() => {\n    if (props.createrUid) {\n      db.collection('users')\n        .doc(props.createrUid)\n        .get()\n        .then((snapshots) => {\n          // .onSnapshot((snapshots) => {\n          const userData = snapshots.data()\n          if (userData) {\n            setName(userData.user_name)\n            setClassName(userData.class_name)\n            setIcon(userData.icon.path)\n          } else {\n            setName('退会済みのユーザー')\n          }\n        })\n    }\n  }, [])\n\n  return (\n    <>\n      <Card className=\"mg_btm_20px\" className={classes.root}>\n        <CardHeader\n          avatar={\n            icon ? (\n              <Avatar\n                alt=\"userIcon\"\n                src={icon}\n                className={\n                  props.currentUid === props.createrUid\n                    ? 'pointer icon_circle_blue'\n                    : 'pointer'\n                }\n                onClick={IconViewHandleClick}\n              />\n            ) : (\n              <Avatar\n                className={\n                  props.currentUid === props.createrUid\n                    ? 'pointer icon_circle_blue'\n                    : 'pointer'\n                }\n                onClick={IconViewHandleClick}\n              >\n                {name.charAt(0)}\n              </Avatar>\n            )\n          }\n          title={\n            <Typography>\n              {className} ｜ {name}\n            </Typography>\n          }\n          subheader={`更新日時：${updateDateTime}`}\n        />\n\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            タイトル\n          </Typography>\n          <Typography variant=\"body1\" className=\"pd_10px\" color=\"textPrimary\">\n            {props.title}\n          </Typography>\n\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            内容\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            className=\"pd_10px\"\n            color=\"textPrimary\"\n            style={{ whiteSpace: 'pre-wrap' }}\n          >\n            {props.item}\n          </Typography>\n        </CardContent>\n\n        <CardActions className=\"mg_10px\">\n          {props.currentUid === props.createrUid && (\n            <>\n              <BlueButtonNomal label={'編集'} onClick={editHandleClick} />\n              <BlueButtonNomal\n                label={'削除'}\n                onClick={deleteCheckHandleClick}\n              />\n            </>\n          )}\n\n          {props.file.path && (\n            <Button color=\"primary\">\n              <a href={props.file.path}>ファイルダウンロード</a>\n            </Button>\n          )}\n\n          {checkExt(props.file.file_name) && (\n            <Button\n              aria-expanded={expanded}\n              color=\"primary\"\n              onClick={expandHandleClick}\n            >\n              ファイル表示\n              <ExpandMoreIcon\n                className={clsx(classes.expand, {\n                  [classes.expandOpen]: expanded,\n                })}\n              />\n            </Button>\n          )}\n        </CardActions>\n\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent className={classes.content}>\n            <CardMedia className={classes.media} image={props.file.path} />\n          </CardContent>\n        </Collapse>\n      </Card>\n\n      <ProfDialog\n        uid={props.createrUid}\n        openDialog={openProfDialog}\n        setOpenDialog={setOpenProfDialog}\n      />\n\n      <ActionCheckDialog\n        text={'削除してもよろしいですか？'}\n        openDialog={openDeleteCheckDialog}\n        setOpenDialog={setOpenDeleteCheckDialog}\n        actionHandleClick={deleteHandleClick}\n      />\n    </>\n  )\n}\nexport default PostList\n","/Users/miyashota/project/react-app/src/script/components/Question/QuestionComponent.jsx",["488"],"import React, { useState, useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {\n  QuestionSelect,\n  QuestionInput,\n  GreyButton,\n  AnswerText1,\n  AnswerRadio2,\n  AnswerRadio3,\n} from '../M-ui'\nimport {\n  addQuestionItem,\n  deleteQuestionItem,\n} from '../../../reducks/questions/operations'\nimport { addQuestionList } from '../../../reducks/questions/selectors'\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { makeStyles } from '@material-ui/core/styles'\n/* ===================================================================== */\n\nconst useStyles = makeStyles({\n  card: {\n    marginTop: '20px',\n    padding: '5px 20px 20px 20px',\n    backgroundColor: '#00000005',\n  },\n  flex: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  icon: {\n    opacity: '0.7',\n  },\n})\n\nconst QuestionComponent = (props) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const add = addQuestionList(selector)\n  const [datas, setDatas] = useState([])\n  const [questionItem, setQuestionItem] = useState('')\n  const [questionType, setQuestionType] = useState('')\n\n  //　作成した質問を取得する\n  useEffect(() => {\n    if (add) {\n      setDatas(add)\n      props.setQuestionData(add)\n      setQuestionItem('')\n    }\n  }, [add])\n  // 質問内容入力イベント\n  const inputItem = useCallback(\n    (event) => {\n      setQuestionItem(event.target.value)\n    },\n    [setQuestionItem]\n  )\n  // 作成ボタンクリック\n  const questionAddHnadleClick = () => {\n    dispatch(addQuestionItem(questionItem, questionType))\n  }\n\n  return (\n    <>\n      {datas.length !== 0 &&\n        datas.map((data, index) => (\n          <Card key={index} className={classes.card}>\n            <CardHeader\n              action={\n                <IconButton\n                  className={classes.delete}\n                  onClick={() => dispatch(deleteQuestionItem(index))}\n                >\n                  <DeleteIcon className={classes.icon} />\n                </IconButton>\n              }\n              title={\n                <Typography variant=\"h6\" color=\"textSecondary\">\n                  質問 {`${index + 1}`}\n                </Typography>\n              }\n            />\n            <Typography variant=\"h6\" color=\"textSecondary\">\n              {data.item}\n            </Typography>\n            {data.type === '1' ? (\n              <AnswerText1\n                id={index}\n                label={'テキストを入力'}\n                type={'text'}\n                fullWidth={true}\n                disabled={true}\n                multiline={false}\n                value={null}\n              />\n            ) : data.type === '2' ? (\n              <AnswerRadio2 id={index} disabled={true} />\n            ) : (\n              <AnswerRadio3 id={index} disabled={true} fullWidth />\n            )}\n          </Card>\n        ))}\n\n      <div className={classes.flex}>\n        <QuestionInput\n          error={props.error}\n          value={questionItem}\n          onChange={inputItem}\n        />\n        <QuestionSelect\n          error={props.error}\n          value={questionType}\n          select={setQuestionType}\n        />\n      </div>\n\n      <GreyButton\n        size={'small'}\n        label={'作成 ＋ '}\n        onClick={questionAddHnadleClick}\n      />\n    </>\n  )\n}\nexport default QuestionComponent\n","/Users/miyashota/project/react-app/src/script/components/Question/QuestionList.jsx",["489"],"import React, { useState, useEffect } from 'react'\nimport { push } from 'connected-react-router'\nimport { useDispatch } from 'react-redux'\nimport { format } from 'date-fns'\nimport { ja } from 'date-fns/locale'\n\nimport { ProfDialog, ActionCheckDialog } from '../Layout'\nimport { PinkButton, BlueButtonNomal } from '../M-ui'\nimport { deleteQuestions } from '../../../reducks/questions/operations'\nimport { db } from '../../../firebase/firebase'\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Typography from '@material-ui/core/Typography'\nimport Avatar from '@material-ui/core/Avatar'\n/* ===================================================================== */\n\nconst QuestionList = (props) => {\n  const dispatch = useDispatch()\n  const [name, setName] = useState('')\n  const [className, setClassName] = useState('')\n  const [icon, setIcon] = useState('')\n  const [submitCheck, setSubmitCheck] = useState(false)\n  const [openProfDialog, setOpenProfDialog] = useState(false)\n  const [openDeleteCheckDialog, setOpenDeleteCheckDialog] = useState(false)\n\n  // 時間を正規表現\n  const updateTime = props.updateTime.toDate()\n  const updateDateTime = format(updateTime, 'yyyy年M月dd日 H:mm', {\n    locale: ja,\n  })\n  const limitTime = props.limitTime.toDate()\n  const limitDateTime = format(limitTime, 'yyyy年M月dd日 H:mm', { locale: ja })\n  // 編集ボタンクリック\n  const editHandleClick = () => {\n    dispatch(push('/question/edit/' + props.qid))\n  }\n  // 削除ボタンクリック\n  const deleteHandleClick = () => {\n    dispatch(deleteQuestions(props.qid))\n  }\n  // 回答ボタンクリック\n  const answerHandleClick = () => {\n    dispatch(push('/question/answer/' + props.qid))\n  }\n  // 結果ボタンクリック\n  const analyticsHandleClick = () => {\n    dispatch(push('/question/analytics/' + props.qid))\n  }\n  // プロフの表示\n  const IconViewHandleClick = () => {\n    setOpenProfDialog(true)\n  }\n  // 確認ダイアログ表示\n  const deleteCheckHandleClick = () => {\n    setOpenDeleteCheckDialog(true)\n  }\n  // 投稿者の情報を取得\n  useEffect(() => {\n    if (props.createrUid) {\n      db.collection('users')\n        .doc(props.createrUid)\n        .get()\n        .then((snapshots) => {\n          // .onSnapshot((snapshots) => {\n          const userData = snapshots.data()\n          if (userData) {\n            setName(userData.user_name)\n            setClassName(userData.class_name)\n            setIcon(userData.icon.path)\n          } else {\n            setName('退会済みのユーザー')\n          }\n        })\n    }\n    db.collection('questions')\n      .doc(props.qid)\n      .collection('answers')\n      .doc(props.currentUid)\n      .get()\n      .then((snapshots) => {\n        const userData = snapshots.data()\n        if (userData) {\n          setSubmitCheck(true)\n        }\n      })\n  }, [])\n\n  return (\n    <>\n      <Card className=\"mg_btm_20px\">\n        <CardHeader\n          avatar={\n            icon ? (\n              <Avatar\n                className={\n                  props.currentUid === props.createrUid\n                    ? 'pointer icon_circle_blue'\n                    : 'pointer'\n                }\n                alt=\"userIcon\"\n                src={icon}\n                onClick={IconViewHandleClick}\n              />\n            ) : (\n              <Avatar\n                className={\n                  props.currentUid === props.createrUid\n                    ? 'pointer icon_circle_blue'\n                    : 'pointer'\n                }\n                onClick={IconViewHandleClick}\n              >\n                {name.charAt(0)}\n              </Avatar>\n            )\n          }\n          title={\n            <Typography>\n              {className} ｜ {name}\n            </Typography>\n          }\n          subheader={`更新日時：${updateDateTime}`}\n        />\n\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            タイトル\n          </Typography>\n          <Typography variant=\"body1\" className=\"pd_10px\" color=\"textPrimary\">\n            {props.title}\n          </Typography>\n\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            内容\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            className=\"pd_10px\"\n            color=\"textPrimary\"\n            style={{ whiteSpace: 'pre-wrap' }}\n          >\n            {props.item}\n          </Typography>\n\n          <Typography variant=\"body1\" className=\"red_center pd_top_10px\">\n            回答期限：{limitDateTime}\n          </Typography>\n        </CardContent>\n\n        <CardActions className=\"mg_10px\">\n          {props.currentUid === props.createrUid && (\n            <>\n              <BlueButtonNomal label={'編集'} onClick={editHandleClick} />\n              <BlueButtonNomal\n                label={'削除'}\n                onClick={deleteCheckHandleClick}\n              />\n            </>\n          )}\n          <div className=\"flex_grow\"></div>\n\n          {submitCheck && (\n            <Typography variant=\"body2\" className=\"red_center\">\n              回答済\n            </Typography>\n          )}\n\n          {props.currentUid === props.createrUid ? (\n            <PinkButton label={'結果'} onClick={analyticsHandleClick} />\n          ) : (\n            <PinkButton label={'回答'} onClick={answerHandleClick} />\n          )}\n        </CardActions>\n      </Card>\n\n      <ProfDialog\n        uid={props.createrUid}\n        openDialog={openProfDialog}\n        setOpenDialog={setOpenProfDialog}\n      />\n\n      <ActionCheckDialog\n        text={'削除してもよろしいですか？'}\n        openDialog={openDeleteCheckDialog}\n        setOpenDialog={setOpenDeleteCheckDialog}\n        actionHandleClick={deleteHandleClick}\n      />\n    </>\n  )\n}\nexport default QuestionList\n","/Users/miyashota/project/react-app/src/script/components/Task/TaskTab.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/AppBarHeader.jsx",["490","491"],"import React, { useState, useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nimport { ActionCheckDialog } from '../Layout'\nimport { ClosableDrawer } from './index'\nimport { signOut, updateTheme } from '../../../reducks/users/operations'\nimport { getUserId } from '../../../reducks/users/selectors'\nimport { db } from '../../../firebase/firebase'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Avatar from '@material-ui/core/Avatar'\nimport Switch from '@material-ui/core/Switch'\n/* ===================================================================== */\n\nconst useStyles = makeStyles((theme) => ({\n  appbar: {\n    boxShadow: 'none',\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    height: '55px',\n    [theme.breakpoints.up('sm')]: {\n      height: '70px',\n    },\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: '25px',\n    color: '#2196f3',\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '30px',\n      paddingLeft: '25px',\n    },\n  },\n  icon: {\n    width: theme.spacing(5),\n    height: theme.spacing(5),\n    color: '#ffffff',\n    backgroundColor: '#2196f3',\n    // border: '2px solid #90caf9',\n    boxSizing: 'border-box',\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(5.5),\n      height: theme.spacing(5.5),\n    },\n  },\n  menu: {\n    color: 'white',\n    fontSize: '25px',\n    color: '#2196f3',\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '30px',\n    },\n  },\n  menuButton: {\n    display: 'block',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  grow_sm: {\n    flexGrow: 1,\n    [theme.breakpoints.up('md')]: {\n      flexGrow: 0,\n    },\n  },\n}))\n\nconst AppBarHeader = (props) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const current_uid = getUserId(selector)\n  const [icon, setIcon] = useState('')\n  const [themeType, setThemeType] = useState(false)\n  const [anchorEl, setAnchorEl] = useState(null)\n  const [sideBarOpen, setSideBarOpen] = useState(false)\n  const [openCheckDialog, setOpenCheckDialog] = useState(false)\n\n  const isMenuOpen = Boolean(anchorEl)\n\n  const handleToggle = () => {\n    // setThemeType(true)\n    dispatch(updateTheme(current_uid, !themeType))\n  }\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleProfEditPush = () => {\n    handleMenuClose()\n    dispatch(push('/setting/prof'))\n  }\n\n  const handleSettingPush = () => {\n    handleMenuClose()\n    dispatch(push('/setting'))\n  }\n\n  const handleSignOut = () => {\n    handleMenuClose()\n    setOpenCheckDialog(false)\n    dispatch(signOut())\n  }\n\n  const checkHandleClick = () => {\n    handleMenuClose()\n    setOpenCheckDialog(true)\n  }\n\n  const handleDrawerToggle = useCallback(\n    (event, isOpen) => {\n      if (\n        event.type === 'keydown' &&\n        (event.key === 'Tab' || event.key === 'Shift')\n      ) {\n        return\n      }\n      setSideBarOpen(isOpen)\n    },\n    [setSideBarOpen]\n  )\n\n  useEffect(() => {\n    const unsubscribe = db\n      .collection('users')\n      .doc(current_uid)\n      .onSnapshot((snapshots) => {\n        const userData = snapshots.data()\n        if (userData.icon) {\n          const icon = userData.icon.path\n          const theme = userData.dark_mode\n          setIcon(icon)\n          setThemeType(theme)\n        }\n      })\n    return () => unsubscribe()\n  }, [])\n\n  const menuId = 'primary-search-account-menu'\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleProfEditPush}>プロフィール編集</MenuItem>\n      <MenuItem onClick={handleSettingPush}>ユーザー設定</MenuItem>\n      <MenuItem onClick={checkHandleClick}>サインアウト</MenuItem>\n    </Menu>\n  )\n\n  return (\n    <>\n      <AppBar className={classes.appbar} position=\"static\" color=\"inherit\">\n        <ActionCheckDialog\n          text={'サインアウトしてもよろしいですか？'}\n          buttonLabel={'サインアウト'}\n          openDialog={openCheckDialog}\n          setOpenDialog={setOpenCheckDialog}\n          actionHandleClick={handleSignOut}\n        />\n\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            aria-label=\"open drawer\"\n            onClick={(e) => handleDrawerToggle(e, true)}\n          >\n            <MenuIcon className={classes.menu} />\n          </IconButton>\n\n          {/* <div className={classes.grow_sm} /> */}\n\n          <a href=\"/post\">\n            <Typography className={classes.title} noWrap>\n              Smoothly\n            </Typography>\n          </a>\n\n          <div className={classes.grow} />\n\n          <Switch color=\"default\" onChange={handleToggle} />\n\n          <div className={classes.sectionDesktop}>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <Avatar className={classes.icon} alt=\"userIcon\" src={icon} />\n            </IconButton>\n          </div>\n\n          <div className={classes.sectionMobile}>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <Avatar className={classes.icon} alt=\"userIcon\" src={icon} />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <ClosableDrawer open={sideBarOpen} onClose={handleDrawerToggle} />\n      {renderMenu}\n    </>\n  )\n}\nexport default AppBarHeader\n","/Users/miyashota/project/react-app/src/script/components/M-ui/AppBarSubHeader.jsx",["492"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nimport { ActionCheckDialog } from '../Layout'\nimport { deleteChatRoom } from '../../../reducks/chats/operations.js'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\nimport IconButton from '@material-ui/core/IconButton'\nimport SettingsIcon from '@material-ui/icons/Settings'\n/* ===================================================================== */\n\nconst useStyles = makeStyles((theme) => ({\n  appbar: {\n    top: '55px',\n    height: '35px',\n    position: 'fixed',\n    display: 'flex',\n    zIndex: 50,\n    width: '100%',\n    boxShadow: 'none',\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    [theme.breakpoints.up('sm')]: {\n      height: '48px',\n      top: '70px',\n    },\n    [theme.breakpoints.up('md')]: {\n      width: 'calc(100% - 230px)',\n    },\n  },\n  title: {\n    color: theme.palette.text.primary,\n    fontSize: 16,\n    marginBottom: 14,\n    [theme.breakpoints.up('sm')]: {\n      fontSize: 20,\n      marginBottom: 0,\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  chat_menu: {\n    display: 'none',\n  },\n  menuButtonTrue: {\n    display: 'block',\n  },\n  menuButtonFalse: {\n    display: 'none',\n  },\n  none: {\n    display: 'none',\n  },\n  icon: {\n    color: theme.palette.common,\n    width: theme.spacing(2.8),\n    height: theme.spacing(2.8),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n  },\n  menuButton: {\n    marginBottom: 14,\n    marginRight: -3,\n    [theme.breakpoints.up('sm')]: {\n      marginRight: 0,\n      marginBottom: 0,\n    },\n  },\n}))\n\nconst AppBarSubHeader = (props) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [rid, setRid] = useState('')\n  const [anchorEl, setAnchorEl] = useState(null)\n  const [openCheckDialog, setOpenCheckDialog] = useState(false)\n  const open = Boolean(anchorEl)\n\n  useEffect(() => {\n    if (props.view === true) {\n      const id = window.location.pathname.split('/chat/room')[1]\n      if (id !== '') {\n        const path = id.split('/')[1]\n        setRid(path)\n      }\n    }\n  }, [rid])\n\n  const handleMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n  const handleRoomEdit = (rid) => {\n    setAnchorEl(null)\n    dispatch(push('/chat/edit/' + rid))\n  }\n  const handleRoomDelete = () => {\n    setAnchorEl(null)\n    dispatch(deleteChatRoom(rid))\n  }\n  const checkHandleClick = () => {\n    setAnchorEl(null)\n    setOpenCheckDialog(true)\n  }\n\n  return (\n    <AppBar position=\"static\" className={classes.appbar} color=\"inherit\">\n      <ActionCheckDialog\n        text={'ルームを削除してもよろしいですか？'}\n        buttonLabel={'削除'}\n        openDialog={openCheckDialog}\n        setOpenDialog={setOpenCheckDialog}\n        actionHandleClick={handleRoomDelete}\n      />\n\n      <Toolbar variant=\"dense\">\n        <Typography className={classes.title} variant=\"h6\">\n          {props.subtitle}\n        </Typography>\n\n        <div className={classes.grow} />\n\n        <div\n          className={\n            props.view && rid.length > 12\n              ? classes.menuButtonTrue\n              : classes.menuButtonFalse\n          }\n        >\n          <IconButton\n            className={classes.menuButton}\n            edge=\"end\"\n            aria-label=\"menu\"\n            onClick={handleMenuOpen}\n          >\n            <SettingsIcon className={classes.icon} />\n          </IconButton>\n          <Menu\n            id=\"menu-appbar\"\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            open={open}\n            onClose={() => setAnchorEl(null)}\n          >\n            <MenuItem onClick={() => handleRoomEdit(rid)}>ルーム編集</MenuItem>\n            <MenuItem onClick={() => checkHandleClick(rid)}>\n              ルーム削除\n            </MenuItem>\n          </Menu>\n        </div>\n      </Toolbar>\n    </AppBar>\n  )\n}\nexport default AppBarSubHeader\n","/Users/miyashota/project/react-app/src/script/components/M-ui/ClosableDrawer.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/index.js",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/NativeSelectBox.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/AddButton.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/AnswerRadio2.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/BlueButton.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/DateTimePicker.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/ErrorAlert.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/QuestionSelect.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Task/index.js",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/BlueButtonNomal.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/BlueInput.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/ToolTipTime.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/BlueInputOutlined.jsx",[],{"ruleId":"493","replacedBy":"494"},{"ruleId":"495","replacedBy":"496"},{"ruleId":"493","replacedBy":"497"},{"ruleId":"495","replacedBy":"498"},{"ruleId":"499","severity":1,"message":"500","line":18,"column":6,"nodeType":"501","endLine":18,"endColumn":8,"suggestions":"502"},{"ruleId":"503","severity":1,"message":"504","line":1,"column":8,"nodeType":"505","messageId":"506","endLine":1,"endColumn":16},{"ruleId":"503","severity":1,"message":"507","line":6,"column":3,"nodeType":"505","messageId":"506","endLine":6,"endColumn":24},{"ruleId":"493","replacedBy":"508"},{"ruleId":"495","replacedBy":"509"},{"ruleId":"493","replacedBy":"510"},{"ruleId":"495","replacedBy":"511"},{"ruleId":"493","replacedBy":"512"},{"ruleId":"495","replacedBy":"513"},{"ruleId":"493","replacedBy":"514"},{"ruleId":"495","replacedBy":"515"},{"ruleId":"503","severity":1,"message":"516","line":1,"column":8,"nodeType":"505","messageId":"506","endLine":1,"endColumn":13},{"ruleId":"503","severity":1,"message":"517","line":1,"column":17,"nodeType":"505","messageId":"506","endLine":1,"endColumn":28},{"ruleId":"503","severity":1,"message":"518","line":1,"column":30,"nodeType":"505","messageId":"506","endLine":1,"endColumn":38},{"ruleId":"503","severity":1,"message":"519","line":1,"column":40,"nodeType":"505","messageId":"506","endLine":1,"endColumn":49},{"ruleId":"503","severity":1,"message":"520","line":1,"column":51,"nodeType":"505","messageId":"506","endLine":1,"endColumn":57},{"ruleId":"503","severity":1,"message":"521","line":2,"column":10,"nodeType":"505","messageId":"506","endLine":2,"endColumn":17},{"ruleId":"503","severity":1,"message":"522","line":3,"column":8,"nodeType":"505","messageId":"506","endLine":3,"endColumn":23},{"ruleId":"523","severity":1,"message":"524","line":12,"column":38,"nodeType":"525","messageId":"526","endLine":12,"endColumn":39,"suggestions":"527"},{"ruleId":"493","replacedBy":"528"},{"ruleId":"495","replacedBy":"529"},{"ruleId":"493","replacedBy":"530"},{"ruleId":"495","replacedBy":"531"},{"ruleId":"503","severity":1,"message":"504","line":1,"column":8,"nodeType":"505","messageId":"506","endLine":1,"endColumn":16},{"ruleId":"532","severity":1,"message":"533","line":34,"column":19,"nodeType":"534","messageId":"535","endLine":34,"endColumn":20},{"ruleId":"493","replacedBy":"536"},{"ruleId":"495","replacedBy":"537"},{"ruleId":"493","replacedBy":"538"},{"ruleId":"495","replacedBy":"539"},{"ruleId":"493","replacedBy":"540"},{"ruleId":"495","replacedBy":"541"},{"ruleId":"503","severity":1,"message":"518","line":1,"column":17,"nodeType":"505","messageId":"506","endLine":1,"endColumn":25},{"ruleId":"503","severity":1,"message":"519","line":1,"column":27,"nodeType":"505","messageId":"506","endLine":1,"endColumn":36},{"ruleId":"503","severity":1,"message":"542","line":4,"column":10,"nodeType":"505","messageId":"506","endLine":4,"endColumn":12},{"ruleId":"503","severity":1,"message":"543","line":5,"column":10,"nodeType":"505","messageId":"506","endLine":5,"endColumn":19},{"ruleId":"499","severity":1,"message":"544","line":43,"column":6,"nodeType":"501","endLine":43,"endColumn":8,"suggestions":"545"},{"ruleId":"503","severity":1,"message":"518","line":1,"column":17,"nodeType":"505","messageId":"506","endLine":1,"endColumn":25},{"ruleId":"503","severity":1,"message":"517","line":1,"column":27,"nodeType":"505","messageId":"506","endLine":1,"endColumn":38},{"ruleId":"493","replacedBy":"546"},{"ruleId":"495","replacedBy":"547"},{"ruleId":"499","severity":1,"message":"548","line":121,"column":6,"nodeType":"501","endLine":121,"endColumn":8,"suggestions":"549"},{"ruleId":"499","severity":1,"message":"550","line":28,"column":6,"nodeType":"501","endLine":28,"endColumn":8,"suggestions":"551"},{"ruleId":"499","severity":1,"message":"550","line":30,"column":6,"nodeType":"501","endLine":30,"endColumn":8,"suggestions":"552"},{"ruleId":"503","severity":1,"message":"553","line":32,"column":9,"nodeType":"505","messageId":"506","endLine":32,"endColumn":21},{"ruleId":"499","severity":1,"message":"554","line":63,"column":6,"nodeType":"501","endLine":63,"endColumn":11,"suggestions":"555"},{"ruleId":"499","severity":1,"message":"550","line":30,"column":6,"nodeType":"501","endLine":30,"endColumn":8,"suggestions":"556"},{"ruleId":"499","severity":1,"message":"550","line":30,"column":6,"nodeType":"501","endLine":30,"endColumn":8,"suggestions":"557"},{"ruleId":"503","severity":1,"message":"558","line":24,"column":9,"nodeType":"505","messageId":"506","endLine":24,"endColumn":20},{"ruleId":"499","severity":1,"message":"554","line":44,"column":6,"nodeType":"501","endLine":44,"endColumn":8,"suggestions":"559"},{"ruleId":"499","severity":1,"message":"550","line":59,"column":6,"nodeType":"501","endLine":59,"endColumn":11,"suggestions":"560"},{"ruleId":"503","severity":1,"message":"561","line":38,"column":9,"nodeType":"505","messageId":"506","endLine":38,"endColumn":17},{"ruleId":"499","severity":1,"message":"562","line":142,"column":6,"nodeType":"501","endLine":142,"endColumn":8,"suggestions":"563"},{"ruleId":"499","severity":1,"message":"554","line":73,"column":6,"nodeType":"501","endLine":73,"endColumn":8,"suggestions":"564"},{"ruleId":"565","severity":1,"message":"566","line":80,"column":26,"nodeType":"567","endLine":80,"endColumn":30},{"ruleId":"503","severity":1,"message":"568","line":23,"column":9,"nodeType":"505","messageId":"506","endLine":23,"endColumn":16},{"ruleId":"499","severity":1,"message":"569","line":46,"column":6,"nodeType":"501","endLine":46,"endColumn":8,"suggestions":"570"},{"ruleId":"499","severity":1,"message":"571","line":84,"column":6,"nodeType":"501","endLine":84,"endColumn":8,"suggestions":"572"},{"ruleId":"499","severity":1,"message":"573","line":91,"column":24,"nodeType":"505","endLine":91,"endColumn":35},{"ruleId":"499","severity":1,"message":"574","line":56,"column":6,"nodeType":"501","endLine":56,"endColumn":8,"suggestions":"575"},{"ruleId":"499","severity":1,"message":"554","line":98,"column":6,"nodeType":"501","endLine":98,"endColumn":8,"suggestions":"576"},{"ruleId":"503","severity":1,"message":"519","line":1,"column":17,"nodeType":"505","messageId":"506","endLine":1,"endColumn":26},{"ruleId":"503","severity":1,"message":"577","line":2,"column":10,"nodeType":"505","messageId":"506","endLine":2,"endColumn":21},{"ruleId":"503","severity":1,"message":"578","line":2,"column":23,"nodeType":"505","messageId":"506","endLine":2,"endColumn":34},{"ruleId":"503","severity":1,"message":"579","line":4,"column":10,"nodeType":"505","messageId":"506","endLine":4,"endColumn":21},{"ruleId":"503","severity":1,"message":"580","line":5,"column":10,"nodeType":"505","messageId":"506","endLine":5,"endColumn":24},{"ruleId":"499","severity":1,"message":"569","line":102,"column":6,"nodeType":"501","endLine":102,"endColumn":8,"suggestions":"581"},{"ruleId":"565","severity":1,"message":"566","line":106,"column":37,"nodeType":"567","endLine":106,"endColumn":61},{"ruleId":"499","severity":1,"message":"571","line":57,"column":6,"nodeType":"501","endLine":57,"endColumn":11,"suggestions":"582"},{"ruleId":"499","severity":1,"message":"583","line":89,"column":6,"nodeType":"501","endLine":89,"endColumn":8,"suggestions":"584"},{"ruleId":"585","severity":1,"message":"586","line":56,"column":5,"nodeType":"587","messageId":"588","endLine":56,"endColumn":10},{"ruleId":"499","severity":1,"message":"554","line":164,"column":6,"nodeType":"501","endLine":164,"endColumn":8,"suggestions":"589"},{"ruleId":"499","severity":1,"message":"590","line":95,"column":6,"nodeType":"501","endLine":95,"endColumn":11,"suggestions":"591"},"no-native-reassign",["592"],"no-negated-in-lhs",["593"],["592"],["593"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'isSignedIn'. Either include them or remove the dependency array.","ArrayExpression",["594"],"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'deleteQuestionsAction' is defined but never used.",["592"],["593"],["592"],["593"],["592"],["593"],["592"],["593"],"'React' is defined but never used.","'useCallback' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'storage' is defined but never used.","'HTMLReactParser' is defined but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["595","596"],["592"],["593"],["592"],["593"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["592"],["593"],["592"],["593"],["592"],["593"],"'db' is defined but never used.","'getUserId' is defined but never used.","React Hook useEffect has missing dependencies: 'current_uid' and 'props.className'. Either include them or remove the dependency array.",["597"],["592"],["593"],"React Hook useEffect has missing dependencies: 'props.createrUid', 'props.currentUid', and 'props.mid'. Either include them or remove the dependency array.",["598"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["599"],["600"],"'handleChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'current_uid'. Either include it or remove the dependency array.",["601"],["602"],["603"],"'current_uid' is assigned a value but never used.",["604"],["605"],"'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'current_class', 'current_uid', and 'current_value'. Either include them or remove the dependency array.",["606"],["607"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.createrUid'. Either include it or remove the dependency array.",["608"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["609"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has missing dependencies: 'current_class' and 'dispatch'. Either include them or remove the dependency array.",["610"],["611"],"'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'readAnswers' is defined but never used.","'getAnswerLists' is defined but never used.",["612"],["613"],"React Hook useEffect has missing dependencies: 'props.createrUid', 'props.currentUid', and 'props.qid'. Either include them or remove the dependency array.",["614"],"no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected",["615"],"React Hook useEffect has a missing dependency: 'props.view'. Either include it or remove the dependency array.",["616"],"no-global-assign","no-unsafe-negation",{"desc":"617","fix":"618"},{"messageId":"619","fix":"620","desc":"621"},{"messageId":"622","fix":"623","desc":"624"},{"desc":"625","fix":"626"},{"desc":"627","fix":"628"},{"desc":"629","fix":"630"},{"desc":"629","fix":"631"},{"desc":"632","fix":"633"},{"desc":"629","fix":"634"},{"desc":"629","fix":"635"},{"desc":"636","fix":"637"},{"desc":"638","fix":"639"},{"desc":"640","fix":"641"},{"desc":"636","fix":"642"},{"desc":"643","fix":"644"},{"desc":"645","fix":"646"},{"desc":"647","fix":"648"},{"desc":"636","fix":"649"},{"desc":"643","fix":"650"},{"desc":"651","fix":"652"},{"desc":"653","fix":"654"},{"desc":"636","fix":"655"},{"desc":"656","fix":"657"},"Update the dependencies array to be: [dispatch, isSignedIn]",{"range":"658","text":"659"},"removeEscape",{"range":"660","text":"661"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"662","text":"663"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [current_uid, props.className]",{"range":"664","text":"665"},"Update the dependencies array to be: [props.createrUid, props.currentUid, props.mid]",{"range":"666","text":"667"},"Update the dependencies array to be: [dispatch]",{"range":"668","text":"669"},{"range":"670","text":"669"},"Update the dependencies array to be: [current_uid, tid]",{"range":"671","text":"672"},{"range":"673","text":"669"},{"range":"674","text":"669"},"Update the dependencies array to be: [current_uid]",{"range":"675","text":"676"},"Update the dependencies array to be: [dispatch, qid]",{"range":"677","text":"678"},"Update the dependencies array to be: [current_class, current_uid, current_value]",{"range":"679","text":"680"},{"range":"681","text":"676"},"Update the dependencies array to be: [props.createrUid]",{"range":"682","text":"683"},"Update the dependencies array to be: [props]",{"range":"684","text":"685"},"Update the dependencies array to be: [current_class, dispatch]",{"range":"686","text":"687"},{"range":"688","text":"676"},{"range":"689","text":"683"},"Update the dependencies array to be: [add, props]",{"range":"690","text":"691"},"Update the dependencies array to be: [props.createrUid, props.currentUid, props.qid]",{"range":"692","text":"693"},{"range":"694","text":"676"},"Update the dependencies array to be: [props.view, rid]",{"range":"695","text":"696"},[622,624],"[dispatch, isSignedIn]",[401,402],"",[401,401],"\\",[1471,1473],"[current_uid, props.className]",[3761,3763],"[props.createrUid, props.currentUid, props.mid]",[930,932],"[dispatch]",[990,992],[1831,1836],"[current_uid, tid]",[1073,1075],[1071,1073],[1335,1337],"[current_uid]",[1846,1851],"[dispatch, qid]",[4076,4078],"[current_class, current_uid, current_value]",[2140,2142],[1414,1416],"[props.createrUid]",[2333,2335],"[props]",[1950,1952],"[current_class, dispatch]",[2846,2848],[3134,3136],[1532,1537],"[add, props]",[2844,2846],"[props.createrUid, props.currentUid, props.qid]",[4127,4129],[2413,2418],"[props.view, rid]"]