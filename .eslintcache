[{"/Users/miyashota/project/react-app/src/reducks/store/store.js":"1","/Users/miyashota/project/react-app/src/reducks/store/initialState.js":"2","/Users/miyashota/project/react-app/src/reducks/chats/operations.js":"3","/Users/miyashota/project/react-app/src/App.js":"4","/Users/miyashota/project/react-app/src/reportWebVitals.js":"5","/Users/miyashota/project/react-app/src/reducks/users/operations.js":"6","/Users/miyashota/project/react-app/src/Auth.js":"7","/Users/miyashota/project/react-app/src/reducks/posts/actions.js":"8","/Users/miyashota/project/react-app/src/firebase/firebase.js":"9","/Users/miyashota/project/react-app/src/reducks/questions/operations.js":"10","/Users/miyashota/project/react-app/src/index.js":"11","/Users/miyashota/project/react-app/src/reducks/users/selectors.js":"12","/Users/miyashota/project/react-app/src/reducks/chats/selectors.js":"13","/Users/miyashota/project/react-app/src/reducks/posts/selectors.js":"14","/Users/miyashota/project/react-app/src/reducks/users/actions.js":"15","/Users/miyashota/project/react-app/src/firebase/config.js":"16","/Users/miyashota/project/react-app/src/reducks/questions/selectors.js":"17","/Users/miyashota/project/react-app/src/reducks/chats/actions.js":"18","/Users/miyashota/project/react-app/src/reducks/chats/reducers.js":"19","/Users/miyashota/project/react-app/src/reducks/users/reducers.js":"20","/Users/miyashota/project/react-app/src/functions/function.js":"21","/Users/miyashota/project/react-app/src/reducks/posts/operations.js":"22","/Users/miyashota/project/react-app/src/reducks/posts/reducers.js":"23","/Users/miyashota/project/react-app/src/reducks/questions/actions.js":"24","/Users/miyashota/project/react-app/src/reducks/missions/operations.js":"25","/Users/miyashota/project/react-app/src/reducks/questions/reducers.js":"26","/Users/miyashota/project/react-app/src/reducks/missions/actions.js":"27","/Users/miyashota/project/react-app/src/reducks/missions/selectors.js":"28","/Users/miyashota/project/react-app/src/reducks/missions/reducers.js":"29","/Users/miyashota/project/react-app/src/reducks/tasks/operations.js":"30","/Users/miyashota/project/react-app/src/reducks/tasks/reducers.js":"31","/Users/miyashota/project/react-app/src/reducks/tasks/actions.js":"32","/Users/miyashota/project/react-app/src/reducks/tasks/selectors.js":"33","/Users/miyashota/project/react-app/src/TemplateTheme.js":"34","/Users/miyashota/project/react-app/src/script/components/Chat/RoomUserList.jsx":"35","/Users/miyashota/project/react-app/src/script/components/Layout/ActionCheckDialog.jsx":"36","/Users/miyashota/project/react-app/src/script/components/Question/AnalyticsList.jsx":"37","/Users/miyashota/project/react-app/src/script/components/Setting/IconCropper.jsx":"38","/Users/miyashota/project/react-app/src/script/components/M-ui/SelectBox.jsx":"39","/Users/miyashota/project/react-app/src/script/components/M-ui/QuestionInput.jsx":"40","/Users/miyashota/project/react-app/src/script/components/M-ui/AnswerRadio3.jsx":"41","/Users/miyashota/project/react-app/src/script/components/M-ui/PinkButtonNomal.jsx":"42","/Users/miyashota/project/react-app/src/script/components/Mission/MissionList.jsx":"43","/Users/miyashota/project/react-app/src/script/pages/Post.jsx":"44","/Users/miyashota/project/react-app/src/script/pages/index.js":"45","/Users/miyashota/project/react-app/src/script/pages/RoomEdit.jsx":"46","/Users/miyashota/project/react-app/src/script/pages/Task.jsx":"47","/Users/miyashota/project/react-app/src/script/pages/TaskEdit.jsx":"48","/Users/miyashota/project/react-app/src/script/pages/Question.jsx":"49","/Users/miyashota/project/react-app/src/script/pages/AnswerEdit.jsx":"50","/Users/miyashota/project/react-app/src/script/pages/AuthEdit.jsx":"51","/Users/miyashota/project/react-app/src/script/pages/PostEdit.jsx":"52","/Users/miyashota/project/react-app/src/script/pages/Analytics.jsx":"53","/Users/miyashota/project/react-app/src/script/pages/Chat.jsx":"54","/Users/miyashota/project/react-app/src/script/pages/ChatMessage.jsx":"55","/Users/miyashota/project/react-app/src/script/pages/Collect.jsx":"56","/Users/miyashota/project/react-app/src/script/pages/Mission.jsx":"57","/Users/miyashota/project/react-app/src/script/pages/MissionEdit.jsx":"58","/Users/miyashota/project/react-app/src/script/pages/MissionSubmit.jsx":"59","/Users/miyashota/project/react-app/src/script/pages/ProfEdit.jsx":"60","/Users/miyashota/project/react-app/src/script/components/Question/index.js":"61","/Users/miyashota/project/react-app/src/script/pages/QuestionEdit.jsx":"62","/Users/miyashota/project/react-app/src/script/pages/ReIssue.jsx":"63","/Users/miyashota/project/react-app/src/script/pages/Schedule.jsx":"64","/Users/miyashota/project/react-app/src/script/pages/Setting.jsx":"65","/Users/miyashota/project/react-app/src/script/pages/SignIn.jsx":"66","/Users/miyashota/project/react-app/src/script/pages/SignUp.jsx":"67","/Users/miyashota/project/react-app/src/script/components/Task/TaskList.jsx":"68","/Users/miyashota/project/react-app/src/script/pages/UserDelete.jsx":"69","/Users/miyashota/project/react-app/src/script/components/Chat/ChatMessageComponent.jsx":"70","/Users/miyashota/project/react-app/src/script/components/Chat/ChatMessageList.jsx":"71","/Users/miyashota/project/react-app/src/script/components/Chat/ChatRoomList.jsx":"72","/Users/miyashota/project/react-app/src/script/components/Layout/CheckViewDialog.jsx":"73","/Users/miyashota/project/react-app/src/script/components/Layout/Header.jsx":"74","/Users/miyashota/project/react-app/src/script/components/Layout/Nav.jsx":"75","/Users/miyashota/project/react-app/src/script/components/Layout/ProfDialog.jsx":"76","/Users/miyashota/project/react-app/src/script/components/Mission/CollectList.jsx":"77","/Users/miyashota/project/react-app/src/script/components/Post/PostList.jsx":"78","/Users/miyashota/project/react-app/src/script/components/Question/QuestionComponent.jsx":"79","/Users/miyashota/project/react-app/src/script/components/Question/QuestionList.jsx":"80","/Users/miyashota/project/react-app/src/script/components/Task/TaskTab.jsx":"81","/Users/miyashota/project/react-app/src/script/components/M-ui/AppBarHeader.jsx":"82","/Users/miyashota/project/react-app/src/script/components/M-ui/AppBarSubHeader.jsx":"83","/Users/miyashota/project/react-app/src/script/components/M-ui/ClosableDrawer.jsx":"84","/Users/miyashota/project/react-app/src/script/components/M-ui/index.js":"85","/Users/miyashota/project/react-app/src/script/components/M-ui/NativeSelectBox.jsx":"86","/Users/miyashota/project/react-app/src/script/components/M-ui/AddButton.jsx":"87","/Users/miyashota/project/react-app/src/script/components/M-ui/AnswerRadio2.jsx":"88","/Users/miyashota/project/react-app/src/script/components/M-ui/BlueButton.jsx":"89","/Users/miyashota/project/react-app/src/script/components/M-ui/DateTimePicker.jsx":"90","/Users/miyashota/project/react-app/src/script/components/M-ui/ErrorAlert.jsx":"91","/Users/miyashota/project/react-app/src/script/components/M-ui/QuestionSelect.jsx":"92","/Users/miyashota/project/react-app/src/script/components/Task/index.js":"93","/Users/miyashota/project/react-app/src/script/components/M-ui/BlueButtonNomal.jsx":"94","/Users/miyashota/project/react-app/src/script/components/M-ui/BlueInput.jsx":"95","/Users/miyashota/project/react-app/src/script/components/M-ui/ToolTipTime.jsx":"96","/Users/miyashota/project/react-app/src/script/components/M-ui/BlueInputOutlined.jsx":"97","/Users/miyashota/project/react-app/src/script/components/M-ui/PinkButton.jsx":"98","/Users/miyashota/project/react-app/src/script/components/Chat/index.js":"99","/Users/miyashota/project/react-app/src/script/components/M-ui/IconUpload.jsx":"100","/Users/miyashota/project/react-app/src/script/components/Mission/index.js":"101","/Users/miyashota/project/react-app/src/script/components/M-ui/FileDelete.jsx":"102","/Users/miyashota/project/react-app/src/script/components/M-ui/ToolTip.jsx":"103"},{"size":1849,"mtime":1617251262996,"results":"104","hashOfConfig":"105"},{"size":474,"mtime":1617131774942,"results":"106","hashOfConfig":"107"},{"size":6193,"mtime":1615301873552,"results":"108","hashOfConfig":"107"},{"size":2383,"mtime":1617259274949,"results":"109","hashOfConfig":"105"},{"size":356,"mtime":1609345151014,"results":"110","hashOfConfig":"107"},{"size":11639,"mtime":1617262482512,"results":"111","hashOfConfig":"105"},{"size":1128,"mtime":1617258747503,"results":"112","hashOfConfig":"105"},{"size":296,"mtime":1617251262995,"results":"113","hashOfConfig":"105"},{"size":452,"mtime":1617251262992,"results":"114","hashOfConfig":"105"},{"size":5505,"mtime":1615301765177,"results":"115","hashOfConfig":"107"},{"size":1164,"mtime":1617258747503,"results":"116","hashOfConfig":"105"},{"size":900,"mtime":1617158294708,"results":"117","hashOfConfig":"107"},{"size":253,"mtime":1617251262993,"results":"118","hashOfConfig":"105"},{"size":254,"mtime":1610856734092,"results":"119","hashOfConfig":"107"},{"size":430,"mtime":1617251262997,"results":"120","hashOfConfig":"105"},{"size":349,"mtime":1609698268328,"results":"121","hashOfConfig":"107"},{"size":566,"mtime":1617251262996,"results":"122","hashOfConfig":"105"},{"size":300,"mtime":1617251262993,"results":"123","hashOfConfig":"105"},{"size":506,"mtime":1617251262993,"results":"124","hashOfConfig":"105"},{"size":570,"mtime":1617161887323,"results":"125","hashOfConfig":"107"},{"size":2090,"mtime":1617251262992,"results":"126","hashOfConfig":"105"},{"size":4356,"mtime":1617251262995,"results":"127","hashOfConfig":"105"},{"size":513,"mtime":1612666103769,"results":"128","hashOfConfig":"107"},{"size":1203,"mtime":1617251262995,"results":"129","hashOfConfig":"105"},{"size":6188,"mtime":1615367083221,"results":"130","hashOfConfig":"107"},{"size":1234,"mtime":1617251262996,"results":"131","hashOfConfig":"105"},{"size":333,"mtime":1617251262994,"results":"132","hashOfConfig":"105"},{"size":265,"mtime":1617251262994,"results":"133","hashOfConfig":"105"},{"size":525,"mtime":1617251262994,"results":"134","hashOfConfig":"105"},{"size":6178,"mtime":1617251262997,"results":"135","hashOfConfig":"105"},{"size":910,"mtime":1613057767556,"results":"136","hashOfConfig":"107"},{"size":710,"mtime":1617251262996,"results":"137","hashOfConfig":"105"},{"size":448,"mtime":1617251262997,"results":"138","hashOfConfig":"105"},{"size":1148,"mtime":1617258747450,"results":"139","hashOfConfig":"105"},{"size":2962,"mtime":1617236900917,"results":"140","hashOfConfig":"107"},{"size":1469,"mtime":1617251262999,"results":"141","hashOfConfig":"105"},{"size":4027,"mtime":1617131774948,"results":"142","hashOfConfig":"107"},{"size":797,"mtime":1617164064571,"results":"143","hashOfConfig":"107"},{"size":1149,"mtime":1617260159346,"results":"144","hashOfConfig":"105"},{"size":655,"mtime":1615823876646,"results":"145","hashOfConfig":"107"},{"size":1409,"mtime":1612235275158,"results":"146","hashOfConfig":"107"},{"size":725,"mtime":1617131774960,"results":"147","hashOfConfig":"107"},{"size":7773,"mtime":1617264181601,"results":"148","hashOfConfig":"105"},{"size":1876,"mtime":1617258747489,"results":"149","hashOfConfig":"105"},{"size":1134,"mtime":1617251263012,"results":"150","hashOfConfig":"105"},{"size":6730,"mtime":1617244723496,"results":"151","hashOfConfig":"107"},{"size":1819,"mtime":1617251263011,"results":"152","hashOfConfig":"105"},{"size":5134,"mtime":1617244845272,"results":"153","hashOfConfig":"107"},{"size":2111,"mtime":1617244581253,"results":"154","hashOfConfig":"107"},{"size":3923,"mtime":1617264809352,"results":"155","hashOfConfig":"105"},{"size":4916,"mtime":1617261460637,"results":"156","hashOfConfig":"105"},{"size":6127,"mtime":1617263116435,"results":"157","hashOfConfig":"105"},{"size":1690,"mtime":1617245184854,"results":"158","hashOfConfig":"107"},{"size":954,"mtime":1617244415599,"results":"159","hashOfConfig":"107"},{"size":501,"mtime":1617251263008,"results":"160","hashOfConfig":"105"},{"size":1567,"mtime":1617244449845,"results":"161","hashOfConfig":"107"},{"size":2162,"mtime":1617244473872,"results":"162","hashOfConfig":"107"},{"size":6973,"mtime":1617263526376,"results":"163","hashOfConfig":"105"},{"size":3791,"mtime":1617251263009,"results":"164","hashOfConfig":"105"},{"size":3667,"mtime":1617244575288,"results":"165","hashOfConfig":"107"},{"size":183,"mtime":1617251263007,"results":"166","hashOfConfig":"105"},{"size":5748,"mtime":1617260281458,"results":"167","hashOfConfig":"105"},{"size":2067,"mtime":1617251263010,"results":"168","hashOfConfig":"105"},{"size":5755,"mtime":1617259351996,"results":"169","hashOfConfig":"105"},{"size":5579,"mtime":1617251263011,"results":"170","hashOfConfig":"105"},{"size":3491,"mtime":1617265627003,"results":"171","hashOfConfig":"105"},{"size":5301,"mtime":1617260189054,"results":"172","hashOfConfig":"105"},{"size":3101,"mtime":1617258747491,"results":"173","hashOfConfig":"105"},{"size":3134,"mtime":1617261335373,"results":"174","hashOfConfig":"105"},{"size":3186,"mtime":1617244901500,"results":"175","hashOfConfig":"107"},{"size":4623,"mtime":1617251262998,"results":"176","hashOfConfig":"105"},{"size":3548,"mtime":1617251262999,"results":"177","hashOfConfig":"105"},{"size":8118,"mtime":1617265279948,"results":"178","hashOfConfig":"105"},{"size":287,"mtime":1617251263000,"results":"179","hashOfConfig":"105"},{"size":5646,"mtime":1617246050078,"results":"180","hashOfConfig":"107"},{"size":3980,"mtime":1617251263000,"results":"181","hashOfConfig":"105"},{"size":3236,"mtime":1617258747496,"results":"182","hashOfConfig":"105"},{"size":6494,"mtime":1617264155809,"results":"183","hashOfConfig":"105"},{"size":3662,"mtime":1617264599699,"results":"184","hashOfConfig":"105"},{"size":5992,"mtime":1617264156730,"results":"185","hashOfConfig":"105"},{"size":2390,"mtime":1617245621357,"results":"186","hashOfConfig":"107"},{"size":6659,"mtime":1617258747498,"results":"187","hashOfConfig":"105"},{"size":4445,"mtime":1617245481014,"results":"188","hashOfConfig":"107"},{"size":5082,"mtime":1617246099863,"results":"189","hashOfConfig":"107"},{"size":1638,"mtime":1617251263006,"results":"190","hashOfConfig":"105"},{"size":1936,"mtime":1617246193570,"results":"191","hashOfConfig":"107"},{"size":561,"mtime":1617247046784,"results":"192","hashOfConfig":"107"},{"size":1272,"mtime":1617247058486,"results":"193","hashOfConfig":"107"},{"size":792,"mtime":1617251263001,"results":"194","hashOfConfig":"105"},{"size":1180,"mtime":1617251263002,"results":"195","hashOfConfig":"105"},{"size":505,"mtime":1617251263003,"results":"196","hashOfConfig":"105"},{"size":1321,"mtime":1617251263005,"results":"197","hashOfConfig":"105"},{"size":96,"mtime":1617251263008,"results":"198","hashOfConfig":"105"},{"size":771,"mtime":1617251263002,"results":"199","hashOfConfig":"105"},{"size":721,"mtime":1617260626747,"results":"200","hashOfConfig":"105"},{"size":687,"mtime":1617251263006,"results":"201","hashOfConfig":"105"},{"size":659,"mtime":1617251263002,"results":"202","hashOfConfig":"105"},{"size":830,"mtime":1617251263005,"results":"203","hashOfConfig":"105"},{"size":313,"mtime":1617251262999,"results":"204","hashOfConfig":"105"},{"size":1424,"mtime":1617251263004,"results":"205","hashOfConfig":"105"},{"size":110,"mtime":1617251263006,"results":"206","hashOfConfig":"105"},{"size":961,"mtime":1617251263003,"results":"207","hashOfConfig":"105"},{"size":700,"mtime":1617251263006,"results":"208","hashOfConfig":"105"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},"rsahja",{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},"noc2iu",{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"235"},{"filePath":"236","messages":"237","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"214"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"303"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"225"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"254"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"214"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"225"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"225"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"225"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"371","messages":"372","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"279"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"214"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/miyashota/project/react-app/src/reducks/store/store.js",[],["440","441"],"/Users/miyashota/project/react-app/src/reducks/store/initialState.js",[],["442","443"],"/Users/miyashota/project/react-app/src/reducks/chats/operations.js",[],"/Users/miyashota/project/react-app/src/App.js",[],"/Users/miyashota/project/react-app/src/reportWebVitals.js",[],["444","445"],"/Users/miyashota/project/react-app/src/reducks/users/operations.js",["446"],"import { push } from 'connected-react-router'\nimport {\n  auth,\n  storage,\n  db,\n  FirebaseTimestamp,\n} from '../../firebase/firebase.js'\nimport { signInAction, signOutAction, updateThemeAction } from './actions'\nimport {\n  isValidEmailFormat,\n  isValidRequiredInput,\n} from '../../functions/function.js'\nimport { getUserId } from './selectors.js'\n/* ===================================================================== */\n\nconst usersRef = db.collection('users')\n\nexport const signIn = (email, password) => {\n  return async (dispatch) => {\n    if (!isValidRequiredInput(email, password)) {\n      alert('全ての項目を入力してください。')\n      return false\n    }\n    if (!isValidEmailFormat(email)) {\n      alert('メールアドレスの形式が不正です。もう1度お試しください。')\n      return false\n    }\n\n    return auth\n      .signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        const userState = result.user\n\n        if (!userState) {\n          throw new Error('ユーザーIDを取得できません')\n        }\n        const userId = userState.uid\n\n        usersRef\n          .doc(userId)\n          .get()\n          .then((snapshot) => {\n            const data = snapshot.data()\n            if (!data) {\n              throw new Error('ユーザーデータが存在しません')\n            }\n\n            dispatch(\n              signInAction({\n                is_signin: true,\n                uid: data.uid,\n                icon: data.icon,\n                user_name: data.user_name,\n                user_value: data.user_value,\n                user_number: data.user_number,\n                class_name: data.class_name,\n                dark_mode: data.dark_mode,\n              })\n            )\n            dispatch(push('/post'))\n          })\n      })\n      .catch((error) => {\n        var errorCode = error.code\n        const errmsg = ErrorMessage(errorCode)\n        alert(errorCode + ' : ' + errmsg)\n      })\n  }\n}\n\nexport const signOut = () => {\n  return async (dispatch) => {\n    auth\n      .signOut()\n      .then(() => {\n        dispatch(signOutAction())\n      })\n      .then(() => {\n        dispatch(push('./signin'))\n      })\n      .catch(() => {\n        throw new Error('サインアウトに失敗しました。')\n      })\n  }\n}\n\nexport const signUp = (\n  userValue,\n  userName,\n  gender,\n  userNumber,\n  className,\n  email,\n  password,\n  confirmPassword\n) => {\n  return async (dispatch) => {\n    // 教官-------------------------------------------------------\n    if (userValue === 'teacher') {\n      if (\n        !isValidRequiredInput(\n          userName,\n          gender,\n          userNumber,\n          email,\n          password,\n          confirmPassword\n        )\n      ) {\n        alert('全ての項目を入力してください。')\n        return false\n      }\n      if (userNumber.length !== 3) {\n        alert('教官番号は3桁の数字で入力してください。')\n        return false\n      }\n    }\n    // 学生-------------------------------------------------------\n    else if (userValue === 'student') {\n      if (\n        !isValidRequiredInput(\n          userName,\n          gender,\n          userNumber,\n          className,\n          email,\n          password,\n          confirmPassword\n        )\n      ) {\n        alert('全ての項目を入力してください。')\n        return false\n      }\n      if (userNumber.length !== 5) {\n        alert('学籍番号は5桁の数字で入力してください。')\n        return false\n      }\n    } else {\n      alert('ユーザー属性を選択してください。')\n      return false\n    }\n\n    if (!isValidEmailFormat(email)) {\n      alert('メールアドレスの形式が不正です。もう1度お試しください。')\n      return false\n    }\n\n    if (password !== confirmPassword) {\n      alert('パスワードが一致しません。')\n      return false\n    }\n\n    if (password.length < 6) {\n      alert('パスワードは6文字以上で入力してください。')\n      return false\n    }\n\n    return auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        const user = result.user\n\n        if (user) {\n          const uid = user.uid\n          const timeStamp = FirebaseTimestamp.now()\n\n          const userInitialData = {\n            uid: uid,\n            user_value: userValue,\n            gender: gender,\n            user_name: userName,\n            user_number: userNumber,\n            class_name: className,\n            email: email,\n            prof: '',\n            icon: '',\n            update_time: timeStamp,\n            create_time: timeStamp,\n            dark_mode: false,\n          }\n          if (userInitialData.class_name === '') {\n            userInitialData.class_name = '教官'\n          }\n          usersRef\n            .doc(uid)\n            .set(userInitialData)\n            .then(() => {\n              dispatch(push('/post'))\n            })\n        }\n      })\n      .catch((error) => {\n        var errorCode = error.code\n        const errmsg = ErrorMessage(errorCode)\n        alert(errorCode + ' : ' + errmsg)\n      })\n  }\n}\n\nexport const listenAuthState = () => {\n  return async (dispatch) => {\n    return auth.onAuthStateChanged((user) => {\n      if (user) {\n        usersRef\n          .doc(user.uid)\n          .get()\n          .then((snapshot) => {\n            const timeStamp = FirebaseTimestamp.now()\n            const timeData = {\n              update_time: timeStamp,\n            }\n\n            usersRef.doc(user.uid).set(timeData, { merge: true })\n\n            const data = snapshot.data()\n            dispatch(\n              signInAction({\n                is_signin: true,\n                uid: data.uid,\n                icon: data.icon,\n                user_name: data.user_name,\n                user_value: data.user_value,\n                user_number: data.user_number,\n                class_name: data.class_name,\n                dark_mode: data.dark_mode,\n              })\n            )\n            dispatch(push('/post'))\n          })\n      } else dispatch(push('/signin'))\n    })\n  }\n}\n\nexport const reIssue = (email) => {\n  return async (dispatch) => {\n    if (!isValidEmailFormat(email)) {\n      alert('メールアドレスの形式が不正です。')\n      return false\n    } else {\n      auth\n        .sendPasswordResetEmail(email)\n        .then(() => {\n          alert(\n            '入力されたメールアドレスにパスワード再発行用のメールを送りました。'\n          )\n          dispatch(push('./signin'))\n        })\n        .catch(() => {\n          alert('登録されていないメールアドレスです。もう一度ご確認ください。')\n        })\n    }\n  }\n}\n\nexport const createProf = (uid, prof, blob) => {\n  return async (dispatch) => {\n    const data = {\n      prof: prof,\n    }\n    usersRef\n      .doc(uid)\n      .set(data, { merge: true })\n      .then(() => {\n        if (blob === null) {\n          dispatch(push('/setting'))\n        } else {\n          dispatch(createIcon(uid, blob))\n        }\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const updateTheme = (uid, type) => {\n  return async (dispatch) => {\n    const data = {\n      dark_mode: type,\n    }\n    usersRef\n      .doc(uid)\n      .set(data, { merge: true })\n      .then(() => {\n        dispatch(updateThemeAction(data))\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const createIcon = (uid, blob) => {\n  return async (dispatch) => {\n    const uploadRef = storage.ref('icons').child(uid)\n    const uploadTask = uploadRef.put(blob, { contentType: blob.type })\n    uploadTask\n      .then(() => {\n        return uploadTask.snapshot.ref.getDownloadURL()\n      })\n      .then((downloadURL) => {\n        const iconData = { id: uid, path: downloadURL }\n        const data = {\n          icon: iconData,\n        }\n        usersRef\n          .doc(uid)\n          .set(data, { merge: true })\n          .then(() => {\n            dispatch(push('/setting'))\n          })\n          .catch((error) => {\n            throw new Error(error)\n          })\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const updateEmail = (email, password, newEmail) => {\n  return async (dispatch, getState) => {\n    const state = getState()\n    const userId = state.users.uid\n    const data = {\n      email: newEmail,\n    }\n    return auth\n      .signInWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        userCredential.user.updateEmail(newEmail).then(() => {\n          usersRef.doc(userId).set(data, { merge: true })\n          dispatch(push('/setting'))\n        })\n      })\n      .catch((error) => {\n        var errorCode = error.code\n        const errmsg = ErrorMessage(errorCode)\n        alert(errorCode + ' : ' + errmsg)\n      })\n  }\n}\n\nexport const updatePassword = (email, password, newPassword) => {\n  return async (dispatch) => {\n    return auth\n      .signInWithEmailAndPassword(email, password)\n      .then(function (userCredential) {\n        userCredential.user.updatePassword(newPassword).then(() => {\n          dispatch(push('/setting'))\n        })\n      })\n      .catch((error) => {\n        var errorCode = error.code\n        const errmsg = ErrorMessage(errorCode)\n        alert(errorCode + ' : ' + errmsg)\n      })\n  }\n}\n\nexport const userDelete = (email, password) => {\n  return async (dispatch, getState) => {\n    const state = getState()\n    const userId = state.users.uid\n    return auth\n      .signInWithEmailAndPassword(email, password)\n      .then(function (userCredential) {\n        userCredential.user.delete()\n        usersRef.doc(userId).delete()\n        storage.ref('icons').child(userId).delete()\n        dispatch(push('/signin'))\n        alert('Smoothlyをご利用いただき ありがとうございました。')\n      })\n      .catch((error) => {\n        var errorCode = error.code\n        const errmsg = ErrorMessage(errorCode)\n        alert(errorCode + ' : ' + errmsg)\n      })\n  }\n}\n\nconst ErrorMessage = (e) => {\n  switch (e) {\n    case 'auth/cancelled-popup-request':\n    case 'auth/popup-closed-by-user':\n      return null\n    case 'auth/email-already-in-use':\n      return 'このメールアドレスは使用されています'\n    case 'auth/invalid-email':\n      return 'メールアドレスの形式が正しくありません'\n    case 'auth/user-disabled':\n      return 'サービスの利用が停止されています'\n    case 'auth/user-not-found':\n      return 'メールアドレスまたはパスワードが違います'\n    case 'auth/user-mismatch':\n      return 'メールアドレスまたはパスワードが違います'\n    case 'auth/weak-password':\n      return 'パスワードは6文字以上にしてください'\n    case 'auth/wrong-password':\n      return 'メールアドレスまたはパスワードが違います'\n    case 'auth/popup-blocked':\n      return '認証ポップアップがブロックされました。ポップアップブロックをご利用の場合は設定を解除してください'\n    case 'auth/operation-not-supported-in-this-environment':\n    case 'auth/auth-domain-config-required':\n    case 'auth/operation-not-allowed':\n    case 'auth/unauthorized-domain':\n      return '現在この認証方法はご利用頂けません'\n    case 'auth/requires-recent-login':\n      return '認証の有効期限が切れています'\n    default:\n      return '認証に失敗しました。しばらく時間をおいて再度お試しください'\n  }\n}\n",["447","448"],"/Users/miyashota/project/react-app/src/Auth.js",["449"],"/Users/miyashota/project/react-app/src/reducks/posts/actions.js",[],"/Users/miyashota/project/react-app/src/firebase/firebase.js",[],"/Users/miyashota/project/react-app/src/reducks/questions/operations.js",["450","451"],"import firebase from 'firebase/app'\nimport { push } from 'connected-react-router'\nimport { db, FirebaseTimestamp } from '../../firebase/firebase'\nimport {\n  readQuestionsAction,\n  deleteQuestionsAction,\n  addQuestionItemAction,\n  deleteQuestionItemAction,\n  readQuestionItemAction,\n  readAnswersAction,\n} from './actions.js'\n/* ===================================================================== */\n\nconst questionsRef = db.collection('questions')\nconst schedulesRef = db.collection('schedules')\n\nexport const readQuestions = () => {\n  return async (dispatch, getState) => {\n    const state = getState()\n    const userId = state.users.uid\n    const className = state.users.class_name\n    const userValue = state.users.user_value\n\n    questionsRef\n      // .where('limit_time', '>', new Date())\n      .orderBy('limit_time', 'asc')\n      .onSnapshot((snapshots) => {\n        const questionList = []\n        snapshots.forEach((snapshot) => {\n          const question = snapshot.data()\n          if (question.destination === 'all') {\n            questionList.push(question)\n          } else if (question.destination === userValue) {\n            questionList.push(question)\n          } else if (question.destination === className) {\n            questionList.push(question)\n          } else if (question.creater_uid === userId) {\n            questionList.push(question)\n          }\n        })\n        dispatch(readQuestionsAction(questionList))\n      })\n  }\n}\n\nexport const createQuestions = (\n  qid,\n  destination,\n  title,\n  item,\n  limitTime,\n  questionData\n) => {\n  return async (dispatch, getState) => {\n    let nullData = ''\n    if (destination === '') {\n      nullData = nullData + '【投稿先】'\n    }\n    if (title === '') {\n      nullData = nullData + '【タイトル】'\n    }\n    if (limitTime === '') {\n      nullData = nullData + '【期限】'\n    }\n    if (questionData.length === 0) {\n      nullData = nullData + '【質問】'\n    }\n    if (nullData !== '') {\n      alert(`項目：${nullData}を入力してください。`)\n      return false\n    }\n\n    const state = getState()\n    const userId = state.users.uid\n    const timestamp = FirebaseTimestamp.now()\n    const data = {\n      destination: destination,\n      title: title,\n      item: item,\n      limit_time: limitTime,\n      question_data: questionData,\n      creater_uid: userId,\n      update_time: timestamp,\n    }\n    if (qid === '') {\n      const ref = questionsRef.doc()\n      data.created_time = timestamp\n      // 要注意！！ドキュメントのIDだよ！\n      qid = ref.id\n      data.qid = qid\n    }\n\n    const task = {\n      doc: qid,\n      title: title,\n      startDate: timestamp,\n      endDate: limitTime,\n      tag: '3',\n      destination: destination,\n      creater_uid: userId,\n    }\n\n    return questionsRef\n      .doc(qid)\n      .set(data, { merge: true })\n      .then(() => {\n        schedulesRef\n          .doc(qid)\n          .set(task, { merge: true })\n          .then(() => {\n            dispatch(push('/question'))\n          })\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const deleteQuestions = (qid) => {\n  return async (dispatch, getState) => {\n    questionsRef\n      .doc(qid)\n      .delete()\n      .then(() => {\n        schedulesRef\n          .doc(qid)\n          .delete()\n          .then(() => {\n            dispatch(push('/question'))\n          })\n      })\n  }\n}\n\nexport const addQuestionItem = (questionItem, questionType) => {\n  return async (dispatch) => {\n    if (questionItem === '' || questionType === '') {\n      alert('質問内容と質問のタイプを入力してください。')\n      return false\n    }\n    const data = {\n      item: questionItem,\n      type: questionType,\n    }\n    dispatch(addQuestionItemAction(data))\n  }\n}\n\nexport const deleteQuestionItem = (index) => {\n  return async (dispatch) => {\n    dispatch(deleteQuestionItemAction(index))\n  }\n}\n\nexport const readQuestionItem = (questionData) => {\n  return async (dispatch) => {\n    const data = questionData\n    dispatch(readQuestionItemAction(data))\n  }\n}\n\nexport const readAnswers = (qid) => {\n  return async (dispatch) => {\n    questionsRef\n      .doc(qid)\n      .collection('answers')\n      .orderBy('answer_class', 'desc')\n      .get()\n      .then((snapshots) => {\n        const AnswersList = []\n        snapshots.forEach((snapshots) => {\n          const answers = snapshots.data()\n          AnswersList.push(answers)\n        })\n        dispatch(readAnswersAction(AnswersList))\n      })\n  }\n}\n\nexport const createAnswers = (qid, answerData) => {\n  return async (dispatch, getState) => {\n    const state = getState()\n    const userId = state.users.uid\n    const userName = state.users.user_name\n    const userValue = state.users.user_value\n    const userNumber = state.users.user_number\n    const className = state.users.class_name\n\n    const timestamp = FirebaseTimestamp.now()\n    const ref = questionsRef.doc().collection('answers').doc()\n    const aid = ref.id\n\n    const data = {\n      aid: aid,\n      answer_uid: userId,\n      answer_name: userName,\n      answer_value: userValue,\n      answer_number: userNumber,\n      answer_class: className,\n      answer_data: answerData,\n      answer_time: timestamp,\n    }\n\n    return questionsRef\n      .doc(qid)\n      .collection('answers')\n      .doc(userId)\n      .set(data)\n      .then(() => {\n        dispatch(push('/question'))\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n",["452","453"],"/Users/miyashota/project/react-app/src/index.js",["454"],"/Users/miyashota/project/react-app/src/reducks/users/selectors.js",[],["455","456"],"/Users/miyashota/project/react-app/src/reducks/chats/selectors.js",[],"/Users/miyashota/project/react-app/src/reducks/posts/selectors.js",[],["457","458"],"/Users/miyashota/project/react-app/src/reducks/users/actions.js",[],"/Users/miyashota/project/react-app/src/firebase/config.js",[],"/Users/miyashota/project/react-app/src/reducks/questions/selectors.js",[],"/Users/miyashota/project/react-app/src/reducks/chats/actions.js",[],["459","460"],"/Users/miyashota/project/react-app/src/reducks/chats/reducers.js",[],"/Users/miyashota/project/react-app/src/reducks/users/reducers.js",[],"/Users/miyashota/project/react-app/src/functions/function.js",["461","462","463","464","465","466","467","468"],"/Users/miyashota/project/react-app/src/reducks/posts/operations.js",[],"/Users/miyashota/project/react-app/src/reducks/posts/reducers.js",[],["469","470"],"/Users/miyashota/project/react-app/src/reducks/questions/actions.js",[],"/Users/miyashota/project/react-app/src/reducks/missions/operations.js",["471"],"import firebase from 'firebase/app'\nimport { push } from 'connected-react-router'\nimport { db, FirebaseTimestamp, storage } from '../../firebase/firebase'\nimport { readMissionsAction, deleteMissionsAction } from './actions.js'\n/* ===================================================================== */\n\nconst missionsRef = db.collection('missions')\nconst schedulesRef = db.collection('schedules')\n\nexport const readMissions = () => {\n  return async (dispatch, getState) => {\n    const state = getState()\n    const userId = state.users.uid\n    const className = state.users.class_name\n    const userValue = state.users.user_value\n\n    missionsRef\n      // .where('limit_time', '>', new Date())\n      .orderBy('limit_time', 'asc')\n      .get()\n      .then((snapshots) => {\n        // .onSnapshot((snapshots) => {\n        const missionList = []\n        snapshots.forEach((snapshot) => {\n          const mission = snapshot.data()\n          if (mission.destination === userValue) {\n            missionList.push(mission)\n          } else if (mission.destination === className) {\n            missionList.push(mission)\n          } else if (mission.creater_uid === userId) {\n            missionList.push(mission)\n          }\n        })\n        dispatch(readMissionsAction(missionList))\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const createMissison = (\n  mid,\n  destination,\n  title,\n  item,\n  limitTime,\n  file,\n  fileName\n) => {\n  return async (dispatch, getState) => {\n    let nullData = ''\n    if (destination === '') {\n      nullData = nullData + '【投稿先】'\n    }\n    if (title === '') {\n      nullData = nullData + '【タイトル】'\n    }\n    if (item === '') {\n      nullData = nullData + '【内容】'\n    }\n    if (limitTime === '') {\n      nullData = nullData + '【期限】'\n    }\n    if (nullData !== '') {\n      alert(`項目：${nullData}を入力してください。`)\n      return false\n    }\n\n    const state = getState()\n    const userId = state.users.uid\n    const timestamp = FirebaseTimestamp.now()\n    let data = {}\n    if (fileName === '') {\n      data = {\n        destination: destination,\n        title: title,\n        item: item,\n        file: '',\n        limit_time: limitTime,\n        creater_uid: userId,\n        update_time: timestamp,\n      }\n    } else {\n      data = {\n        destination: destination,\n        title: title,\n        item: item,\n        limit_time: limitTime,\n        creater_uid: userId,\n        update_time: timestamp,\n      }\n    }\n\n    if (mid === '') {\n      const ref = missionsRef.doc()\n      data.created_time = timestamp\n      // 要注意！！ドキュメントのIDだよ！\n      mid = ref.id\n      data.mid = mid\n    }\n    const task = {\n      doc: mid,\n      title: title,\n      startDate: timestamp,\n      endDate: limitTime,\n      tag: '2',\n      destination: destination,\n      creater_uid: userId,\n    }\n\n    return missionsRef\n      .doc(mid)\n      .set(data, { merge: true })\n      .then(() => {\n        schedulesRef\n          .doc(mid)\n          .set(task, { merge: true })\n          .then(() => {\n            if (fileName !== '' && file === '') {\n              dispatch(push('/mission'))\n            } else if (fileName === '' && file === '') {\n              dispatch(push('/mission'))\n            } else {\n              dispatch(createFile(mid, file, fileName))\n            }\n          })\n          .catch((error) => {\n            throw new Error(error)\n          })\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const deleteMission = (mid) => {\n  return async (dispatch, getState) => {\n    missionsRef\n      .doc(mid)\n      .delete()\n      .then(() => {\n        schedulesRef.doc(mid).delete()\n        storage.ref('mission_files').child(mid).delete()\n        const prevMissions = getState().missions.list\n        const nextMissions = prevMissions.filter(\n          (mission) => mission.mid !== mid\n        )\n        dispatch(deleteMissionsAction(nextMissions))\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const createFile = (mid, file, fileName) => {\n  return async (dispatch) => {\n    const uploadRef = storage.ref('mission_files').child(mid)\n    const uploadTask = uploadRef.put(file)\n\n    uploadTask\n      .then(() => {\n        return uploadTask.snapshot.ref.getDownloadURL()\n      })\n      .then((downloadURL) => {\n        const fileData = { id: mid, path: downloadURL, file_name: fileName }\n        const data = {\n          file: fileData,\n        }\n        missionsRef\n          .doc(mid)\n          .set(data, { merge: true })\n          .then(() => {\n            dispatch(push('/mission'))\n          })\n          .catch((error) => {\n            throw new Error(error)\n          })\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const deleteFile = (mid) => {\n  return async (dispatch) => {\n    storage\n      .ref('mission_files')\n      .child(mid)\n      .delete()\n      .then(() => {\n        dispatch(push('/mission'))\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const submitMissions = (mid, file, fileName) => {\n  return async (dispatch, getState) => {\n    const state = getState()\n    const userId = state.users.uid\n    const userName = state.users.user_name\n\n    const uploadRef = storage.ref('mission_files/' + mid).child(userId)\n    const uploadTask = uploadRef.put(file)\n\n    uploadTask\n      .then(() => {\n        return uploadTask.snapshot.ref.getDownloadURL()\n      })\n      .then((downloadURL) => {\n        const fileData = { id: userId, path: downloadURL, file_name: fileName }\n        const data = {\n          creater_uid: userId,\n          creater_name: userName,\n          file: fileData,\n        }\n\n        missionsRef\n          .doc(mid)\n          .collection('submits')\n          .doc(userId)\n          .set(data, { merge: true })\n          .then(() => {\n            dispatch(push('/mission'))\n          })\n          .catch((error) => {\n            throw new Error(error)\n          })\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n","/Users/miyashota/project/react-app/src/reducks/questions/reducers.js",["472"],"/Users/miyashota/project/react-app/src/reducks/missions/actions.js",[],"/Users/miyashota/project/react-app/src/reducks/missions/selectors.js",[],"/Users/miyashota/project/react-app/src/reducks/missions/reducers.js",[],["473","474"],"/Users/miyashota/project/react-app/src/reducks/tasks/operations.js",[],"/Users/miyashota/project/react-app/src/reducks/tasks/reducers.js",[],"/Users/miyashota/project/react-app/src/reducks/tasks/actions.js",[],"/Users/miyashota/project/react-app/src/reducks/tasks/selectors.js",[],"/Users/miyashota/project/react-app/src/TemplateTheme.js",["475","476"],"/Users/miyashota/project/react-app/src/script/components/Chat/RoomUserList.jsx",["477"],"/Users/miyashota/project/react-app/src/script/components/Layout/ActionCheckDialog.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Question/AnalyticsList.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Setting/IconCropper.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/SelectBox.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/QuestionInput.jsx",["478","479"],"import React, { useState, useCallback } from 'react'\n\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\n/* ===================================================================== */\n\nconst useStyles = makeStyles({\n  input: {\n    width: '65%',\n    marginTop: '15px',\n  },\n})\n\nconst QuestionInput = (props) => {\n  const classes = useStyles()\n\n  return (\n    <TextField\n      error={props.error}\n      className={classes.input}\n      multiline\n      label=\"質問内容\"\n      type=\"text\"\n      rows=\"1\"\n      value={props.value}\n      onChange={props.onChange}\n    />\n  )\n}\nexport default QuestionInput\n",["480","481"],"/Users/miyashota/project/react-app/src/script/components/M-ui/AnswerRadio3.jsx",[],["482","483"],"/Users/miyashota/project/react-app/src/script/components/M-ui/PinkButtonNomal.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Mission/MissionList.jsx",["484"],"/Users/miyashota/project/react-app/src/script/pages/Post.jsx",["485"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nimport { PostList } from '../components/Post'\nimport { AppBarSubHeader, ToolTip } from '../components/M-ui'\nimport { readPosts } from '../../reducks/posts/operations'\nimport { getUserId } from '../../reducks/users/selectors'\nimport { getPostLists } from '../../reducks/posts/selectors'\n\nimport EditIcon from '@material-ui/icons/Edit'\nimport Fab from '@material-ui/core/Fab'\n/* ===================================================================== */\n\nconst Post = () => {\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const current_uid = getUserId(selector)\n  const posts = getPostLists(selector)\n\n  // 連絡作成ボタンクリック\n  const pushHandleClick = () => {\n    dispatch(push('/post/edit'))\n  }\n  // 全投稿を取得\n  useEffect(() => {\n    dispatch(readPosts())\n  }, [])\n\n  return (\n    <section className=\"main\">\n      <AppBarSubHeader subtitle={'連絡一覧'} />\n\n      <div className=\"edit_addbtn\">\n        <ToolTip title=\"連絡作成\">\n          <Fab color=\"secondary\" onClick={pushHandleClick}>\n            <EditIcon />\n          </Fab>\n        </ToolTip>\n      </div>\n\n      <div className=\"contents_style\">\n        {posts.length > 0 ? (\n          posts.map((post) => (\n            <PostList\n              currentUid={current_uid}\n              key={post.pid}\n              pid={post.pid}\n              title={post.title}\n              item={post.item}\n              file={post.file}\n              createrUid={post.creater_uid}\n              updateTime={post.update_time}\n            />\n          ))\n        ) : posts.length === 0 ? (\n          <div>現在連絡は投稿されていません</div>\n        ) : null}\n      </div>\n    </section>\n  )\n}\nexport default Post\n","/Users/miyashota/project/react-app/src/script/pages/index.js",[],"/Users/miyashota/project/react-app/src/script/pages/RoomEdit.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/Task.jsx",["486","487"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nimport { TaskTab } from '../components/Task'\nimport { AppBarSubHeader, ToolTip } from '../components/M-ui'\nimport { readTasks } from '../../reducks/tasks/operations'\nimport {\n  getDoingTasksLists,\n  getCompletedTasksLists,\n} from '../../reducks/tasks/selectors'\n\nimport EditIcon from '@material-ui/icons/Edit'\nimport Fab from '@material-ui/core/Fab'\nimport Paper from '@material-ui/core/Paper'\n/* ===================================================================== */\n\nconst Task = () => {\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const doingTasks = getDoingTasksLists(selector)\n  const completedTasks = getCompletedTasksLists(selector)\n  const [state, setState] = useState({\n    doing: true,\n    completed: true,\n  })\n  // 自分の未完了のスケジュールを取得\n  useEffect(() => {\n    dispatch(readTasks())\n  }, [])\n  // 実行中タスク、実行済みタスク切り替え\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked })\n  }\n  // 連絡作成ボタンクリック\n  const pushHandleClick = () => {\n    dispatch(push('/task/edit'))\n  }\n\n  return (\n    <section className=\"main\">\n      <AppBarSubHeader subtitle={'タスク管理'} />\n\n      <div className=\"edit_addbtn\">\n        <ToolTip title=\"連絡作成\">\n          <Fab color=\"secondary\" onClick={pushHandleClick}>\n            <EditIcon />\n          </Fab>\n        </ToolTip>\n      </div>\n\n      <div className=\"contents_style\">\n        <Paper>\n          <TaskTab doingTasks={doingTasks} completedTasks={completedTasks} />\n        </Paper>\n      </div>\n    </section>\n  )\n}\nexport default Task\n","/Users/miyashota/project/react-app/src/script/pages/TaskEdit.jsx",["488"],"/Users/miyashota/project/react-app/src/script/pages/Question.jsx",["489"],"/Users/miyashota/project/react-app/src/script/pages/AnswerEdit.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/AuthEdit.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/PostEdit.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/Analytics.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/Chat.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/ChatMessage.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/Collect.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/Mission.jsx",["490"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nimport { MissionList } from '../components/Mission'\nimport { AppBarSubHeader, ToolTip } from '../components/M-ui'\nimport { readMissions } from '../../reducks/missions/operations'\nimport { getUserValue } from '../../reducks/users/selectors'\nimport { getUserId } from '../../reducks/users/selectors'\nimport { getMissionLists } from '../../reducks/missions/selectors'\n\nimport EditIcon from '@material-ui/icons/Edit'\nimport Fab from '@material-ui/core/Fab'\n/* ===================================================================== */\n\nconst Mission = () => {\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const current_uid = getUserId(selector)\n  const current_value = getUserValue(selector)\n  const missions = getMissionLists(selector)\n\n  // 課題作成ボタンクリック\n  const pushHandleClick = () => {\n    dispatch(push('/mission/edit'))\n  }\n  // 全投稿を取得\n  useEffect(() => {\n    dispatch(readMissions())\n  }, [])\n\n  return (\n    <section className=\"main\">\n      <AppBarSubHeader subtitle={'課題一覧'} />\n\n      {current_value === 'teacher' && (\n        <div className=\"edit_addbtn\">\n          <ToolTip title=\"課題作成\">\n            <Fab color=\"secondary\" onClick={pushHandleClick}>\n              <EditIcon />\n            </Fab>\n          </ToolTip>\n        </div>\n      )}\n\n      <div className=\"contents_style\">\n        {missions.length > 0 ? (\n          missions.map((mission) => (\n            <MissionList\n              currentUid={current_uid}\n              key={mission.mid}\n              mid={mission.mid}\n              title={mission.title}\n              item={mission.item}\n              file={mission.file}\n              limitTime={mission.limit_time}\n              createrUid={mission.creater_uid}\n              updateTime={mission.update_time}\n            />\n          ))\n        ) : missions.length === 0 ? (\n          <h3>現在出ている課題はありません</h3>\n        ) : null}\n      </div>\n    </section>\n  )\n}\nexport default Mission\n","/Users/miyashota/project/react-app/src/script/pages/MissionEdit.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/MissionSubmit.jsx",["491"],"/Users/miyashota/project/react-app/src/script/pages/ProfEdit.jsx",["492"],"/Users/miyashota/project/react-app/src/script/components/Question/index.js",[],"/Users/miyashota/project/react-app/src/script/pages/QuestionEdit.jsx",["493"],"import React, { useState, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nimport { CheckViewDialog } from '../components/Layout'\nimport { QuestionComponent } from '../components/Question'\nimport {\n  AppBarSubHeader,\n  BlueButton,\n  BlueInput,\n  BlueButtonNomal,\n  SelectBox,\n  DateTimePicker,\n  ErrorAlert,\n} from '../components/M-ui'\nimport {\n  createQuestions,\n  readQuestionItem,\n} from '../../reducks/questions/operations'\nimport { db } from '../../firebase/firebase'\n\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n/* ===================================================================== */\n\nconst QuestionEdit = () => {\n  const dispatch = useDispatch()\n  const [qid, setQid] = useState('')\n  const [destination, setDestination] = useState('')\n  const [title, setTitle] = useState('')\n  const [item, setItem] = useState('')\n  const [limitTime, setLimitTime] = useState('')\n  const [questionData, setQuestionData] = useState('')\n  const [openDialog, setOpenDialog] = useState(false)\n  const [openAlert, setOpenAlert] = useState(false)\n\n  useEffect(() => {\n    // URLからqidを取得\n    const id = window.location.pathname.split('/question/edit')[1]\n    if (id !== '') {\n      setQid(id.split('/')[1])\n    }\n    // qidが存在すれば投稿情報を取得する\n    if (qid !== '') {\n      db.collection('questions')\n        .doc(qid)\n        .get()\n        .then((snapshot) => {\n          const question = snapshot.data()\n          setDestination(question.destination)\n          setTitle(question.title)\n          setItem(question.item)\n          const limit = question.limit_time.toDate()\n          setLimitTime(limit)\n          const questionData = question.question_data\n          dispatch(readQuestionItem(questionData))\n        })\n    }\n  }, [qid])\n  // タイトル入力イベント\n  const inputTitle = useCallback(\n    (event) => {\n      setTitle(event.target.value)\n    },\n    [setTitle]\n  )\n  // 内容入力イベント\n  const inputItem = useCallback(\n    (event) => {\n      setItem(event.target.value)\n    },\n    [setItem]\n  )\n  // 回答期限入力イベント\n  const inputDate = (date) => {\n    setLimitTime(date)\n  }\n  // キャンセルボタンクリック\n  const backHandleClick = () => {\n    dispatch(push('/question'))\n  }\n  // 投稿ボタンクリック\n  const updateHandleClick = () => {\n    dispatch(\n      createQuestions(qid, destination, title, item, limitTime, questionData)\n    )\n    setOpenDialog(false)\n  }\n  // 確認ダイアログ表示\n  const checkHandleClick = () => {\n    if (\n      title &&\n      item &&\n      destination &&\n      limitTime &&\n      questionData.length !== 0\n    ) {\n      setOpenAlert(false)\n      setOpenDialog(true)\n    } else {\n      setOpenAlert(true)\n    }\n  }\n\n  return (\n    <section className=\"main\">\n      <AppBarSubHeader\n        subtitle={qid ? 'アンケート　ー編集ー' : 'アンケート　ー新規ー'}\n      />\n\n      <CheckViewDialog\n        destination={destination}\n        title={title}\n        item={item}\n        questionData={questionData}\n        limitTime={limitTime}\n        openDialog={openDialog}\n        setOpenDialog={setOpenDialog}\n        updateHandleClick={updateHandleClick}\n      />\n\n      <div className=\"contents_style\">\n        {openAlert ? <ErrorAlert setOpenAlert={setOpenAlert} /> : null}\n\n        <Paper className=\"paper\">\n          <Typography className=\"pd_y_10px\" color=\"textSecondary\">\n            投稿先\n          </Typography>\n          <SelectBox\n            fullWidth={true}\n            options={send}\n            value={destination}\n            error={!destination && openAlert ? true : false}\n            select={setDestination}\n          />\n\n          <Typography className=\"pd_top_10px\" color=\"textSecondary\">\n            タイトル\n          </Typography>\n          <BlueInput\n            label={null}\n            type={'text'}\n            fullWidth={true}\n            multiline={true}\n            value={title}\n            defaultValue={title}\n            error={!title && openAlert ? true : false}\n            onChange={inputTitle}\n          />\n\n          <Typography className=\"pd_top_10px\" color=\"textSecondary\">\n            内容\n          </Typography>\n          <BlueInput\n            label={null}\n            type={'text'}\n            fullWidth={true}\n            multiline={true}\n            value={item}\n            defaultValue={item}\n            error={!item && openAlert ? true : false}\n            onChange={inputItem}\n          />\n\n          <Typography className=\"pd_top_10px\" color=\"textSecondary\">\n            回答期限\n          </Typography>\n          <DateTimePicker\n            ampm={false}\n            fullWidth={true}\n            value={limitTime}\n            error={!limitTime && openAlert ? true : false}\n            onChange={inputDate}\n          />\n\n          <Typography className=\"pd_top_10px\" color=\"textSecondary\">\n            質問作成\n          </Typography>\n\n          <QuestionComponent\n            error={questionData.length === 0 && openAlert ? true : false}\n            setQuestionData={setQuestionData}\n          />\n\n          <div className=\"right mg_top_20px\">\n            <BlueButtonNomal label={'キャンセル'} onClick={backHandleClick} />\n            <BlueButton label=\"確認\" onClick={checkHandleClick} />\n          </div>\n        </Paper>\n      </div>\n    </section>\n  )\n}\nexport default QuestionEdit\n\nconst send = [\n  { id: 'all', name: '全体' },\n  { id: 'teacher', name: '全教官' },\n  { id: 'student', name: '全学生' },\n  { id: 'PI-11A-172', name: 'PI-11A-172' },\n  { id: 'PW-11A-172', name: 'PW-11A-172' },\n]\n","/Users/miyashota/project/react-app/src/script/pages/ReIssue.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/Schedule.jsx",["494","495"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { schoolevent } from '../components/Schedule/data/schoolevent'\nimport { AppBarSubHeader, NativeSelectBox } from '../components/M-ui'\nimport {\n  getUserId,\n  getClassName,\n  getUserValue,\n} from '../../reducks/users/selectors'\nimport { db } from '../../firebase/firebase'\n\nimport Paper from '@material-ui/core/Paper'\nimport { ViewState, EditingState } from '@devexpress/dx-react-scheduler'\nimport {\n  Scheduler,\n  Toolbar,\n  MonthView,\n  WeekView,\n  DayView,\n  Appointments,\n  AppointmentTooltip,\n  EditRecurrenceMenu,\n  AllDayPanel,\n  DateNavigator,\n  Resources,\n} from '@devexpress/dx-react-scheduler-material-ui'\nimport {\n  blue,\n  deepPurple,\n  blueGrey,\n  teal,\n  pink,\n} from '@material-ui/core/colors'\n/* ===================================================================== */\n\nconst Schedule = () => {\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const current_uid = getUserId(selector)\n  const current_class = getClassName(selector)\n  const current_value = getUserValue(selector)\n  const [doingTasks, setDoingTasks] = useState('')\n  const [completedTasks, setCompletedTasks] = useState('')\n  const [allTasks, setAllTasks] = useState('')\n  const [createdTasks, setCreatedTasks] = useState('')\n  const [choice, setChoice] = useState('month')\n\n  const userSchedule = schoolevent.concat(\n    doingTasks,\n    completedTasks,\n    allTasks,\n    createdTasks\n  )\n\n  // スケジュールを取得\n  useEffect(() => {\n    // ログインユーザーのタスク取得\n    db.collection('users')\n      .doc(current_uid)\n      .collection('tasks')\n      .where('tag', '==', '4')\n      .get()\n      .then((snapshots) => {\n        const myTaskData = []\n        if (snapshots.length !== 0) {\n          snapshots.forEach((snapshot) => {\n            const task = snapshot.data()\n            const taskData = {\n              title: task.title,\n              tag: '4',\n              startDate: task.startDate.toDate(),\n              endDate: task.endDate.toDate(),\n            }\n            myTaskData.push(taskData)\n          })\n        }\n        setDoingTasks(myTaskData)\n      })\n    db.collection('users')\n      .doc(current_uid)\n      .collection('tasks')\n      .where('tag', '==', '5')\n      .get()\n      .then((snapshots) => {\n        const myTaskData = []\n        if (snapshots.length !== 0) {\n          snapshots.forEach((snapshot) => {\n            const task = snapshot.data()\n            const taskData = {\n              title: task.title,\n              tag: '5',\n              startDate: task.startDate.toDate(),\n              endDate: task.endDate.toDate(),\n            }\n            myTaskData.push(taskData)\n          })\n        }\n        setCompletedTasks(myTaskData)\n      })\n    // 全体のスケジュール取得\n    db.collection('schedules')\n      .where('destination', 'in', ['all', current_value, current_class])\n      .get()\n      .then((snapshots) => {\n        const myTaskData = []\n        if (snapshots.length !== 0) {\n          snapshots.forEach((snapshot) => {\n            const task = snapshot.data()\n            if (task.creater_uid !== current_uid) {\n              const taskData = {\n                title: task.title,\n                tag: task.tag,\n                startDate: task.startDate.toDate(),\n                endDate: task.endDate.toDate(),\n              }\n              myTaskData.push(taskData)\n            }\n          })\n        }\n        setAllTasks(myTaskData)\n      })\n    db.collection('schedules')\n      .where('creater_uid', '==', current_uid)\n      .get()\n      .then((snapshots) => {\n        const myTaskData = []\n        if (snapshots.length !== 0) {\n          snapshots.forEach((snapshot) => {\n            const task = snapshot.data()\n            const taskData = {\n              title: task.title,\n              tag: '6',\n              startDate: task.startDate.toDate(),\n              endDate: task.endDate.toDate(),\n            }\n            myTaskData.push(taskData)\n          })\n        }\n        setCreatedTasks(myTaskData)\n      })\n  }, [])\n\n  return (\n    <section className=\"schedules_main\">\n      <AppBarSubHeader subtitle={'スケジュール'} />\n      <div className=\"schedules_view_switcher\">\n        <NativeSelectBox\n          fullWidth={false}\n          options={send}\n          value={choice}\n          variant={'outlined'}\n          select={setChoice}\n        />\n      </div>\n\n      <Paper style={{ boxShadow: 'none', borderBottom: '1px solid #00000022' }}>\n        <Scheduler data={userSchedule} locale=\"JA\">\n          <ViewState />\n          <EditingState />\n          {choice === 'month' ? (\n            <MonthView />\n          ) : choice === 'week' ? (\n            <WeekView />\n          ) : (\n            <DayView />\n          )}\n          <AllDayPanel />\n          <EditRecurrenceMenu />\n          <Appointments />\n          <AppointmentTooltip showCloseButton />\n\n          <Toolbar />\n          <DateNavigator />\n          <Resources data={resources} />\n        </Scheduler>\n      </Paper>\n    </section>\n  )\n}\n\nexport default Schedule\n\nconst resources = [\n  {\n    fieldName: 'tag',\n    title: 'tag',\n    instances: [\n      { id: '1', text: '学校行事', color: blueGrey },\n      { id: '2', text: '課題', color: deepPurple },\n      { id: '3', text: 'アンケート', color: teal },\n      { id: '4', text: '個人タスク　ー実行中ー', color: blue },\n      { id: '5', text: '個人タスク　ー実行済ー', color: blue[100] },\n      { id: '6', text: '投稿したタスク', color: pink },\n    ],\n  },\n]\nconst send = [\n  { id: 'month', name: '月' },\n  { id: 'week', name: '週' },\n  { id: 'day', name: '日' },\n]\n","/Users/miyashota/project/react-app/src/script/pages/Setting.jsx",["496"],"/Users/miyashota/project/react-app/src/script/pages/SignIn.jsx",["497"],"import React, { useState, useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nimport {\n  BlueInput,\n  BlueButton,\n  OrangeButton,\n  GreenButton,\n} from '../components/M-ui'\nimport { signIn } from '../../reducks/users/operations'\n\nimport Grid from '@material-ui/core/Grid'\nimport PersonIcon from '@material-ui/icons/Person'\nimport LockIcon from '@material-ui/icons/Lock'\n/* ===================================================================== */\nconst SignIn = () => {\n  const dispatch = useDispatch()\n  const [email, setEmail] = useState('guest@gmail.com')\n  const [password, setPassword] = useState('halnagoya')\n\n  // メールアドレス入力イベント\n  const inputEmail = useCallback(\n    (event) => {\n      setEmail(event.target.value)\n    },\n    [setEmail]\n  )\n  // パスワード入力イベント\n  const inputPassword = useCallback(\n    (event) => {\n      setPassword(event.target.value)\n    },\n    [setPassword]\n  )\n\n  return (\n    <section className=\"top_main signin_theme\">\n      <div className=\"top_layout\">\n        <div className=\"comment signin_comment\">\n          <h2>\n            ようこそ！\n            <span\n              className=\"pointer\"\n              onClick={() => dispatch(push('./signin'))}\n            >\n              Smoothly\n            </span>\n            へ！\n          </h2>\n          <h2>　　君の学校生活を</h2>\n          <h2>　　　　サポートするよ！</h2>\n        </div>\n\n        <div className=\"flex_grow\"></div>\n\n        <div className=\"form_box signin_form\">\n          <div className=\"form\">\n            <h1>Smoothly</h1>\n            <Grid container spacing={1} alignItems=\"flex-end\">\n              <Grid item xs={1}>\n                <PersonIcon color=\"action\" />\n              </Grid>\n              <Grid item xs={11}>\n                <BlueInput\n                  fullWidth={true}\n                  multiline={false}\n                  label={'メールアドレス'}\n                  type={'email'}\n                  value={email}\n                  defaultValue={email}\n                  onChange={inputEmail}\n                />\n              </Grid>\n            </Grid>\n            <Grid container spacing={1} alignItems=\"flex-end\">\n              <Grid item item xs={1}>\n                <LockIcon color=\"action\" />\n              </Grid>\n              <Grid item xs={11}>\n                <BlueInput\n                  fullWidth={true}\n                  multiline={false}\n                  label={'パスワード'}\n                  type={'password'}\n                  value={password}\n                  defaultValue={password}\n                  onChange={inputPassword}\n                />\n              </Grid>\n            </Grid>\n            <div className=\"space_25px\"></div>\n\n            <BlueButton\n              fullWidth\n              label={'ログイン'}\n              onClick={() => dispatch(signIn(email, password))}\n            />\n            <div className=\"space_15px\"></div>\n            <OrangeButton\n              fullWidth\n              label={'新規登録'}\n              onClick={() => dispatch(push('./signup'))}\n            />\n            <div className=\"space_15px\"></div>\n            <GreenButton\n              fullWidth\n              label={'パスワード再発行'}\n              onClick={() => dispatch(push('./reissue'))}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\nexport default SignIn\n","/Users/miyashota/project/react-app/src/script/pages/SignUp.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Task/TaskList.jsx",[],"/Users/miyashota/project/react-app/src/script/pages/UserDelete.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Chat/ChatMessageComponent.jsx",["498","499"],"/Users/miyashota/project/react-app/src/script/components/Chat/ChatMessageList.jsx",["500","501"],"import React, { useCallback, useState, useEffect, useRef } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { ChatMessageComponent } from './index'\nimport { ProfDialog } from '../Layout'\nimport { BlueInputOutlined } from '../M-ui'\nimport { createChatMessage } from '../../../reducks/chats/operations'\nimport { db } from '../../../firebase/firebase'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport SendSharpIcon from '@material-ui/icons/SendSharp'\nimport { makeStyles } from '@material-ui/core/styles'\n/* ===================================================================== */\n\nconst useStyles = makeStyles((theme) => ({\n  chatBtn: {\n    margin: '0 0 8px 0',\n    [theme.breakpoints.up('md')]: {\n      margin: '0 10px 3px 0px',\n    },\n  },\n  activeBtn: {\n    fontSize: '30px',\n    [theme.breakpoints.up('md')]: {\n      fontSize: '40px',\n    },\n  },\n  passiveBtn: {\n    opacity: '0.4',\n    fontSize: '30px',\n    [theme.breakpoints.up('md')]: {\n      fontSize: '40px',\n    },\n  },\n}))\n\nconst ChatMessageList = (props) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [messageData, setMessageData] = useState('')\n  const [message, setMessage] = useState('')\n  const [uid, setUid] = useState(null)\n  const [openDialog, setOpenDialog] = useState(false)\n\n  useEffect(() => {\n    // URLからridを取得\n    let rid = window.location.pathname.split('/chat/room')[1]\n    if (rid !== '') {\n      rid = rid.split('/')[1]\n    }\n    // 常時データの更新を監視\n    const unsubscribe = db\n      .collection('chats')\n      .doc(rid)\n      .collection('messages')\n      .orderBy('update_time', 'asc')\n      .onSnapshot((snapshots) => {\n        const messageList = []\n        snapshots.forEach((snapshots) => {\n          const msg = snapshots.data()\n          messageList.push(msg)\n        })\n        setMessageData(messageList)\n      })\n    // タイトルの取得、親に渡す\n    db.collection('chats')\n      .doc(rid)\n      .get()\n      .then((snapshots) => {\n        const roomData = snapshots.data()\n        if (roomData.members.length !== 0) {\n          props.setRoomName(\n            `${roomData.room_name}（${\n              roomData.members && roomData.members.length\n            }）`\n          )\n        } else {\n          props.setRoomName(roomData.room_name)\n        }\n      })\n    return () => {\n      unsubscribe()\n    }\n  }, [])\n  // プロフの表示\n  const handleIconView = (uid) => {\n    setUid(uid)\n    setOpenDialog(true)\n  }\n  // メッセージ入力イベント\n  const inputMessage = useCallback((event) => {\n    setMessage(event.target.value)\n  })\n  // メッセージ送信ボタンクリック\n  const handleClick = () => {\n    let rid = window.location.pathname.split('/chat/room')[1]\n    if (rid !== '') {\n      rid = rid.split('/')[1]\n    }\n    dispatch(createChatMessage(rid, message))\n    setMessage('')\n  }\n  // 新規メッセージを受信したらスクロールを一番下に持ってくる\n  const messagesEndRef = useRef(null)\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView()\n  }\n  useEffect(scrollToBottom, [messageData])\n\n  return (\n    <div id=\"chatroom\" className=\"chat_contents_style\">\n      {messageData.length !== 0 &&\n        messageData.map((msg, index) => {\n          return (\n            <ChatMessageComponent\n              key={index}\n              createrUid={msg.creater_uid}\n              updateTime={msg.update_time}\n              message={msg.message}\n              onClick={handleIconView}\n            />\n          )\n        })}\n\n      <ProfDialog\n        uid={uid}\n        openDialog={openDialog}\n        setOpenDialog={setOpenDialog}\n      />\n\n      <div ref={messagesEndRef} />\n      <div className=\"chat_content\">\n        <div className=\"chat_textarea\">\n          <BlueInputOutlined\n            fullWidth={true}\n            multiline={true}\n            autoFocus={false}\n            value={message}\n            onChange={inputMessage}\n            placeholder={'メッセージを送信する'}\n          />\n        </div>\n\n        <div className={classes.chatBtn}>\n          <IconButton className={classes.sendBtn}>\n            {message ? (\n              <SendSharpIcon\n                className={classes.activeBtn}\n                color=\"primary\"\n                onClick={handleClick}\n              />\n            ) : (\n              <SendSharpIcon className={classes.passiveBtn} />\n            )}\n          </IconButton>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ChatMessageList\n\n/* ===================================================================== */\n","/Users/miyashota/project/react-app/src/script/components/Chat/ChatRoomList.jsx",["502"],"/Users/miyashota/project/react-app/src/script/components/Layout/CheckViewDialog.jsx",["503"],"/Users/miyashota/project/react-app/src/script/components/Layout/Header.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Layout/Nav.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Layout/ProfDialog.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Mission/CollectList.jsx",["504","505","506","507","508"],"/Users/miyashota/project/react-app/src/script/components/Post/PostList.jsx",["509"],"import React, { useState, useEffect } from 'react'\nimport { push } from 'connected-react-router'\nimport { useDispatch } from 'react-redux'\nimport clsx from 'clsx'\nimport { format } from 'date-fns'\nimport { ja } from 'date-fns/locale'\n\nimport { ProfDialog, ActionCheckDialog } from '../Layout'\nimport { BlueButtonNomal } from '../M-ui'\nimport { deletePost } from '../../../reducks/posts/operations'\nimport { db } from '../../../firebase/firebase'\nimport { checkExt } from '../../../functions/function'\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Collapse from '@material-ui/core/Collapse'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Button from '@material-ui/core/Button'\nimport Avatar from '@material-ui/core/Avatar'\nimport { makeStyles } from '@material-ui/core/styles'\n/* ===================================================================== */\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: '0',\n    padding: '50%',\n    backgroundSize: 'contain',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(-90deg)',\n  },\n}))\n\nconst PostList = (props) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [name, setName] = useState('')\n  const [className, setClassName] = useState('')\n  const [icon, setIcon] = useState('')\n  const [expanded, setExpanded] = useState(false)\n  const [openProfDialog, setOpenProfDialog] = useState(false)\n  const [openDeleteCheckDialog, setOpenDeleteCheckDialog] = useState(false)\n\n  // 時間を正規表現\n  const updateTime = props.updateTime.toDate()\n  const updateDateTime = format(updateTime, 'yyyy年M月dd日 H:mm', {\n    locale: ja,\n  })\n  // 編集ボタンクリック\n  const editHandleClick = () => {\n    dispatch(push('/post/edit/' + props.pid))\n  }\n  // 削除ボタンクリック\n  const deleteHandleClick = () => {\n    dispatch(deletePost(props.pid))\n    setOpenDeleteCheckDialog(false)\n  }\n  // プロフの表示\n  const IconViewHandleClick = () => {\n    setOpenProfDialog(true)\n  }\n  // 確認ダイアログ表示\n  const deleteCheckHandleClick = () => {\n    setOpenDeleteCheckDialog(true)\n  }\n  // ファイル表示ボタンクリック&矢印アイコンの向き変更\n  const expandHandleClick = () => {\n    setExpanded(!expanded)\n  }\n  // 投稿者の情報を取得\n  useEffect(() => {\n    if (props.createrUid) {\n      db.collection('users')\n        .doc(props.createrUid)\n        .get()\n        .then((snapshots) => {\n          // .onSnapshot((snapshots) => {\n          const userData = snapshots.data()\n          if (userData) {\n            setName(userData.user_name)\n            setClassName(userData.class_name)\n            setIcon(userData.icon.path)\n          } else {\n            setName('退会済みのユーザー')\n          }\n        })\n    }\n  }, [])\n\n  return (\n    <div className=\"mg_btm_20px\">\n      <Card>\n        <CardHeader\n          avatar={\n            icon ? (\n              <Avatar\n                alt=\"userIcon\"\n                src={icon}\n                className={\n                  props.currentUid === props.createrUid\n                    ? 'pointer icon_circle_blue'\n                    : 'pointer'\n                }\n                onClick={IconViewHandleClick}\n              />\n            ) : (\n              <Avatar\n                className={\n                  props.currentUid === props.createrUid\n                    ? 'pointer icon_circle_blue'\n                    : 'pointer'\n                }\n                onClick={IconViewHandleClick}\n              >\n                {name.charAt(0)}\n              </Avatar>\n            )\n          }\n          title={\n            <Typography>\n              {className} ｜ {name}\n            </Typography>\n          }\n          subheader={`更新日時：${updateDateTime}`}\n        />\n\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            タイトル\n          </Typography>\n          <Typography variant=\"body1\" className=\"pd_10px\" color=\"textPrimary\">\n            {props.title}\n          </Typography>\n\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            内容\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            className=\"pd_10px\"\n            color=\"textPrimary\"\n            style={{ whiteSpace: 'pre-wrap' }}\n          >\n            {props.item}\n          </Typography>\n        </CardContent>\n\n        <CardActions className=\"mg_10px\">\n          {props.currentUid === props.createrUid && (\n            <>\n              <BlueButtonNomal label={'編集'} onClick={editHandleClick} />\n              <BlueButtonNomal\n                label={'削除'}\n                onClick={deleteCheckHandleClick}\n              />\n            </>\n          )}\n\n          {props.file.path && (\n            <Button color=\"primary\">\n              <a href={props.file.path}>ファイルダウンロード</a>\n            </Button>\n          )}\n\n          {checkExt(props.file.file_name) && (\n            <Button\n              aria-expanded={expanded}\n              color=\"primary\"\n              onClick={expandHandleClick}\n            >\n              ファイル表示\n              <ExpandMoreIcon\n                className={clsx(classes.expand, {\n                  [classes.expandOpen]: expanded,\n                })}\n              />\n            </Button>\n          )}\n        </CardActions>\n\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent className={classes.content}>\n            <CardMedia className={classes.media} image={props.file.path} />\n          </CardContent>\n        </Collapse>\n      </Card>\n\n      <ProfDialog\n        uid={props.createrUid}\n        openDialog={openProfDialog}\n        setOpenDialog={setOpenProfDialog}\n      />\n\n      <ActionCheckDialog\n        text={'削除してもよろしいですか？'}\n        openDialog={openDeleteCheckDialog}\n        setOpenDialog={setOpenDeleteCheckDialog}\n        actionHandleClick={deleteHandleClick}\n      />\n    </div>\n  )\n}\nexport default PostList\n","/Users/miyashota/project/react-app/src/script/components/Question/QuestionComponent.jsx",["510"],"/Users/miyashota/project/react-app/src/script/components/Question/QuestionList.jsx",["511"],"/Users/miyashota/project/react-app/src/script/components/Task/TaskTab.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/AppBarHeader.jsx",["512","513"],"/Users/miyashota/project/react-app/src/script/components/M-ui/AppBarSubHeader.jsx",["514"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nimport { ActionCheckDialog } from '../Layout'\nimport { deleteChatRoom } from '../../../reducks/chats/operations.js'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\nimport IconButton from '@material-ui/core/IconButton'\nimport SettingsIcon from '@material-ui/icons/Settings'\n/* ===================================================================== */\n\nconst useStyles = makeStyles((theme) => ({\n  appbar: {\n    top: '55px',\n    height: '35px',\n    position: 'fixed',\n    display: 'flex',\n    zIndex: 50,\n    width: '100%',\n    boxShadow: 'none',\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    [theme.breakpoints.up('sm')]: {\n      height: '48px',\n      top: '70px',\n    },\n    [theme.breakpoints.up('md')]: {\n      width: 'calc(100% - 230px)',\n    },\n  },\n  title: {\n    color: theme.palette.text.primary,\n    fontSize: 16,\n    marginBottom: 14,\n    [theme.breakpoints.up('sm')]: {\n      fontSize: 20,\n      marginBottom: 0,\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  chat_menu: {\n    display: 'none',\n  },\n  menuButtonTrue: {\n    display: 'block',\n  },\n  menuButtonFalse: {\n    display: 'none',\n  },\n  none: {\n    display: 'none',\n  },\n  icon: {\n    color: theme.palette.common,\n    width: theme.spacing(2.8),\n    height: theme.spacing(2.8),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n  },\n  menuButton: {\n    marginBottom: 14,\n    marginRight: -3,\n    [theme.breakpoints.up('sm')]: {\n      marginRight: 0,\n      marginBottom: 0,\n    },\n  },\n}))\n\nconst AppBarSubHeader = (props) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [rid, setRid] = useState('')\n  const [anchorEl, setAnchorEl] = useState(null)\n  const [openCheckDialog, setOpenCheckDialog] = useState(false)\n  const open = Boolean(anchorEl)\n\n  useEffect(() => {\n    if (props.view === true) {\n      const id = window.location.pathname.split('/chat/room')[1]\n      if (id !== '') {\n        const path = id.split('/')[1]\n        setRid(path)\n      }\n    }\n  }, [rid])\n\n  const handleMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n  const handleRoomEdit = (rid) => {\n    setAnchorEl(null)\n    dispatch(push('/chat/edit/' + rid))\n  }\n  const handleRoomDelete = () => {\n    setAnchorEl(null)\n    dispatch(deleteChatRoom(rid))\n  }\n  const checkHandleClick = () => {\n    setAnchorEl(null)\n    setOpenCheckDialog(true)\n  }\n\n  return (\n    <AppBar position=\"static\" className={classes.appbar} color=\"inherit\">\n      <ActionCheckDialog\n        text={'ルームを削除してもよろしいですか？'}\n        buttonLabel={'削除'}\n        openDialog={openCheckDialog}\n        setOpenDialog={setOpenCheckDialog}\n        actionHandleClick={handleRoomDelete}\n      />\n\n      <Toolbar variant=\"dense\">\n        <Typography className={classes.title} variant=\"h6\">\n          {props.subtitle}\n        </Typography>\n\n        <div className={classes.grow} />\n\n        <div\n          className={\n            props.view && rid.length > 12\n              ? classes.menuButtonTrue\n              : classes.menuButtonFalse\n          }\n        >\n          <IconButton\n            className={classes.menuButton}\n            edge=\"end\"\n            aria-label=\"menu\"\n            onClick={handleMenuOpen}\n          >\n            <SettingsIcon className={classes.icon} />\n          </IconButton>\n          <Menu\n            id=\"menu-appbar\"\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            open={open}\n            onClose={() => setAnchorEl(null)}\n          >\n            <MenuItem onClick={() => handleRoomEdit(rid)}>ルーム編集</MenuItem>\n            <MenuItem onClick={() => checkHandleClick(rid)}>\n              ルーム削除\n            </MenuItem>\n          </Menu>\n        </div>\n      </Toolbar>\n    </AppBar>\n  )\n}\nexport default AppBarSubHeader\n","/Users/miyashota/project/react-app/src/script/components/M-ui/ClosableDrawer.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/index.js",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/NativeSelectBox.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/AddButton.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/AnswerRadio2.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/BlueButton.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/DateTimePicker.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/ErrorAlert.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/QuestionSelect.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Task/index.js",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/BlueButtonNomal.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/BlueInput.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/ToolTipTime.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/BlueInputOutlined.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/PinkButton.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Chat/index.js",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/IconUpload.jsx",[],"/Users/miyashota/project/react-app/src/script/components/Mission/index.js",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/FileDelete.jsx",[],"/Users/miyashota/project/react-app/src/script/components/M-ui/ToolTip.jsx",[],{"ruleId":"515","replacedBy":"516"},{"ruleId":"517","replacedBy":"518"},{"ruleId":"515","replacedBy":"519"},{"ruleId":"517","replacedBy":"520"},{"ruleId":"515","replacedBy":"521"},{"ruleId":"517","replacedBy":"522"},{"ruleId":"523","severity":1,"message":"524","line":13,"column":10,"nodeType":"525","messageId":"526","endLine":13,"endColumn":19},{"ruleId":"515","replacedBy":"527"},{"ruleId":"517","replacedBy":"528"},{"ruleId":"529","severity":1,"message":"530","line":18,"column":6,"nodeType":"531","endLine":18,"endColumn":8,"suggestions":"532"},{"ruleId":"523","severity":1,"message":"533","line":1,"column":8,"nodeType":"525","messageId":"526","endLine":1,"endColumn":16},{"ruleId":"523","severity":1,"message":"534","line":6,"column":3,"nodeType":"525","messageId":"526","endLine":6,"endColumn":24},{"ruleId":"515","replacedBy":"535"},{"ruleId":"517","replacedBy":"536"},{"ruleId":null,"fatal":true,"severity":2,"message":"537","line":21,"column":2},{"ruleId":"515","replacedBy":"538"},{"ruleId":"517","replacedBy":"539"},{"ruleId":"515","replacedBy":"540"},{"ruleId":"517","replacedBy":"541"},{"ruleId":"515","replacedBy":"542"},{"ruleId":"517","replacedBy":"543"},{"ruleId":"523","severity":1,"message":"544","line":1,"column":8,"nodeType":"525","messageId":"526","endLine":1,"endColumn":13},{"ruleId":"523","severity":1,"message":"545","line":1,"column":17,"nodeType":"525","messageId":"526","endLine":1,"endColumn":28},{"ruleId":"523","severity":1,"message":"546","line":1,"column":30,"nodeType":"525","messageId":"526","endLine":1,"endColumn":38},{"ruleId":"523","severity":1,"message":"547","line":1,"column":40,"nodeType":"525","messageId":"526","endLine":1,"endColumn":49},{"ruleId":"523","severity":1,"message":"548","line":1,"column":51,"nodeType":"525","messageId":"526","endLine":1,"endColumn":57},{"ruleId":"523","severity":1,"message":"549","line":2,"column":10,"nodeType":"525","messageId":"526","endLine":2,"endColumn":17},{"ruleId":"523","severity":1,"message":"550","line":3,"column":8,"nodeType":"525","messageId":"526","endLine":3,"endColumn":23},{"ruleId":"551","severity":1,"message":"552","line":12,"column":38,"nodeType":"553","messageId":"554","endLine":12,"endColumn":39,"suggestions":"555"},{"ruleId":"515","replacedBy":"556"},{"ruleId":"517","replacedBy":"557"},{"ruleId":"523","severity":1,"message":"533","line":1,"column":8,"nodeType":"525","messageId":"526","endLine":1,"endColumn":16},{"ruleId":"558","severity":1,"message":"559","line":34,"column":19,"nodeType":"560","messageId":"561","endLine":34,"endColumn":20},{"ruleId":"515","replacedBy":"562"},{"ruleId":"517","replacedBy":"563"},{"ruleId":"523","severity":1,"message":"546","line":1,"column":17,"nodeType":"525","messageId":"526","endLine":1,"endColumn":25},{"ruleId":"523","severity":1,"message":"547","line":1,"column":27,"nodeType":"525","messageId":"526","endLine":1,"endColumn":36},{"ruleId":"529","severity":1,"message":"564","line":43,"column":6,"nodeType":"531","endLine":43,"endColumn":8,"suggestions":"565"},{"ruleId":"523","severity":1,"message":"546","line":1,"column":17,"nodeType":"525","messageId":"526","endLine":1,"endColumn":25},{"ruleId":"523","severity":1,"message":"545","line":1,"column":27,"nodeType":"525","messageId":"526","endLine":1,"endColumn":38},{"ruleId":"515","replacedBy":"566"},{"ruleId":"517","replacedBy":"567"},{"ruleId":"515","replacedBy":"568"},{"ruleId":"517","replacedBy":"569"},{"ruleId":"529","severity":1,"message":"570","line":121,"column":6,"nodeType":"531","endLine":121,"endColumn":8,"suggestions":"571"},{"ruleId":"529","severity":1,"message":"572","line":28,"column":6,"nodeType":"531","endLine":28,"endColumn":8,"suggestions":"573"},{"ruleId":"529","severity":1,"message":"572","line":30,"column":6,"nodeType":"531","endLine":30,"endColumn":8,"suggestions":"574"},{"ruleId":"523","severity":1,"message":"575","line":32,"column":9,"nodeType":"525","messageId":"526","endLine":32,"endColumn":21},{"ruleId":"529","severity":1,"message":"576","line":63,"column":6,"nodeType":"531","endLine":63,"endColumn":11,"suggestions":"577"},{"ruleId":"529","severity":1,"message":"572","line":30,"column":6,"nodeType":"531","endLine":30,"endColumn":8,"suggestions":"578"},{"ruleId":"529","severity":1,"message":"572","line":30,"column":6,"nodeType":"531","endLine":30,"endColumn":8,"suggestions":"579"},{"ruleId":"523","severity":1,"message":"580","line":24,"column":9,"nodeType":"525","messageId":"526","endLine":24,"endColumn":20},{"ruleId":"529","severity":1,"message":"576","line":44,"column":6,"nodeType":"531","endLine":44,"endColumn":8,"suggestions":"581"},{"ruleId":"529","severity":1,"message":"572","line":59,"column":6,"nodeType":"531","endLine":59,"endColumn":11,"suggestions":"582"},{"ruleId":"523","severity":1,"message":"583","line":38,"column":9,"nodeType":"525","messageId":"526","endLine":38,"endColumn":17},{"ruleId":"529","severity":1,"message":"584","line":142,"column":6,"nodeType":"531","endLine":142,"endColumn":8,"suggestions":"585"},{"ruleId":"529","severity":1,"message":"576","line":73,"column":6,"nodeType":"531","endLine":73,"endColumn":8,"suggestions":"586"},{"ruleId":"587","severity":1,"message":"588","line":77,"column":26,"nodeType":"589","messageId":"590","endLine":77,"endColumn":30},{"ruleId":"523","severity":1,"message":"591","line":23,"column":9,"nodeType":"525","messageId":"526","endLine":23,"endColumn":16},{"ruleId":"529","severity":1,"message":"592","line":46,"column":6,"nodeType":"531","endLine":46,"endColumn":8,"suggestions":"593"},{"ruleId":"529","severity":1,"message":"594","line":84,"column":6,"nodeType":"531","endLine":84,"endColumn":8,"suggestions":"595"},{"ruleId":"529","severity":1,"message":"596","line":91,"column":24,"nodeType":"525","endLine":91,"endColumn":35},{"ruleId":"529","severity":1,"message":"597","line":56,"column":6,"nodeType":"531","endLine":56,"endColumn":8,"suggestions":"598"},{"ruleId":"529","severity":1,"message":"576","line":102,"column":6,"nodeType":"531","endLine":102,"endColumn":8,"suggestions":"599"},{"ruleId":"523","severity":1,"message":"547","line":1,"column":17,"nodeType":"525","messageId":"526","endLine":1,"endColumn":26},{"ruleId":"523","severity":1,"message":"600","line":2,"column":10,"nodeType":"525","messageId":"526","endLine":2,"endColumn":21},{"ruleId":"523","severity":1,"message":"601","line":2,"column":23,"nodeType":"525","messageId":"526","endLine":2,"endColumn":34},{"ruleId":"523","severity":1,"message":"602","line":4,"column":10,"nodeType":"525","messageId":"526","endLine":4,"endColumn":21},{"ruleId":"523","severity":1,"message":"603","line":5,"column":10,"nodeType":"525","messageId":"526","endLine":5,"endColumn":24},{"ruleId":"529","severity":1,"message":"592","line":99,"column":6,"nodeType":"531","endLine":99,"endColumn":8,"suggestions":"604"},{"ruleId":"529","severity":1,"message":"594","line":57,"column":6,"nodeType":"531","endLine":57,"endColumn":11,"suggestions":"605"},{"ruleId":"529","severity":1,"message":"606","line":89,"column":6,"nodeType":"531","endLine":89,"endColumn":8,"suggestions":"607"},{"ruleId":"608","severity":1,"message":"609","line":56,"column":5,"nodeType":"610","messageId":"611","endLine":56,"endColumn":10},{"ruleId":"529","severity":1,"message":"576","line":161,"column":6,"nodeType":"531","endLine":161,"endColumn":8,"suggestions":"612"},{"ruleId":"529","severity":1,"message":"613","line":95,"column":6,"nodeType":"531","endLine":95,"endColumn":11,"suggestions":"614"},"no-native-reassign",["615"],"no-negated-in-lhs",["616"],["615"],["616"],["615"],["616"],"no-unused-vars","'getUserId' is defined but never used.","Identifier","unusedVar",["615"],["616"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'isSignedIn'. Either include them or remove the dependency array.","ArrayExpression",["617"],"'firebase' is defined but never used.","'deleteQuestionsAction' is defined but never used.",["615"],["616"],"Parsing error: Unexpected token\n\n  19 |   <Provider store={store}>\n  20 |     <ConnectedRouter history={history}>\n> 21 | <<<<<<< HEAD\n     |  ^\n  22 |       <TempleteTheme>\n  23 |         <App />\n  24 |       </TempleteTheme>",["615"],["616"],["615"],["616"],["615"],["616"],"'React' is defined but never used.","'useCallback' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'storage' is defined but never used.","'HTMLReactParser' is defined but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["618","619"],["615"],["616"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["615"],["616"],"React Hook useEffect has missing dependencies: 'current_uid' and 'props.className'. Either include them or remove the dependency array.",["620"],["615"],["616"],["615"],["616"],"React Hook useEffect has missing dependencies: 'props.createrUid', 'props.currentUid', and 'props.mid'. Either include them or remove the dependency array.",["621"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["622"],["623"],"'handleChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'current_uid'. Either include it or remove the dependency array.",["624"],["625"],["626"],"'current_uid' is assigned a value but never used.",["627"],["628"],"'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'current_class', 'current_uid', and 'current_value'. Either include them or remove the dependency array.",["629"],["630"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.createrUid'. Either include it or remove the dependency array.",["631"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["632"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has missing dependencies: 'current_class' and 'dispatch'. Either include them or remove the dependency array.",["633"],["634"],"'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'readAnswers' is defined but never used.","'getAnswerLists' is defined but never used.",["635"],["636"],"React Hook useEffect has missing dependencies: 'props.createrUid', 'props.currentUid', and 'props.qid'. Either include them or remove the dependency array.",["637"],"no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected",["638"],"React Hook useEffect has a missing dependency: 'props.view'. Either include it or remove the dependency array.",["639"],"no-global-assign","no-unsafe-negation",{"desc":"640","fix":"641"},{"messageId":"642","fix":"643","desc":"644"},{"messageId":"645","fix":"646","desc":"647"},{"desc":"648","fix":"649"},{"desc":"650","fix":"651"},{"desc":"652","fix":"653"},{"desc":"652","fix":"654"},{"desc":"655","fix":"656"},{"desc":"652","fix":"657"},{"desc":"652","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"desc":"663","fix":"664"},{"desc":"659","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"670","fix":"671"},{"desc":"659","fix":"672"},{"desc":"666","fix":"673"},{"desc":"674","fix":"675"},{"desc":"676","fix":"677"},{"desc":"659","fix":"678"},{"desc":"679","fix":"680"},"Update the dependencies array to be: [dispatch, isSignedIn]",{"range":"681","text":"682"},"removeEscape",{"range":"683","text":"684"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"685","text":"686"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [current_uid, props.className]",{"range":"687","text":"688"},"Update the dependencies array to be: [props.createrUid, props.currentUid, props.mid]",{"range":"689","text":"690"},"Update the dependencies array to be: [dispatch]",{"range":"691","text":"692"},{"range":"693","text":"692"},"Update the dependencies array to be: [current_uid, tid]",{"range":"694","text":"695"},{"range":"696","text":"692"},{"range":"697","text":"692"},"Update the dependencies array to be: [current_uid]",{"range":"698","text":"699"},"Update the dependencies array to be: [dispatch, qid]",{"range":"700","text":"701"},"Update the dependencies array to be: [current_class, current_uid, current_value]",{"range":"702","text":"703"},{"range":"704","text":"699"},"Update the dependencies array to be: [props.createrUid]",{"range":"705","text":"706"},"Update the dependencies array to be: [props]",{"range":"707","text":"708"},"Update the dependencies array to be: [current_class, dispatch]",{"range":"709","text":"710"},{"range":"711","text":"699"},{"range":"712","text":"706"},"Update the dependencies array to be: [add, props]",{"range":"713","text":"714"},"Update the dependencies array to be: [props.createrUid, props.currentUid, props.qid]",{"range":"715","text":"716"},{"range":"717","text":"699"},"Update the dependencies array to be: [props.view, rid]",{"range":"718","text":"719"},[622,624],"[dispatch, isSignedIn]",[401,402],"",[401,401],"\\",[1471,1473],"[current_uid, props.className]",[3761,3763],"[props.createrUid, props.currentUid, props.mid]",[930,932],"[dispatch]",[990,992],[1831,1836],"[current_uid, tid]",[1073,1075],[1071,1073],[1335,1337],"[current_uid]",[1846,1851],"[dispatch, qid]",[4076,4078],"[current_class, current_uid, current_value]",[2140,2142],[1414,1416],"[props.createrUid]",[2333,2335],"[props]",[1950,1952],"[current_class, dispatch]",[2979,2981],[3072,3074],[1560,1565],"[add, props]",[2844,2846],"[props.createrUid, props.currentUid, props.qid]",[4068,4070],[2413,2418],"[props.view, rid]"]