[{"/Users/miyashota/project/react-app/src/reducks/store/store.js":"1","/Users/miyashota/project/react-app/src/reducks/store/initialState.js":"2","/Users/miyashota/project/react-app/src/reducks/chats/operations.js":"3","/Users/miyashota/project/react-app/src/App.js":"4","/Users/miyashota/project/react-app/src/reportWebVitals.js":"5","/Users/miyashota/project/react-app/src/reducks/users/operations.js":"6","/Users/miyashota/project/react-app/src/script/MaterialUi/GreyButton.jsx":"7","/Users/miyashota/project/react-app/src/script/MaterialUi/BlueInputOutlined.jsx":"8","/Users/miyashota/project/react-app/src/script/MaterialUi/DateTimePicker.jsx":"9","/Users/miyashota/project/react-app/src/Auth.js":"10","/Users/miyashota/project/react-app/src/reducks/posts/actions.js":"11","/Users/miyashota/project/react-app/src/firebase/firebase.js":"12","/Users/miyashota/project/react-app/src/script/MaterialUi/GreenButton.jsx":"13","/Users/miyashota/project/react-app/src/script/MaterialUi/AnswerRadio2.jsx":"14","/Users/miyashota/project/react-app/src/script/MaterialUi/FileUpload.jsx":"15","/Users/miyashota/project/react-app/src/reducks/questions/operations.js":"16","/Users/miyashota/project/react-app/src/index.js":"17","/Users/miyashota/project/react-app/src/reducks/users/selectors.js":"18","/Users/miyashota/project/react-app/src/reducks/chats/selectors.js":"19","/Users/miyashota/project/react-app/src/script/MaterialUi/AddButton.jsx":"20","/Users/miyashota/project/react-app/src/script/MaterialUi/AnswerRadio3.jsx":"21","/Users/miyashota/project/react-app/src/reducks/posts/selectors.js":"22","/Users/miyashota/project/react-app/src/reducks/users/actions.js":"23","/Users/miyashota/project/react-app/src/firebase/config.js":"24","/Users/miyashota/project/react-app/src/script/MaterialUi/BlueButton.jsx":"25","/Users/miyashota/project/react-app/src/script/MaterialUi/AnswerText1.jsx":"26","/Users/miyashota/project/react-app/src/script/MaterialUi/FileDelete.jsx":"27","/Users/miyashota/project/react-app/src/reducks/questions/selectors.js":"28","/Users/miyashota/project/react-app/src/script/MaterialUi/GreenInput.jsx":"29","/Users/miyashota/project/react-app/src/script/MaterialUi/BlueInput.jsx":"30","/Users/miyashota/project/react-app/src/script/MaterialUi/SelectBox.jsx":"31","/Users/miyashota/project/react-app/src/reducks/chats/actions.js":"32","/Users/miyashota/project/react-app/src/reducks/chats/reducers.js":"33","/Users/miyashota/project/react-app/src/reducks/users/reducers.js":"34","/Users/miyashota/project/react-app/src/script/Images/image.js":"35","/Users/miyashota/project/react-app/src/functions/function.js":"36","/Users/miyashota/project/react-app/src/script/MaterialUi/PinkButton.jsx":"37","/Users/miyashota/project/react-app/src/script/MaterialUi/ClosableDrawer.jsx":"38","/Users/miyashota/project/react-app/src/reducks/posts/operations.js":"39","/Users/miyashota/project/react-app/src/script/MaterialUi/OrangeButton.jsx":"40","/Users/miyashota/project/react-app/src/script/MaterialUi/materialui.js":"41","/Users/miyashota/project/react-app/src/script/MaterialUi/OrangeInput.jsx":"42","/Users/miyashota/project/react-app/src/reducks/posts/reducers.js":"43","/Users/miyashota/project/react-app/src/script/MaterialUi/QuestionSelect.jsx":"44","/Users/miyashota/project/react-app/src/script/MaterialUi/AppBarSubHeader.jsx":"45","/Users/miyashota/project/react-app/src/script/MaterialUi/AppBarHeader.jsx":"46","/Users/miyashota/project/react-app/src/script/MaterialUi/QuestionInput.jsx":"47","/Users/miyashota/project/react-app/src/reducks/questions/actions.js":"48","/Users/miyashota/project/react-app/src/script/Component/render.js":"49","/Users/miyashota/project/react-app/src/reducks/missions/operations.js":"50","/Users/miyashota/project/react-app/src/script/Component/Chat/Chat.jsx":"51","/Users/miyashota/project/react-app/src/script/Component/Chat/ChatRoomList.jsx":"52","/Users/miyashota/project/react-app/src/script/Component/Mission/MissionList.jsx":"53","/Users/miyashota/project/react-app/src/script/Component/Post/Post.jsx":"54","/Users/miyashota/project/react-app/src/script/Component/Post/PostEdit.jsx":"55","/Users/miyashota/project/react-app/src/script/Component/Post/PostList.jsx":"56","/Users/miyashota/project/react-app/src/script/Component/Setting/Setting.jsx":"57","/Users/miyashota/project/react-app/src/script/Component/Top/ReIssue.jsx":"58","/Users/miyashota/project/react-app/src/script/Component/Top/SignIn.jsx":"59","/Users/miyashota/project/react-app/src/script/Component/Question/Analytics.jsx":"60","/Users/miyashota/project/react-app/src/script/Component/Question/AnalyticsList.jsx":"61","/Users/miyashota/project/react-app/src/script/Component/Question/AnswerEdit.jsx":"62","/Users/miyashota/project/react-app/src/script/Component/Question/Question.jsx":"63","/Users/miyashota/project/react-app/src/script/Component/Question/QuestionComponent.jsx":"64","/Users/miyashota/project/react-app/src/script/Component/Question/QuestionEdit.jsx":"65","/Users/miyashota/project/react-app/src/script/Component/Question/QuestionList.jsx":"66","/Users/miyashota/project/react-app/src/script/Component/Top/SignUp.jsx":"67","/Users/miyashota/project/react-app/src/script/Component/Mission/Mission.jsx":"68","/Users/miyashota/project/react-app/src/script/MaterialUi/ToolTip.jsx":"69","/Users/miyashota/project/react-app/src/script/Component/Layout/Nav.jsx":"70","/Users/miyashota/project/react-app/src/script/Component/Mission/MissionEdit.jsx":"71","/Users/miyashota/project/react-app/src/script/Component/Mission/CollectList.jsx":"72","/Users/miyashota/project/react-app/src/script/Component/Mission/Collect.jsx":"73","/Users/miyashota/project/react-app/src/script/Component/Setting/ProfEdit.jsx":"74","/Users/miyashota/project/react-app/src/reducks/questions/reducers.js":"75","/Users/miyashota/project/react-app/src/reducks/missions/actions.js":"76","/Users/miyashota/project/react-app/src/script/Component/Setting/AuthEdit.jsx":"77","/Users/miyashota/project/react-app/src/script/MaterialUi/BlueButtonNomal.jsx":"78","/Users/miyashota/project/react-app/src/script/Component/Setting/UserDelete.jsx":"79","/Users/miyashota/project/react-app/src/script/MaterialUi/PinkButtonNomal.jsx":"80","/Users/miyashota/project/react-app/src/reducks/missions/selectors.js":"81","/Users/miyashota/project/react-app/src/script/Component/Layout/Header.jsx":"82","/Users/miyashota/project/react-app/src/script/MaterialUi/ToolTipTime.jsx":"83","/Users/miyashota/project/react-app/src/script/Component/Setting/ProfDialog.jsx":"84","/Users/miyashota/project/react-app/src/script/Component/Setting/IconCropper.jsx":"85","/Users/miyashota/project/react-app/src/script/MaterialUi/IconUpload.jsx":"86","/Users/miyashota/project/react-app/src/reducks/missions/reducers.js":"87","/Users/miyashota/project/react-app/src/script/Component/Schedule/Schedule.jsx":"88","/Users/miyashota/project/react-app/src/script/Component/ScrollTop.jsx":"89","/Users/miyashota/project/react-app/src/reducks/tasks/operations.js":"90","/Users/miyashota/project/react-app/src/script/Component/Task/MyTask.jsx":"91","/Users/miyashota/project/react-app/src/script/Component/Task/MyTaskEdit.jsx":"92","/Users/miyashota/project/react-app/src/script/Component/Schedule/data/schoolevent.js":"93","/Users/miyashota/project/react-app/src/reducks/tasks/reducers.js":"94","/Users/miyashota/project/react-app/src/script/Component/Task/MyTaskList.jsx":"95","/Users/miyashota/project/react-app/src/reducks/tasks/actions.js":"96","/Users/miyashota/project/react-app/src/reducks/tasks/selectors.js":"97","/Users/miyashota/project/react-app/src/script/Component/Chat/ChatMessageList.jsx":"98","/Users/miyashota/project/react-app/src/script/Component/Chat/ChatMessageComponent.jsx":"99","/Users/miyashota/project/react-app/src/script/Component/Chat/RoomEdit.jsx":"100","/Users/miyashota/project/react-app/src/script/Component/Chat/RoomUserList.jsx":"101","/Users/miyashota/project/react-app/src/script/Component/Chat/ChatMessage.jsx":"102","/Users/miyashota/project/react-app/src/script/Component/Mission/MissionSubmit.jsx":"103","/Users/miyashota/project/react-app/src/script/Component/Chat/RoomCheckedList.jsx":"104"},{"size":1849,"mtime":1613066152932,"results":"105","hashOfConfig":"106"},{"size":452,"mtime":1613066229893,"results":"107","hashOfConfig":"106"},{"size":6327,"mtime":1613103357314,"results":"108","hashOfConfig":"106"},{"size":2388,"mtime":1613907975925,"results":"109","hashOfConfig":"106"},{"size":356,"mtime":1609345151014,"results":"110","hashOfConfig":"106"},{"size":11595,"mtime":1613351194335,"results":"111","hashOfConfig":"106"},{"size":870,"mtime":1611077669292,"results":"112","hashOfConfig":"106"},{"size":633,"mtime":1611813258718,"results":"113","hashOfConfig":"106"},{"size":1164,"mtime":1613057471205,"results":"114","hashOfConfig":"106"},{"size":675,"mtime":1612676956487,"results":"115","hashOfConfig":"106"},{"size":296,"mtime":1610856678749,"results":"116","hashOfConfig":"106"},{"size":452,"mtime":1610304223284,"results":"117","hashOfConfig":"106"},{"size":862,"mtime":1612597099503,"results":"118","hashOfConfig":"106"},{"size":1286,"mtime":1612235542538,"results":"119","hashOfConfig":"106"},{"size":1499,"mtime":1613099041438,"results":"120","hashOfConfig":"106"},{"size":5948,"mtime":1612886386468,"results":"121","hashOfConfig":"106"},{"size":1172,"mtime":1612677050013,"results":"122","hashOfConfig":"106"},{"size":809,"mtime":1612085789566,"results":"123","hashOfConfig":"106"},{"size":253,"mtime":1613065924830,"results":"124","hashOfConfig":"106"},{"size":817,"mtime":1610787434330,"results":"125","hashOfConfig":"106"},{"size":1409,"mtime":1612235275158,"results":"126","hashOfConfig":"106"},{"size":254,"mtime":1610856734092,"results":"127","hashOfConfig":"106"},{"size":269,"mtime":1613490592676,"results":"128","hashOfConfig":"106"},{"size":349,"mtime":1609698268328,"results":"129","hashOfConfig":"106"},{"size":862,"mtime":1613092252231,"results":"130","hashOfConfig":"106"},{"size":1000,"mtime":1612235995478,"results":"131","hashOfConfig":"106"},{"size":1325,"mtime":1613099054453,"results":"132","hashOfConfig":"106"},{"size":566,"mtime":1612750080135,"results":"133","hashOfConfig":"106"},{"size":909,"mtime":1610785722285,"results":"134","hashOfConfig":"106"},{"size":682,"mtime":1612235992769,"results":"135","hashOfConfig":"106"},{"size":1087,"mtime":1611278119885,"results":"136","hashOfConfig":"106"},{"size":300,"mtime":1613066105397,"results":"137","hashOfConfig":"106"},{"size":506,"mtime":1613066124258,"results":"138","hashOfConfig":"106"},{"size":472,"mtime":1611342454202,"results":"139","hashOfConfig":"106"},{"size":1398,"mtime":1612881493985,"results":"140","hashOfConfig":"106"},{"size":2090,"mtime":1613978975046,"results":"141","hashOfConfig":"106"},{"size":900,"mtime":1613092233775,"results":"142","hashOfConfig":"106"},{"size":4484,"mtime":1612881436233,"results":"143","hashOfConfig":"106"},{"size":4476,"mtime":1613110285962,"results":"144","hashOfConfig":"106"},{"size":863,"mtime":1612597135639,"results":"145","hashOfConfig":"106"},{"size":1694,"mtime":1612076942228,"results":"146","hashOfConfig":"106"},{"size":914,"mtime":1610864612289,"results":"147","hashOfConfig":"106"},{"size":513,"mtime":1612666103769,"results":"148","hashOfConfig":"106"},{"size":1320,"mtime":1610866832336,"results":"149","hashOfConfig":"106"},{"size":4098,"mtime":1612092642775,"results":"150","hashOfConfig":"106"},{"size":5922,"mtime":1613465260580,"results":"151","hashOfConfig":"106"},{"size":629,"mtime":1610866840056,"results":"152","hashOfConfig":"106"},{"size":1203,"mtime":1612671017954,"results":"153","hashOfConfig":"106"},{"size":2519,"mtime":1613978480019,"results":"154","hashOfConfig":"106"},{"size":6273,"mtime":1613116792358,"results":"155","hashOfConfig":"106"},{"size":954,"mtime":1612818747227,"results":"156","hashOfConfig":"106"},{"size":3548,"mtime":1613102166393,"results":"157","hashOfConfig":"106"},{"size":7416,"mtime":1613971326042,"results":"158","hashOfConfig":"106"},{"size":1883,"mtime":1613062832678,"results":"159","hashOfConfig":"106"},{"size":5385,"mtime":1613965795308,"results":"160","hashOfConfig":"106"},{"size":6063,"mtime":1613965347610,"results":"161","hashOfConfig":"106"},{"size":4651,"mtime":1612676315824,"results":"162","hashOfConfig":"106"},{"size":2107,"mtime":1613907597918,"results":"163","hashOfConfig":"106"},{"size":3563,"mtime":1614560945897,"results":"164","hashOfConfig":"106"},{"size":1689,"mtime":1613111243276,"results":"165","hashOfConfig":"106"},{"size":3505,"mtime":1612672479210,"results":"166","hashOfConfig":"106"},{"size":3818,"mtime":1613112131813,"results":"167","hashOfConfig":"106"},{"size":2139,"mtime":1613062899325,"results":"168","hashOfConfig":"106"},{"size":3622,"mtime":1612750441512,"results":"169","hashOfConfig":"106"},{"size":4634,"mtime":1612939835473,"results":"170","hashOfConfig":"106"},{"size":5671,"mtime":1613963332229,"results":"171","hashOfConfig":"106"},{"size":5069,"mtime":1613907986623,"results":"172","hashOfConfig":"106"},{"size":2171,"mtime":1613063037485,"results":"173","hashOfConfig":"106"},{"size":700,"mtime":1610942132360,"results":"174","hashOfConfig":"106"},{"size":1731,"mtime":1613908000900,"results":"175","hashOfConfig":"106"},{"size":6021,"mtime":1613966251247,"results":"176","hashOfConfig":"106"},{"size":2918,"mtime":1613117664932,"results":"177","hashOfConfig":"106"},{"size":1567,"mtime":1613117325111,"results":"178","hashOfConfig":"106"},{"size":3384,"mtime":1614601966102,"results":"179","hashOfConfig":"106"},{"size":1234,"mtime":1612751550526,"results":"180","hashOfConfig":"106"},{"size":333,"mtime":1611690403718,"results":"181","hashOfConfig":"106"},{"size":4507,"mtime":1612676274489,"results":"182","hashOfConfig":"106"},{"size":776,"mtime":1613092261354,"results":"183","hashOfConfig":"106"},{"size":2392,"mtime":1612676249880,"results":"184","hashOfConfig":"106"},{"size":776,"mtime":1613092282011,"results":"185","hashOfConfig":"106"},{"size":265,"mtime":1611690546822,"results":"186","hashOfConfig":"106"},{"size":307,"mtime":1613907997873,"results":"187","hashOfConfig":"106"},{"size":687,"mtime":1611897207077,"results":"188","hashOfConfig":"106"},{"size":2818,"mtime":1612675899531,"results":"189","hashOfConfig":"106"},{"size":797,"mtime":1612602866990,"results":"190","hashOfConfig":"106"},{"size":1586,"mtime":1612077951698,"results":"191","hashOfConfig":"106"},{"size":525,"mtime":1613105234100,"results":"192","hashOfConfig":"106"},{"size":5164,"mtime":1612885679484,"results":"193","hashOfConfig":"106"},{"size":428,"mtime":1612823083780,"results":"194","hashOfConfig":"106"},{"size":6178,"mtime":1613059619545,"results":"195","hashOfConfig":"106"},{"size":2389,"mtime":1613102254227,"results":"196","hashOfConfig":"106"},{"size":4713,"mtime":1612939843784,"results":"197","hashOfConfig":"106"},{"size":1093,"mtime":1612588992436,"results":"198","hashOfConfig":"106"},{"size":910,"mtime":1613057767556,"results":"199","hashOfConfig":"106"},{"size":3193,"mtime":1613060033279,"results":"200","hashOfConfig":"106"},{"size":710,"mtime":1613057768352,"results":"201","hashOfConfig":"106"},{"size":448,"mtime":1613053422138,"results":"202","hashOfConfig":"106"},{"size":4618,"mtime":1613974464945,"results":"203","hashOfConfig":"106"},{"size":2772,"mtime":1613063410251,"results":"204","hashOfConfig":"106"},{"size":6407,"mtime":1613064918679,"results":"205","hashOfConfig":"106"},{"size":2962,"mtime":1613063552753,"results":"206","hashOfConfig":"106"},{"size":501,"mtime":1613063732018,"results":"207","hashOfConfig":"106"},{"size":4034,"mtime":1613966360060,"results":"208","hashOfConfig":"106"},{"size":1643,"mtime":1613063552753,"results":"209","hashOfConfig":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"noc2iu",{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"247"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"251"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"214"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"307"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"231"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"324"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"247"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"235"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"235"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"307"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"343"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"247"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"307"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"324"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"225"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"307"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"217"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"225"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"380"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"307"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"214"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"278"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"402","messages":"403","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"405"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"217"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"225"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"214"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"307"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"284"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"262"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"225"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"307"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},"/Users/miyashota/project/react-app/src/reducks/store/store.js",[],"/Users/miyashota/project/react-app/src/reducks/store/initialState.js",[],["472","473"],"/Users/miyashota/project/react-app/src/reducks/chats/operations.js",[],["474","475"],"/Users/miyashota/project/react-app/src/App.js",[],"/Users/miyashota/project/react-app/src/reportWebVitals.js",[],["476","477"],"/Users/miyashota/project/react-app/src/reducks/users/operations.js",[],["478","479"],"/Users/miyashota/project/react-app/src/script/MaterialUi/GreyButton.jsx",[],["480","481"],"/Users/miyashota/project/react-app/src/script/MaterialUi/BlueInputOutlined.jsx",[],["482","483"],"/Users/miyashota/project/react-app/src/script/MaterialUi/DateTimePicker.jsx",["484"],"import React, { useState } from 'react'\nimport jaLocale from 'date-fns/locale/ja'\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker,\n} from '@material-ui/pickers'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport DateFnsUtils from '@date-io/date-fns'\n\n/* ===================================================================== */\n\nconst useStyles = makeStyles({\n  date: {\n    marginTop: '10px',\n  },\n})\n\nconst DateTimePicker = (props) => {\n  const classes = useStyles()\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={jaLocale}>\n      <Grid container justify=\"space-around\">\n        <KeyboardDateTimePicker\n          className={classes.date}\n          disablePast={true}\n          minDate={props.minDate}\n          invalidDateMessage={false}\n          ampm={props.ampm}\n          format=\"yyyy年M月dd日 HH:mm\"\n          cancelLabel={'キャンセル'}\n          okLabel={'決定'}\n          fullWidth={props.fullWidth}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      </Grid>\n    </MuiPickersUtilsProvider>\n  )\n}\n\nexport default DateTimePicker\n",["485","486"],"/Users/miyashota/project/react-app/src/Auth.js",["487"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getIsLogin } from './reducks/users/selectors.js'\nimport { listenAuthState } from './reducks/users/operations.js'\n/* ===================================================================== */\n\nconst Auth = ({ children }) => {\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const isSignedIn = getIsLogin(selector)\n\n  // セッションチェック\n  useEffect(() => {\n    if (!isSignedIn) {\n      dispatch(listenAuthState())\n    }\n  }, [])\n\n  if (!isSignedIn) {\n    return <></>\n  } else {\n    return children\n  }\n}\n\nexport default Auth\n",["488","489"],"/Users/miyashota/project/react-app/src/reducks/posts/actions.js",[],["490","491"],"/Users/miyashota/project/react-app/src/firebase/firebase.js",[],"/Users/miyashota/project/react-app/src/script/MaterialUi/GreenButton.jsx",[],["492","493"],"/Users/miyashota/project/react-app/src/script/MaterialUi/AnswerRadio2.jsx",["494"],"import React, { useState } from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport { makeStyles } from '@material-ui/core/styles'\n/* ===================================================================== */\n\nconst useStyles = makeStyles((theme) => ({\n  radio: {\n    marginTop: '10px',\n    fontSize: 10,\n  },\n}))\n\nconst AnswerRadio3 = (props) => {\n  const classes = useStyles()\n\n  const handleChange = (event) => {\n    props.onChange(props.id, event.target.value)\n  }\n\n  return (\n    <FormControl component=\"fieldset\" className={classes.radio}>\n      <RadioGroup\n        column\n        aria-label=\"position\"\n        name=\"position\"\n        value={props.value}\n        onChange={handleChange}\n      >\n        <FormControlLabel\n          disabled={props.disabled}\n          value=\"1\"\n          control={<Radio color=\"primary\" />}\n          label=\"はい\"\n        />\n        <FormControlLabel\n          disabled={props.disabled}\n          value=\"2\"\n          control={<Radio color=\"primary\" />}\n          label=\"いいえ\"\n        />\n      </RadioGroup>\n    </FormControl>\n  )\n}\nexport default AnswerRadio3\n",["495","496"],"/Users/miyashota/project/react-app/src/script/MaterialUi/FileUpload.jsx",[],"/Users/miyashota/project/react-app/src/reducks/questions/operations.js",["497","498"],"import firebase from 'firebase/app'\nimport { push } from 'connected-react-router'\nimport { db, FirebaseTimestamp } from '../../firebase/firebase'\nimport {\n  readQuestionsAction,\n  deleteQuestionsAction,\n  addQuestionItemAction,\n  deleteQuestionItemAction,\n  readQuestionItemAction,\n  readAnswersAction,\n} from './actions.js'\n/* ===================================================================== */\n\nconst questionsRef = db.collection('questions')\nconst schedulesRef = db.collection('schedules')\n\nexport const readQuestions = () => {\n  return async (dispatch, getState) => {\n    const state = getState()\n    const userId = state.users.uid\n    const className = state.users.class_name\n    const userValue = state.users.user_value\n\n    questionsRef\n      // .where('limit_time', '>', new Date())\n      .orderBy('limit_time', 'asc')\n      .onSnapshot((snapshots) => {\n        const questionList = []\n        snapshots.forEach((snapshot) => {\n          const question = snapshot.data()\n          if (question.destination === 'all') {\n            questionList.push(question)\n          } else if (question.destination === userValue) {\n            questionList.push(question)\n          } else if (question.destination === className) {\n            questionList.push(question)\n          } else if (question.creater_uid === userId) {\n            questionList.push(question)\n          }\n        })\n        dispatch(readQuestionsAction(questionList))\n      })\n  }\n}\n\nexport const createQuestions = (\n  qid,\n  destination,\n  title,\n  item,\n  limitTime,\n  questionData\n) => {\n  return async (dispatch, getState) => {\n    let nullData = ''\n    if (destination === '') {\n      nullData = nullData + '【投稿先】'\n    }\n    if (title === '') {\n      nullData = nullData + '【タイトル】'\n    }\n    if (limitTime === '') {\n      nullData = nullData + '【期限】'\n    }\n    if (questionData.length === 0) {\n      nullData = nullData + '【質問】'\n    }\n    if (nullData !== '') {\n      alert(`項目：${nullData}を入力してください。`)\n      return false\n    }\n\n    const check = window.confirm('投稿してよろしいですか？')\n    if (check) {\n      const state = getState()\n      const userId = state.users.uid\n      const timestamp = FirebaseTimestamp.now()\n      const data = {\n        destination: destination,\n        title: title,\n        item: item,\n        limit_time: limitTime,\n        question_data: questionData,\n        creater_uid: userId,\n        update_time: timestamp,\n      }\n      if (qid === '') {\n        const ref = questionsRef.doc()\n        data.created_time = timestamp\n        // 要注意！！ドキュメントのIDだよ！\n        qid = ref.id\n        data.qid = qid\n      }\n\n      const task = {\n        doc: qid,\n        title: title,\n        startDate: timestamp,\n        endDate: limitTime,\n        tag: '3',\n        destination: destination,\n        creater_uid: userId,\n      }\n\n      return questionsRef\n        .doc(qid)\n        .set(data, { merge: true })\n        .then(() => {\n          schedulesRef\n            .doc(qid)\n            .set(task, { merge: true })\n            .then(() => {\n              dispatch(push('/question'))\n            })\n        })\n        .catch((error) => {\n          throw new Error(error)\n        })\n    }\n  }\n}\n\nexport const deleteQuestions = (qid) => {\n  return async (dispatch, getState) => {\n    const check = window.confirm('削除してよろしいですか？')\n    if (check) {\n      questionsRef\n        .doc(qid)\n        .delete()\n        .then(() => {\n          schedulesRef\n            .doc(qid)\n            .delete()\n            .then(() => {\n              dispatch(push('/question'))\n            })\n        })\n    }\n  }\n}\n\nexport const addQuestionItem = (questionItem, questionType) => {\n  return async (dispatch) => {\n    if (questionItem === '' || questionType === '') {\n      alert('質問内容と質問のタイプを入力してください。')\n      return false\n    }\n    const data = {\n      item: questionItem,\n      type: questionType,\n    }\n    dispatch(addQuestionItemAction(data))\n  }\n}\n\nexport const deleteQuestionItem = (index) => {\n  return async (dispatch) => {\n    dispatch(deleteQuestionItemAction(index))\n  }\n}\n\nexport const readQuestionItem = (questionData) => {\n  return async (dispatch) => {\n    const data = questionData\n    dispatch(readQuestionItemAction(data))\n  }\n}\n\nexport const readAnswers = (qid) => {\n  return async (dispatch) => {\n    questionsRef\n      .doc(qid)\n      .collection('answers')\n      .orderBy('answer_class', 'desc')\n      .get()\n      .then((snapshots) => {\n        const AnswersList = []\n        snapshots.forEach((snapshots) => {\n          const answers = snapshots.data()\n          AnswersList.push(answers)\n        })\n        dispatch(readAnswersAction(AnswersList))\n      })\n  }\n}\n\nexport const createAnswers = (qid, answerData) => {\n  return async (dispatch, getState) => {\n    const state = getState()\n    const userId = state.users.uid\n    const userName = state.users.user_name\n    const userValue = state.users.user_value\n    const userNumber = state.users.user_number\n    const className = state.users.class_name\n\n    const check = window.confirm('終了してよろしいですか？')\n\n    if (check) {\n      const timestamp = FirebaseTimestamp.now()\n      const ref = questionsRef.doc().collection('answers').doc()\n      const aid = ref.id\n\n      const data = {\n        aid: aid,\n        answer_uid: userId,\n        answer_name: userName,\n        answer_value: userValue,\n        answer_number: userNumber,\n        answer_class: className,\n        answer_data: answerData,\n        answer_time: timestamp,\n      }\n\n      return questionsRef\n        .doc(qid)\n        .collection('answers')\n        .doc(userId)\n        .set(data)\n        .then(() => {\n          dispatch(push('/question'))\n        })\n        .catch((error) => {\n          throw new Error(error)\n        })\n    }\n  }\n}\n","/Users/miyashota/project/react-app/src/index.js",[],["499","500"],"/Users/miyashota/project/react-app/src/reducks/users/selectors.js",[],["501","502"],"/Users/miyashota/project/react-app/src/reducks/chats/selectors.js",[],"/Users/miyashota/project/react-app/src/script/MaterialUi/AddButton.jsx",["503","504"],"import React from 'react'\n\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport AddIcon from '@material-ui/icons/Add'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { orange } from '@material-ui/core/colors'\n/* ===================================================================== */\n\nconst useStyles = makeStyles((theme) => ({\n  btn: {\n    fontSize: '45px',\n    color: orange[500],\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}))\n\nconst AddButton = () => {\n  const classes = useStyles()\n  return (\n    <>\n      {/* <AddIcon className={classes.btn} /> */}\n      <AddCircleIcon className={classes.btn} />\n      {/* <AddCircleOutlineIcon className={classes.btn} /> */}\n    </>\n  )\n}\nexport default AddButton\n","/Users/miyashota/project/react-app/src/script/MaterialUi/AnswerRadio3.jsx",[],"/Users/miyashota/project/react-app/src/reducks/posts/selectors.js",[],"/Users/miyashota/project/react-app/src/reducks/users/actions.js",[],"/Users/miyashota/project/react-app/src/firebase/config.js",[],"/Users/miyashota/project/react-app/src/script/MaterialUi/BlueButton.jsx",[],["505","506"],"/Users/miyashota/project/react-app/src/script/MaterialUi/AnswerText1.jsx",[],["507","508"],"/Users/miyashota/project/react-app/src/script/MaterialUi/FileDelete.jsx",[],["509","510"],"/Users/miyashota/project/react-app/src/reducks/questions/selectors.js",[],"/Users/miyashota/project/react-app/src/script/MaterialUi/GreenInput.jsx",[],"/Users/miyashota/project/react-app/src/script/MaterialUi/BlueInput.jsx",[],"/Users/miyashota/project/react-app/src/script/MaterialUi/SelectBox.jsx",[],"/Users/miyashota/project/react-app/src/reducks/chats/actions.js",[],"/Users/miyashota/project/react-app/src/reducks/chats/reducers.js",[],"/Users/miyashota/project/react-app/src/reducks/users/reducers.js",[],"/Users/miyashota/project/react-app/src/script/Images/image.js",[],"/Users/miyashota/project/react-app/src/functions/function.js",["511","512","513","514","515","516","517","518"],"import React, { useCallback, useState, useEffect, useRef } from 'react'\nimport { storage } from '../firebase/firebase.js'\nimport HTMLReactParser from 'html-react-parser'\n/* ===================================================================== */\n\n/**\n * Validate input email\n * @param email\n * @returns {boolean}\n */\nexport const isValidEmailFormat = (email) => {\n  const regex = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n  return regex.test(email)\n}\n\n/**\n * Show an alert if required input is blank\n * @param args Required input values\n * @returns {boolean}\n */\nexport const isValidRequiredInput = (...args) => {\n  let validator = true\n  for (let i = 0; i < args.length; i = (i + 1) | 0) {\n    if (args[i] === '') {\n      validator = false\n    }\n  }\n  return validator\n}\n\n// create the image with a src of the base64 string\nconst createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', (error) => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous')\n    image.src = url\n  })\n\nexport default async function getCroppedImg(imageSrc, crop) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  /* setting canvas width & height allows us to \n    resize from the original image resolution */\n  canvas.width = 250\n  canvas.height = 250\n\n  ctx.drawImage(\n    image,\n    crop.x,\n    crop.y,\n    crop.width,\n    crop.height,\n    0,\n    0,\n    canvas.width,\n    canvas.height\n  )\n  return new Promise((resolve) => {\n    canvas.toBlob((blob) => {\n      resolve(blob)\n    }, 'image/jpeg')\n  })\n}\n\nconst allow_exts = ['jpg', 'jpeg', 'png']\nconst getExt = (filename) => {\n  var pos = filename.lastIndexOf('.')\n  if (pos === -1) return ''\n  return filename.slice(pos + 1)\n}\nexport const checkExt = (filename) => {\n  if (filename) {\n    var ext = getExt(filename).toLowerCase()\n    if (allow_exts.indexOf(ext) === -1) return false\n    return true\n  }\n}\n","/Users/miyashota/project/react-app/src/script/MaterialUi/PinkButton.jsx",["519"],"import React from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { pink } from '@material-ui/core/colors'\n/* ===================================================================== */\n\nconst useStyles = makeStyles((theme) => ({\n  pink: {\n    boxShadow: 'none',\n    backgroundColor: 'white',\n    color: '#e91e63',\n    border: '1px solid #e91e63',\n    '&:hover': {\n      fontWeight: 'bold',\n      color: 'white',\n      backgroundColor: '#e91e63',\n    },\n    [theme.breakpoints.up('sm')]: {},\n  },\n}))\n\nconst PinkButton = (props) => {\n  const classes = useStyles()\n  return (\n    <Button\n      fullWidth={props.fullWidth}\n      size={props.size}\n      variant=\"contained\"\n      color=\"default\"\n      className={classes.pink}\n      onClick={() => props.onClick()}\n    >\n      {props.label}\n    </Button>\n  )\n}\n\nexport default PinkButton\n",["520","521"],"/Users/miyashota/project/react-app/src/script/MaterialUi/ClosableDrawer.jsx",["522","523","524","525","526","527","528","529","530","531","532","533","534","535"],"import React, { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nimport { db } from '../../firebase/firebase.js'\nimport { signOut } from '../../reducks/users/operations'\nimport {\n  Post,\n  Chat,\n  Question,\n  Schedule,\n  Mission,\n  Setting,\n  Task,\n  Exit,\n} from '../Images/image.js'\n\nimport SchoolSharpIcon from '@material-ui/icons/SchoolSharp'\nimport TuneSharpIcon from '@material-ui/icons/TuneSharp'\nimport AppsSharpIcon from '@material-ui/icons/AppsSharp'\nimport ShuffleSharpIcon from '@material-ui/icons/ShuffleSharp'\nimport VerticalSplitSharpIcon from '@material-ui/icons/VerticalSplitSharp'\n\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport HistoryIcon from '@material-ui/icons/History'\nimport PersonIcon from '@material-ui/icons/Person'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\n/* ===================================================================== */\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    drawer: {\n      zIndex: 150,\n      display: 'block',\n      [theme.breakpoints.up('md')]: {\n        width: 256,\n        flexShrink: 0,\n        display: 'none',\n      },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      width: 256,\n    },\n    searchField: {\n      alignItems: 'center',\n      display: 'flex',\n      marginLeft: 32,\n    },\n    icon: {\n      opacity: 0.5,\n    },\n    item: {\n      color: '#000000bb',\n    },\n  })\n)\n\nconst ClosableDrawer = (props) => {\n  const { container } = props\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const selectMenu = (event, path) => {\n    dispatch(push(path))\n    props.onClose(event, false)\n  }\n\n  const menus = [\n    {\n      func: selectMenu,\n      label: '掲示板',\n      icon: <Post />,\n      id: 'post',\n      value: '/post',\n    },\n    {\n      func: selectMenu,\n      label: '課題',\n      icon: <Mission />,\n      id: 'mission',\n      value: '/mission',\n    },\n    {\n      func: selectMenu,\n      label: 'チャット',\n      icon: <Chat />,\n      id: 'chat',\n      value: '/chat',\n    },\n    {\n      func: selectMenu,\n      label: 'タスク',\n      icon: <Task />,\n      id: 'task',\n      value: '/task',\n    },\n    {\n      func: selectMenu,\n      label: 'アンケート',\n      icon: <Question />,\n      id: 'question',\n      value: '/question',\n    },\n    {\n      func: selectMenu,\n      label: 'スケジュール',\n      icon: <Schedule />,\n      id: 'schedule',\n      value: '/schedule',\n    },\n    {\n      func: selectMenu,\n      label: '設定',\n      icon: <Setting />,\n      id: 'setting',\n      value: '/setting',\n    },\n  ]\n\n  return (\n    <nav className={classes.drawer} aria-label=\"mailbox folders\">\n      <Drawer\n        container={container}\n        variant=\"temporary\"\n        anchor={'left'}\n        open={props.open}\n        onClose={(e) => props.onClose(e, false)}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        ModalProps={{\n          keepMounted: true, // Better open performance on mobile.\n        }}\n      >\n        <div\n          onClose={(e) => props.onClose(e, false)}\n          onKeyDown={(e) => props.onClose(e, false)}\n        >\n          <Divider />\n          <List>\n            {menus.map((menu) => (\n              <ListItem\n                button\n                key={menu.id}\n                onClick={(e) => menu.func(e, menu.value)}\n              >\n                <ListItemIcon className={classes.icon}>\n                  {menu.icon}\n                </ListItemIcon>\n                <ListItemText className={classes.item} primary={menu.label} />\n              </ListItem>\n            ))}\n            <ListItem button key=\"logout\" onClick={() => dispatch(signOut())}>\n              <ListItemIcon>\n                <Exit className={classes.icon} />\n              </ListItemIcon>\n              <ListItemText className={classes.item} primary=\"ログアウト\" />\n            </ListItem>\n          </List>\n          <Divider />\n        </div>\n      </Drawer>\n    </nav>\n  )\n}\n\nexport default ClosableDrawer\n","/Users/miyashota/project/react-app/src/reducks/posts/operations.js",[],"/Users/miyashota/project/react-app/src/script/MaterialUi/OrangeButton.jsx",[],"/Users/miyashota/project/react-app/src/script/MaterialUi/materialui.js",[],"/Users/miyashota/project/react-app/src/script/MaterialUi/OrangeInput.jsx",[],"/Users/miyashota/project/react-app/src/reducks/posts/reducers.js",[],"/Users/miyashota/project/react-app/src/script/MaterialUi/QuestionSelect.jsx",["536","537"],"import React, { useState, useCallback } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n/* ===================================================================== */\n\nconst useStyles = makeStyles({\n  formControl: {\n    width: '30%',\n    marginTop: '15px',\n  },\n  label: {\n    paddingLeft: '20px',\n  },\n})\n\nconst QuestionSelect = (props) => {\n  const classes = useStyles()\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel>タイプ</InputLabel>\n      <Select\n        required\n        value={props.value}\n        onChange={(e) => props.select(e.target.value)}\n      >\n        {sent.map((sent, index) => {\n          return (\n            <MenuItem key={index} value={sent.type} className={classes.label}>\n              {sent.name}\n            </MenuItem>\n          )\n        })}\n      </Select>\n    </FormControl>\n  )\n}\nexport default QuestionSelect\n\nconst sent = [\n  { type: '1', name: 'テキスト' },\n  { type: '2', name: '２択（はい・いいえ）' },\n  {\n    type: '3',\n    name: '３択（そう思う・どちらでもない・そう思わない）',\n  },\n]\n",["538","539"],"/Users/miyashota/project/react-app/src/script/MaterialUi/AppBarSubHeader.jsx",["540","541"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nimport { deleteChatRoom } from '../../reducks/chats/operations.js'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport SettingsIcon from '@material-ui/icons/Settings'\n/* ===================================================================== */\n\nconst useStyles = makeStyles((theme) => ({\n  appbar: {\n    top: '55px',\n    height: '35px',\n\n    position: 'fixed',\n    display: 'flex',\n    zIndex: 50,\n    width: '100%',\n    boxShadow: 'none',\n    backgroundColor: 'white',\n    borderBottom: '1px solid #00000022',\n    [theme.breakpoints.up('sm')]: {\n      height: '48px',\n      top: '70px',\n    },\n    [theme.breakpoints.up('md')]: {\n      width: 'calc(100% - 230px)',\n    },\n  },\n  title: {\n    color: '#000000de',\n    fontSize: 16,\n    marginBottom: 14,\n    [theme.breakpoints.up('sm')]: {\n      fontSize: 20,\n      marginBottom: 0,\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  chat_menu: {\n    display: 'none',\n  },\n  menuButtonTrue: {\n    display: 'block',\n  },\n  menuButtonFalse: {\n    display: 'none',\n  },\n  none: {\n    display: 'none',\n  },\n  icon: {\n    width: theme.spacing(2.8),\n    height: theme.spacing(2.8),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n  },\n  menuButton: {\n    marginBottom: 14,\n    marginRight: -3,\n    [theme.breakpoints.up('sm')]: {\n      marginRight: 0,\n      marginBottom: 0,\n    },\n  },\n}))\n\nconst AppBarSubHeader = (props) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [rid, setRid] = useState('')\n\n  useEffect(() => {\n    if (props.view === true) {\n      const id = window.location.pathname.split('/chat/room')[1]\n      if (id !== '') {\n        const path = id.split('/')[1]\n        setRid(path)\n      }\n    }\n  }, [rid])\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const open = Boolean(anchorEl)\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n  const handleRoomEdit = (rid) => {\n    setAnchorEl(null)\n    dispatch(push('/chat/edit/' + rid))\n  }\n  const handleRoomDelete = (rid) => {\n    setAnchorEl(null)\n    dispatch(deleteChatRoom(rid))\n  }\n\n  return (\n    <AppBar position=\"static\" className={classes.appbar}>\n      <Toolbar variant=\"dense\">\n        <Typography className={classes.title} variant=\"h6\" color=\"inherit\">\n          {props.subtitle}\n        </Typography>\n        <div className={classes.grow} />\n\n        <div\n          className={\n            props.view && rid.length > 12\n              ? classes.menuButtonTrue\n              : classes.menuButtonFalse\n          }\n        >\n          <IconButton\n            className={classes.menuButton}\n            edge=\"end\"\n            aria-label=\"menu\"\n            onClick={handleMenu}\n          >\n            {/* <MoreIcon className={classes.icon} /> */}\n            <SettingsIcon className={classes.icon} />\n          </IconButton>\n          <Menu\n            id=\"menu-appbar\"\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            open={open}\n            onClose={handleClose}\n          >\n            <MenuItem onClick={() => handleRoomEdit(rid)}>ルーム編集</MenuItem>\n            <MenuItem onClick={() => handleRoomDelete(rid)}>\n              ルーム削除\n            </MenuItem>\n          </Menu>\n        </div>\n      </Toolbar>\n    </AppBar>\n  )\n}\nexport default AppBarSubHeader\n","/Users/miyashota/project/react-app/src/script/MaterialUi/AppBarHeader.jsx",["542","543"],"import React, { useState, useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { Link } from 'react-router-dom'\n\nimport { ClosableDrawer } from './materialui.js'\nimport { db } from '../../firebase/firebase'\nimport { getUserId } from '../../reducks/users/selectors'\nimport { signOut } from '../../reducks/users/operations'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { blue } from '@material-ui/core/colors'\nimport Avatar from '@material-ui/core/Avatar'\n/* ===================================================================== */\n\nconst useStyles = makeStyles((theme) => ({\n  appbar: {\n    boxShadow: 'none',\n    backgroundColor: 'white',\n    borderBottom: '1px solid #00000022',\n    height: '55px',\n    [theme.breakpoints.up('sm')]: {\n      height: '70px',\n    },\n  },\n  title: {\n    color: blue[500],\n    fontWeight: 'bold',\n    fontSize: '25px',\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '30px',\n      paddingLeft: '25px',\n    },\n  },\n  icon: {\n    width: theme.spacing(5),\n    height: theme.spacing(5),\n    color: '#ffffff',\n    backgroundColor: '#2196f3',\n    border: '3px solid #90caf9',\n    boxSizing: 'border-box',\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(6),\n      height: theme.spacing(6),\n    },\n  },\n  menu: {\n    color: 'white',\n    fontSize: '25px',\n    color: blue[500],\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '30px',\n    },\n  },\n  menuButton: {\n    display: 'block',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  grow_sm: {\n    flexGrow: 1,\n    [theme.breakpoints.up('md')]: {\n      flexGrow: 0,\n    },\n  },\n}))\n\nconst AppBarHeader = (props) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const current_uid = getUserId(selector)\n  const [icon, setIcon] = useState('')\n  const [anchorEl, setAnchorEl] = useState(null)\n  const [sideBarOpen, setSideBarOpen] = useState(false)\n\n  const isMenuOpen = Boolean(anchorEl)\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleProfEditPush = () => {\n    handleMenuClose()\n    dispatch(push('/setting/prof'))\n  }\n\n  const handleSettingPush = () => {\n    handleMenuClose()\n    dispatch(push('/setting'))\n  }\n\n  const handleSignOut = () => {\n    handleMenuClose()\n    dispatch(signOut())\n  }\n\n  const handleDrawerToggle = useCallback(\n    (event, isOpen) => {\n      if (\n        event.type === 'keydown' &&\n        (event.key === 'Tab' || event.key === 'Shift')\n      ) {\n        return\n      }\n      setSideBarOpen(isOpen)\n    },\n    [setSideBarOpen]\n  )\n\n  useEffect(() => {\n    const unsubscribe = db\n      .collection('users')\n      .doc(current_uid)\n      .onSnapshot((snapshots) => {\n        const userData = snapshots.data()\n        if (userData.icon) {\n          const icon = userData.icon.path\n          setIcon(icon)\n        }\n      })\n    return () => unsubscribe()\n  }, [])\n\n  const menuId = 'primary-search-account-menu'\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleProfEditPush}>プロフィール編集</MenuItem>\n      <MenuItem onClick={handleSettingPush}>ユーザー設定</MenuItem>\n      <MenuItem onClick={handleSignOut}>サインアウト</MenuItem>\n    </Menu>\n  )\n\n  return (\n    <>\n      <AppBar className={classes.appbar} position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={(e) => handleDrawerToggle(e, true)}\n          >\n            <MenuIcon className={classes.menu} />\n          </IconButton>\n\n          <div className={classes.grow_sm} />\n\n          <Typography className={classes.title} noWrap>\n            <Link to=\"/post\">{props.title}</Link>\n          </Typography>\n\n          <div className={classes.grow} />\n\n          <div className={classes.sectionDesktop}>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <Avatar className={classes.icon} alt=\"userIcon\" src={icon} />\n            </IconButton>\n          </div>\n\n          <div className={classes.sectionMobile}>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <Avatar className={classes.icon} alt=\"userIcon\" src={icon} />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <ClosableDrawer open={sideBarOpen} onClose={handleDrawerToggle} />\n      {renderMenu}\n    </>\n  )\n}\nexport default AppBarHeader\n","/Users/miyashota/project/react-app/src/script/MaterialUi/QuestionInput.jsx",["544","545"],"import React, { useState, useCallback } from 'react'\n\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\n/* ===================================================================== */\n\nconst useStyles = makeStyles({\n  input: {\n    width: '65%',\n    marginTop: '15px',\n  },\n})\n\nconst QuestionInput = (props) => {\n  const classes = useStyles()\n\n  return (\n    <TextField\n      className={classes.input}\n      multiline\n      label=\"質問内容\"\n      type=\"text\"\n      rows=\"1\"\n      value={props.value}\n      onChange={props.onChange}\n    />\n  )\n}\nexport default QuestionInput\n","/Users/miyashota/project/react-app/src/reducks/questions/actions.js",[],"/Users/miyashota/project/react-app/src/script/Component/render.js",[],"/Users/miyashota/project/react-app/src/reducks/missions/operations.js",["546"],"import firebase from 'firebase/app'\nimport { push } from 'connected-react-router'\nimport { db, FirebaseTimestamp, storage } from '../../firebase/firebase'\nimport { readMissionsAction, deleteMissionsAction } from './actions.js'\n/* ===================================================================== */\n\nconst missionsRef = db.collection('missions')\nconst schedulesRef = db.collection('schedules')\n\nexport const readMissions = () => {\n  return async (dispatch, getState) => {\n    const state = getState()\n    const userId = state.users.uid\n    const className = state.users.class_name\n    const userValue = state.users.user_value\n\n    missionsRef\n      // .where('limit_time', '>', new Date())\n      .orderBy('limit_time', 'asc')\n      .get()\n      .then((snapshots) => {\n        // .onSnapshot((snapshots) => {\n        const missionList = []\n        snapshots.forEach((snapshot) => {\n          const mission = snapshot.data()\n          if (mission.destination === userValue) {\n            missionList.push(mission)\n          } else if (mission.destination === className) {\n            missionList.push(mission)\n          } else if (mission.creater_uid === userId) {\n            missionList.push(mission)\n          }\n        })\n        dispatch(readMissionsAction(missionList))\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const createMissison = (\n  mid,\n  destination,\n  title,\n  item,\n  limitTime,\n  file,\n  fileName\n) => {\n  return async (dispatch, getState) => {\n    let nullData = ''\n    if (destination === '') {\n      nullData = nullData + '【投稿先】'\n    }\n    if (title === '') {\n      nullData = nullData + '【タイトル】'\n    }\n    if (item === '') {\n      nullData = nullData + '【内容】'\n    }\n    if (limitTime === '') {\n      nullData = nullData + '【期限】'\n    }\n    if (nullData !== '') {\n      alert(`項目：${nullData}を入力してください。`)\n      return false\n    }\n\n    const state = getState()\n    const userId = state.users.uid\n    const timestamp = FirebaseTimestamp.now()\n    let data = {}\n    if (fileName === '') {\n      data = {\n        destination: destination,\n        title: title,\n        item: item,\n        file: '',\n        limit_time: limitTime,\n        creater_uid: userId,\n        update_time: timestamp,\n      }\n    } else {\n      data = {\n        destination: destination,\n        title: title,\n        item: item,\n        limit_time: limitTime,\n        creater_uid: userId,\n        update_time: timestamp,\n      }\n    }\n\n    if (mid === '') {\n      const ref = missionsRef.doc()\n      data.created_time = timestamp\n      // 要注意！！ドキュメントのIDだよ！\n      mid = ref.id\n      data.mid = mid\n    }\n    const task = {\n      doc: mid,\n      title: title,\n      startDate: timestamp,\n      endDate: limitTime,\n      tag: '2',\n      destination: destination,\n      creater_uid: userId,\n    }\n\n    return missionsRef\n      .doc(mid)\n      .set(data, { merge: true })\n      .then(() => {\n        schedulesRef\n          .doc(mid)\n          .set(task, { merge: true })\n          .then(() => {\n            if (fileName !== '' && file === '') {\n              dispatch(push('/mission'))\n            } else if (fileName === '' && file === '') {\n              dispatch(push('/mission'))\n            } else {\n              dispatch(createFile(mid, file, fileName))\n            }\n          })\n          .catch((error) => {\n            throw new Error(error)\n          })\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const deleteMission = (mid) => {\n  return async (dispatch, getState) => {\n    const check = window.confirm('削除してよろしいですか？')\n    if (check) {\n      missionsRef\n        .doc(mid)\n        .delete()\n        .then(() => {\n          storage.ref('mission_files').child(mid).delete()\n          const prevMissions = getState().missions.list\n          const nextMissions = prevMissions.filter(\n            (mission) => mission.mid !== mid\n          )\n          dispatch(deleteMissionsAction(nextMissions))\n        })\n        .catch((error) => {\n          throw new Error(error)\n        })\n    }\n  }\n}\n\nexport const createFile = (mid, file, fileName) => {\n  return async (dispatch) => {\n    const uploadRef = storage.ref('mission_files').child(mid)\n    const uploadTask = uploadRef.put(file)\n\n    uploadTask\n      .then(() => {\n        return uploadTask.snapshot.ref.getDownloadURL()\n      })\n      .then((downloadURL) => {\n        const fileData = { id: mid, path: downloadURL, file_name: fileName }\n        const data = {\n          file: fileData,\n        }\n        missionsRef\n          .doc(mid)\n          .set(data, { merge: true })\n          .then(() => {\n            dispatch(push('/mission'))\n          })\n          .catch((error) => {\n            throw new Error(error)\n          })\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const deleteFile = (mid) => {\n  return async (dispatch) => {\n    storage\n      .ref('mission_files')\n      .child(mid)\n      .delete()\n      .then(() => {\n        dispatch(push('/mission'))\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n\nexport const submitMissions = (mid, file, fileName) => {\n  return async (dispatch, getState) => {\n    const state = getState()\n    const userId = state.users.uid\n    const userName = state.users.user_name\n\n    const uploadRef = storage.ref('mission_files/' + mid).child(userId)\n    const uploadTask = uploadRef.put(file)\n\n    uploadTask\n      .then(() => {\n        return uploadTask.snapshot.ref.getDownloadURL()\n      })\n      .then((downloadURL) => {\n        const fileData = { id: userId, path: downloadURL, file_name: fileName }\n        const data = {\n          creater_uid: userId,\n          creater_name: userName,\n          file: fileData,\n        }\n\n        missionsRef\n          .doc(mid)\n          .collection('submits')\n          .doc(userId)\n          .set(data, { merge: true })\n          .then(() => {\n            dispatch(push('/mission'))\n          })\n          .catch((error) => {\n            throw new Error(error)\n          })\n      })\n      .catch((error) => {\n        throw new Error(error)\n      })\n  }\n}\n","/Users/miyashota/project/react-app/src/script/Component/Chat/Chat.jsx",[],["547","548"],"/Users/miyashota/project/react-app/src/script/Component/Chat/ChatRoomList.jsx",["549"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { format } from 'date-fns'\nimport { ja } from 'date-fns/locale'\n\nimport { db } from '../../../firebase/firebase'\nimport { getClassName } from '../../../reducks/users/selectors'\nimport { readChatRoom } from '../../../reducks/chats/operations'\nimport { getRoomLists } from '../../../reducks/chats/selectors'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Paper from '@material-ui/core/Paper'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider'\n/* ===================================================================== */\n\nconst useStyles = makeStyles({\n  info: {\n    minWidth: 100,\n  },\n})\n\nconst ChatRoomList = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const current_class = getClassName(selector)\n  const roomLists = getRoomLists(selector)\n  const [classRoom, setClassRoom] = useState([])\n\n  // ログインユーザーが所属するルームを検索\n  useEffect(() => {\n    db.collection('chats')\n      .where('room_name', '==', current_class)\n      .get()\n      .then((snapshots) => {\n        snapshots.forEach((snapshots) => {\n          const classRoom = snapshots.data()\n          const timeStamp = classRoom.update_time\n          const redate = timeStamp.toDate()\n          const date = format(redate, 'yyyy年M月dd日 H:mm', { locale: ja })\n          const classData = {\n            rid: classRoom.rid,\n            room_name: classRoom.room_name,\n            update_time: date,\n          }\n          setClassRoom(classData)\n        })\n      })\n    dispatch(readChatRoom())\n  }, [])\n  // ルーム画面へ飛ぶ\n  const RoomPushHandleClick = (rid) => {\n    dispatch(push('/chat/room/' + rid))\n  }\n\n  return (\n    <div className=\"contents_style\">\n      <Paper className=\"paper_sub\">\n        <List component=\"nav\">\n          <ListItem\n            button\n            alignItems=\"flex-start\"\n            onClick={() => RoomPushHandleClick(classRoom.rid)}\n          >\n            <ListItemAvatar>\n              <Avatar style={{ backgroundColor: '#2196f3', fontSize: 17 }}>\n                {classRoom.room_name ? classRoom.room_name.substr(0, 2) : ''}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              className={classes.info}\n              primary={classRoom.room_name}\n              secondary={classRoom.update_time}\n            />\n          </ListItem>\n\n          {roomLists.length !== 0 && <Divider />}\n\n          {roomLists.map((e) => {\n            return (\n              <ListItem\n                key={e.rid}\n                button\n                alignItems=\"flex-start\"\n                onClick={() => RoomPushHandleClick(e.rid)}\n              >\n                <ListItemAvatar>\n                  <Avatar src={e.icon} />\n                </ListItemAvatar>\n                <ListItemText\n                  className={classes.info}\n                  primary={`${e.room_name}（${e.memberNum}）`}\n                  secondary={e.update_time}\n                />\n              </ListItem>\n            )\n          })}\n        </List>\n      </Paper>\n    </div>\n  )\n}\n\nexport default ChatRoomList\n","/Users/miyashota/project/react-app/src/script/Component/Mission/MissionList.jsx",["550"],"import React, { useState, useEffect } from 'react'\nimport { push } from 'connected-react-router'\nimport { useDispatch } from 'react-redux'\nimport clsx from 'clsx'\nimport { format } from 'date-fns'\nimport { ja } from 'date-fns/locale'\n\nimport { ProfDialog } from '../render'\nimport { PinkButton, BlueButtonNomal } from '../../MaterialUi/materialui'\nimport { checkExt } from '../../../functions/function'\nimport { db } from '../../../firebase/firebase'\nimport { deleteMission } from '../../../reducks/missions/operations'\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Collapse from '@material-ui/core/Collapse'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Button from '@material-ui/core/Button'\nimport Avatar from '@material-ui/core/Avatar'\nimport { makeStyles } from '@material-ui/core/styles'\n/* ===================================================================== */\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: '0',\n    padding: '50%',\n    backgroundSize: 'contain',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(-90deg)',\n  },\n}))\n\nconst MissionList = (props) => {\n  const dispatch = useDispatch()\n  const classes = useStyles()\n  const [name, setName] = useState('')\n  const [className, setClassName] = useState('')\n  const [icon, setIcon] = useState('')\n  const [expanded, setExpanded] = useState(false)\n  const [openDialog, setOpenDialog] = useState(false)\n  const [submitCheck, setSubmitCheck] = useState(false)\n\n  // 時間を正規表現\n  const updateTime = props.updateTime\n  const u_date = updateTime.toDate()\n  const updateDateTime = format(u_date, 'yyyy年M月dd日 H:mm', { locale: ja })\n  const limitTime = props.limitTime\n  const l_date = limitTime.toDate()\n  const limitDateTime = format(l_date, 'yyyy年M月dd日 H:mm', { locale: ja })\n  // プロフの表示\n  const IconViewHandleClick = () => {\n    setOpenDialog(true)\n  }\n  // 編集ボタンクリック\n  const editHandleClick = () => {\n    dispatch(push('/mission/edit/' + props.mid))\n  }\n  // 削除ボタンクリック\n  const deleteHandleClick = () => {\n    dispatch(deleteMission(props.mid))\n  }\n  // ファイル表示ボタンクリック&矢印アイコンの向き変更\n  const expandHandleClick = () => {\n    setExpanded(!expanded)\n  }\n  // 提出ボタンクリック\n  const answerHandleClick = () => {\n    dispatch(push('/mission/submit/' + props.mid))\n  }\n  // 集計ボタンクリック\n  const analyticsHandleClick = () => {\n    dispatch(push('/mission/collect/' + props.mid))\n  }\n  // 投稿者の情報を取得\n  useEffect(() => {\n    if (props.createrUid) {\n      db.collection('users')\n        .doc(props.createrUid)\n        .get()\n        .then((snapshots) => {\n          // .onSnapshot((snapshots) => {\n          const userData = snapshots.data()\n          if (userData) {\n            setName(userData.user_name)\n            setClassName(userData.class_name)\n            setIcon(userData.icon.path)\n          } else {\n            setName('退会済みのユーザー')\n          }\n        })\n    }\n\n    db.collection('missions')\n      .doc(props.mid)\n      .collection('submits')\n      .doc(props.currentUid)\n      .get()\n      .then((snapshots) => {\n        const userData = snapshots.data()\n        if (userData) {\n          setSubmitCheck(true)\n        }\n      })\n  }, [])\n\n  return (\n    <div>\n      <Card className=\"margin_btm_20px\">\n        <CardHeader\n          avatar={\n            icon ? (\n              <Avatar\n                className={\n                  props.currentUid === props.createrUid\n                    ? 'pointer icon_circle_blue'\n                    : 'pointer'\n                }\n                alt=\"userIcon\"\n                src={icon}\n                onClick={IconViewHandleClick}\n              />\n            ) : (\n              <Avatar\n                className={\n                  props.currentUid === props.createrUid\n                    ? 'pointer icon_circle_blue'\n                    : 'pointer'\n                }\n                onClick={IconViewHandleClick}\n              >\n                {name.charAt(0)}\n              </Avatar>\n            )\n          }\n          title={\n            <Typography>\n              {className} ｜ {name}\n            </Typography>\n          }\n          subheader={`更新日時：${updateDateTime}`}\n        />\n\n        <CardContent>\n          <Typography variant=\"body2\" className=\"label\">\n            タイトル\n          </Typography>\n          <div className=\"space_5px\"></div>\n\n          <Typography variant=\"body1\" className=\"padding_10px\">\n            {props.title}\n          </Typography>\n          <div className=\"space_10px\"></div>\n\n          <Typography variant=\"body2\" className=\"label\">\n            内容\n          </Typography>\n          <div className=\"space_5px\"></div>\n\n          <Typography\n            variant=\"body1\"\n            className=\"padding_10px\"\n            style={{ whiteSpace: 'pre-wrap' }}\n          >\n            {props.item}\n          </Typography>\n          <div className=\"space_10px\"></div>\n\n          <Typography variant=\"body1\" className=\"red_center\">\n            提出期限：{limitDateTime}\n          </Typography>\n        </CardContent>\n\n        <CardActions className=\"margin_10px\">\n          {props.currentUid === props.createrUid && (\n            <>\n              <BlueButtonNomal label={'編集'} onClick={editHandleClick} />\n              <BlueButtonNomal label={'削除'} onClick={deleteHandleClick} />\n            </>\n          )}\n\n          {props.file.path && (\n            <Button color=\"primary\">\n              <a href={props.file.path}>ファイルダウンロード</a>\n            </Button>\n          )}\n\n          {checkExt(props.file.file_name) && (\n            <Button\n              aria-expanded={expanded}\n              color=\"primary\"\n              onClick={expandHandleClick}\n            >\n              ファイル表示\n              <ExpandMoreIcon\n                className={clsx(classes.expand, {\n                  [classes.expandOpen]: expanded,\n                })}\n              />\n            </Button>\n          )}\n\n          <div className=\"flex_grow\"></div>\n\n          {submitCheck && (\n            <Typography variant=\"body2\" className=\"red_center\">\n              提出済\n            </Typography>\n          )}\n\n          {props.currentUid === props.createrUid ? (\n            <PinkButton label={'集計'} onClick={analyticsHandleClick} />\n          ) : (\n            <PinkButton label={'提出'} onClick={answerHandleClick} />\n          )}\n        </CardActions>\n\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <CardMedia className={classes.media} image={props.file.path} />\n          </CardContent>\n        </Collapse>\n      </Card>\n\n      <ProfDialog\n        uid={props.createrUid}\n        openDialog={openDialog}\n        setOpenDialog={setOpenDialog}\n      />\n    </div>\n  )\n}\nexport default MissionList\n","/Users/miyashota/project/react-app/src/script/Component/Post/Post.jsx",["551"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nimport { AppBarSubHeader, ToolTip } from '../../MaterialUi/materialui'\nimport { PostList } from '../render'\nimport { getUserId } from '../../../reducks/users/selectors'\nimport { readPosts } from '../../../reducks/posts/operations'\nimport { getPostLists } from '../../../reducks/posts/selectors'\n\nimport EditIcon from '@material-ui/icons/Edit'\nimport Fab from '@material-ui/core/Fab'\n/* ===================================================================== */\n\nconst Post = () => {\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const current_uid = getUserId(selector)\n  const posts = getPostLists(selector)\n\n  // 連絡作成ボタンクリック\n  const pushHandleClick = () => {\n    dispatch(push('/post/edit'))\n  }\n  // 全投稿を取得\n  useEffect(() => {\n    dispatch(readPosts())\n  }, [])\n\n  return (\n    <section className=\"main\">\n      <AppBarSubHeader subtitle={'連絡一覧'} />\n\n      <div className=\"edit_addbtn\">\n        <ToolTip title=\"連絡作成\">\n          <Fab color=\"secondary\" onClick={pushHandleClick}>\n            <EditIcon />\n          </Fab>\n        </ToolTip>\n      </div>\n\n      <div className=\"contents_style\">\n        {posts.length > 0 ? (\n          posts.map((post) => (\n            <PostList\n              currentUid={current_uid}\n              key={post.pid}\n              pid={post.pid}\n              title={post.title}\n              item={post.item}\n              file={post.file}\n              createrUid={post.creater_uid}\n              updateTime={post.update_time}\n            />\n          ))\n        ) : posts.length === 0 ? (\n          <h3>現在連絡は投稿されていません</h3>\n        ) : null}\n      </div>\n    </section>\n  )\n}\nexport default Post\n","/Users/miyashota/project/react-app/src/script/Component/Post/PostEdit.jsx",[],"/Users/miyashota/project/react-app/src/script/Component/Post/PostList.jsx",["552"],"import React, { useState, useEffect } from 'react'\nimport { push } from 'connected-react-router'\nimport { useDispatch } from 'react-redux'\nimport clsx from 'clsx'\nimport { format } from 'date-fns'\nimport { ja } from 'date-fns/locale'\n\nimport { ProfDialog } from '../render'\nimport { BlueButtonNomal } from '../../MaterialUi/materialui'\nimport { checkExt } from '../../../functions/function'\nimport { db } from '../../../firebase/firebase'\nimport { deletePost } from '../../../reducks/posts/operations'\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Collapse from '@material-ui/core/Collapse'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Button from '@material-ui/core/Button'\nimport Avatar from '@material-ui/core/Avatar'\nimport { makeStyles } from '@material-ui/core/styles'\n/* ===================================================================== */\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: '0',\n    padding: '50%',\n    backgroundSize: 'contain',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(-90deg)',\n  },\n}))\n\nconst PostList = (props) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [name, setName] = useState('')\n  const [className, setClassName] = useState('')\n  const [icon, setIcon] = useState('')\n  const [expanded, setExpanded] = useState(false)\n  const [openDialog, setOpenDialog] = useState(false)\n\n  // 時間を正規表現\n  const updateTime = props.updateTime\n  const date = updateTime.toDate()\n  const DateTime = format(date, 'yyyy年M月dd日 H:mm', { locale: ja })\n  // プロフの表示\n  const IconViewHandleClick = () => {\n    setOpenDialog(true)\n  }\n  // 編集ボタンクリック\n  const editHandleClick = () => {\n    dispatch(push('/post/edit/' + props.pid))\n  }\n  // 削除ボタンクリック\n  const deleteHandleClick = () => {\n    dispatch(deletePost(props.pid))\n  }\n  // ファイル表示ボタンクリック&矢印アイコンの向き変更\n  const expandHandleClick = () => {\n    setExpanded(!expanded)\n  }\n  // 投稿者の情報を取得\n  useEffect(() => {\n    if (props.createrUid) {\n      db.collection('users')\n        .doc(props.createrUid)\n        .get()\n        .then((snapshots) => {\n          // .onSnapshot((snapshots) => {\n          const userData = snapshots.data()\n          if (userData) {\n            setName(userData.user_name)\n            setClassName(userData.class_name)\n            setIcon(userData.icon.path)\n          } else {\n            setName('退会済みのユーザー')\n          }\n        })\n    }\n  }, [])\n\n  return (\n    <div>\n      <Card className=\"margin_btm_20px\">\n        <CardHeader\n          avatar={\n            icon ? (\n              <Avatar\n                className={\n                  props.currentUid === props.createrUid\n                    ? 'pointer icon_circle_blue'\n                    : 'pointer'\n                }\n                alt=\"userIcon\"\n                src={icon}\n                onClick={IconViewHandleClick}\n              />\n            ) : (\n              <Avatar\n                className={\n                  props.currentUid === props.createrUid\n                    ? 'pointer icon_circle_blue'\n                    : 'pointer'\n                }\n                onClick={IconViewHandleClick}\n              >\n                {name.charAt(0)}\n              </Avatar>\n            )\n          }\n          title={\n            <Typography>\n              {className} ｜ {name}\n            </Typography>\n          }\n          subheader={`更新日時：${DateTime}`}\n        />\n\n        <CardContent>\n          <Typography variant=\"body2\" className=\"label\">\n            タイトル\n          </Typography>\n          <div className=\"space_5px\"></div>\n\n          <Typography variant=\"body1\" className=\"padding_10px\">\n            {props.title}\n          </Typography>\n          <div className=\"space_10px\"></div>\n\n          <Typography variant=\"body2\" className=\"label\">\n            内容\n          </Typography>\n          <div className=\"space_5px\"></div>\n\n          <Typography\n            variant=\"body1\"\n            className=\"padding_10px\"\n            style={{ whiteSpace: 'pre-wrap' }}\n          >\n            {props.item}\n          </Typography>\n        </CardContent>\n\n        <CardActions className=\"margin_10px\">\n          {props.currentUid === props.createrUid && (\n            <>\n              <BlueButtonNomal label={'編集'} onClick={editHandleClick} />\n              <BlueButtonNomal label={'削除'} onClick={deleteHandleClick} />\n            </>\n          )}\n\n          {props.file.path && (\n            <Button color=\"primary\">\n              <a href={props.file.path}>ファイルダウンロード</a>\n            </Button>\n          )}\n\n          {checkExt(props.file.file_name) && (\n            <Button\n              aria-expanded={expanded}\n              color=\"primary\"\n              onClick={expandHandleClick}\n            >\n              ファイル表示\n              <ExpandMoreIcon\n                className={clsx(classes.expand, {\n                  [classes.expandOpen]: expanded,\n                })}\n              />\n            </Button>\n          )}\n        </CardActions>\n\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent className={classes.content}>\n            <CardMedia className={classes.media} image={props.file.path} />\n          </CardContent>\n        </Collapse>\n      </Card>\n\n      <ProfDialog\n        uid={props.createrUid}\n        openDialog={openDialog}\n        setOpenDialog={setOpenDialog}\n      />\n    </div>\n  )\n}\nexport default PostList\n","/Users/miyashota/project/react-app/src/script/Component/Setting/Setting.jsx",["553"],"import React, { useState, useEffect } from 'react'\nimport { push } from 'connected-react-router'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { db } from '../../../firebase/firebase'\nimport { getUserId } from '../../../reducks/users/selectors'\nimport {\n  AppBarSubHeader,\n  BlueButton,\n  PinkButton,\n} from '../../MaterialUi/materialui'\nimport { signOut } from '../../../reducks/users/operations'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { Avatar } from '@material-ui/core'\n/* ===================================================================== */\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    margin: '0 5px 0 10px',\n    border: '4px solid #90caf9',\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    marginRight: 30,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(15),\n      height: theme.spacing(15),\n      marginRight: 80,\n    },\n  },\n  flex: {\n    display: 'block',\n    [theme.breakpoints.up('sm')]: {\n      display: 'flex',\n    },\n  },\n}))\n\nconst Setting = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const current_uid = getUserId(selector)\n  const [prof, setProf] = useState('')\n  const [icon, setIcon] = useState('')\n  const [mail, setMail] = useState('')\n\n  // ユーザー情報を取得\n  useEffect(() => {\n    db.collection('users')\n      .doc(current_uid)\n      .get()\n      .then((snapshots) => {\n        const userData = snapshots.data()\n        setMail(userData.email)\n        setIcon(userData.icon.path)\n        if (userData.prof !== '') {\n          setProf(userData.prof)\n        }\n      })\n  }, [])\n\n  return (\n    <section className=\"main\">\n      <AppBarSubHeader subtitle={'設定'} />\n\n      <div className=\"contents_style\">\n        <Paper className=\"paper margin_btm_20px\">\n          <Typography variant=\"h6\" className=\"title_underline\">\n            プロフィール\n          </Typography>\n          <div className=\"space_25px\"></div>\n\n          <div className={classes.flex}>\n            <div>\n              <Typography variant=\"body2\" className=\"title\">\n                アイコン\n              </Typography>\n              <div className=\"space_10px\"></div>\n              <Avatar className={classes.icon} src={icon} />\n              <div className=\"space_20px\"></div>\n            </div>\n\n            <div>\n              <Typography variant=\"body2\" className=\"title\">\n                自己紹介文\n              </Typography>\n              <div className=\"space_10px\"></div>\n              <Typography variant=\"body2\" style={{ whiteSpace: 'pre-wrap' }}>\n                {prof !== '' ? prof : 'プロフィールを登録しましょう！'}\n              </Typography>\n            </div>\n          </div>\n          <div className=\"right\">\n            <BlueButton\n              label={'編集'}\n              onClick={() => dispatch(push('/setting/prof'))}\n            />\n          </div>\n        </Paper>\n\n        <Paper className=\"paper margin_btm_20px\">\n          <Typography variant=\"h6\" className=\"title_underline\">\n            メールアドレス・パスワード\n          </Typography>\n          <div className=\"space_25px\"></div>\n\n          <Typography variant=\"body2\" className=\"title\">\n            登録中のメールアドレス\n          </Typography>\n          <div className=\"space_10px\"></div>\n\n          <Typography variant=\"body1\">{mail}</Typography>\n\n          <div className=\"right\">\n            <BlueButton\n              label={'変更'}\n              onClick={() => dispatch(push('/setting/auth'))}\n            />\n          </div>\n        </Paper>\n\n        <Paper className=\"paper margin_btm_20px\">\n          <Typography variant=\"h6\" className=\"title_underline\">\n            サインアウト\n          </Typography>\n          <div className=\"space_15px\"></div>\n\n          <div className=\"right\">\n            <BlueButton\n              label={'サインアウト'}\n              onClick={() => dispatch(signOut())}\n            />\n          </div>\n        </Paper>\n\n        <Paper className=\"paper margin_btm_20px\">\n          <Typography variant=\"h6\" className=\"title_underline\">\n            退会\n          </Typography>\n          <div className=\"space_15px\"></div>\n\n          <div className=\"right\">\n            <PinkButton\n              label={'退会手続きへ'}\n              onClick={() => dispatch(push('/setting/delete'))}\n            />\n          </div>\n        </Paper>\n      </div>\n    </section>\n  )\n}\nexport default Setting\n","/Users/miyashota/project/react-app/src/script/Component/Top/ReIssue.jsx",[],"/Users/miyashota/project/react-app/src/script/Component/Top/SignIn.jsx",["554"],"/Users/miyashota/project/react-app/src/script/Component/Question/Analytics.jsx",[],"/Users/miyashota/project/react-app/src/script/Component/Question/AnalyticsList.jsx",[],"/Users/miyashota/project/react-app/src/script/Component/Question/AnswerEdit.jsx",[],"/Users/miyashota/project/react-app/src/script/Component/Question/Question.jsx",["555"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nimport { AppBarSubHeader, ToolTip } from '../../MaterialUi/materialui'\nimport { clearQuestionItemAction } from '../../../reducks/questions/actions'\nimport { QuestionList } from '../render'\nimport { getUserId } from '../../../reducks/users/selectors'\nimport { readQuestions } from '../../../reducks/questions/operations'\nimport { getQuestionLists } from '../../../reducks/questions/selectors'\n\nimport EditIcon from '@material-ui/icons/Edit'\nimport Fab from '@material-ui/core/Fab'\n/* ===================================================================== */\n\nconst Question = () => {\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const current_uid = getUserId(selector)\n  const questions = getQuestionLists(selector)\n\n  // アンケート作成ボタンクリック\n  const pushHandleClick = () => {\n    dispatch(clearQuestionItemAction([]))\n    dispatch(push('/question/edit'))\n  }\n  // 全投稿を取得\n  useEffect(() => {\n    dispatch(readQuestions())\n  }, [])\n\n  return (\n    <section className=\"main\">\n      <AppBarSubHeader subtitle={'アンケート一覧'} />\n\n      <div className=\"edit_addbtn\">\n        <ToolTip title=\"アンケート作成\">\n          <Fab color=\"secondary\" onClick={pushHandleClick}>\n            <EditIcon />\n          </Fab>\n        </ToolTip>\n      </div>\n\n      <div className=\"contents_style\">\n        {questions.length > 0 ? (\n          questions.map((question) => (\n            <QuestionList\n              currentUid={current_uid}\n              key={question.qid}\n              qid={question.qid}\n              title={question.title}\n              item={question.item}\n              limitTime={question.limit_time}\n              createrUid={question.creater_uid}\n              updateTime={question.update_time}\n            />\n          ))\n        ) : questions.length === 0 ? (\n          <h3>現在アンケートは実施されてません</h3>\n        ) : null}\n      </div>\n    </section>\n  )\n}\n\nexport default Question\n","/Users/miyashota/project/react-app/src/script/Component/Question/QuestionComponent.jsx",["556"],"import React, { useState, useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {\n  QuestionSelect,\n  QuestionInput,\n  GreyButton,\n  AnswerText1,\n  AnswerRadio2,\n  AnswerRadio3,\n} from '../../MaterialUi/materialui'\nimport {\n  addQuestionItem,\n  deleteQuestionItem,\n} from '../../../reducks/questions/operations'\nimport { addQuestionList } from '../../../reducks/questions/selectors'\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { makeStyles } from '@material-ui/core/styles'\n/* ===================================================================== */\n\nconst useStyles = makeStyles({\n  card: {\n    marginTop: '20px',\n    padding: '5px 20px 20px 20px',\n    backgroundColor: '#00000005',\n  },\n  flex: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  icon: {\n    opacity: '0.7',\n  },\n})\n\nconst QuestionComponent = (props) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const add = addQuestionList(selector)\n  const [datas, setDatas] = useState([])\n  const [questionItem, setQuestionItem] = useState('')\n  const [questionType, setQuestionType] = useState('')\n\n  //　作成した質問を取得する\n  useEffect(() => {\n    if (add) {\n      setDatas(add)\n      props.setQuestionData(add)\n      setQuestionItem('')\n    }\n  }, [add])\n  // 質問内容入力イベント\n  const inputItem = useCallback(\n    (event) => {\n      setQuestionItem(event.target.value)\n    },\n    [setQuestionItem]\n  )\n  // 作成ボタンクリック\n  const questionAddHnadleClick = () => {\n    dispatch(addQuestionItem(questionItem, questionType))\n  }\n\n  return (\n    <div>\n      {datas.length !== 0 &&\n        datas.map((data, index) => (\n          <Card key={index} className={classes.card}>\n            <CardHeader\n              action={\n                <IconButton\n                  className={classes.delete}\n                  onClick={() => dispatch(deleteQuestionItem(index))}\n                >\n                  <DeleteIcon className={classes.icon} />\n                </IconButton>\n              }\n              title={\n                <Typography variant=\"h6\" className=\"label\">\n                  質問 {`${index + 1}`}\n                </Typography>\n              }\n            />\n            <Typography variant=\"h6\">{data.item}</Typography>\n            <Typography variant=\"body1\">\n              {data.type === '1' ? (\n                <AnswerText1\n                  id={index}\n                  label={'テキストを入力'}\n                  type={'text'}\n                  fullWidth={true}\n                  disabled={true}\n                  multiline={false}\n                  value={null}\n                />\n              ) : data.type === '2' ? (\n                <AnswerRadio2 id={index} disabled={true} />\n              ) : (\n                <AnswerRadio3 id={index} disabled={true} fullWidth />\n              )}\n            </Typography>\n          </Card>\n        ))}\n\n      <div className={classes.flex}>\n        <QuestionInput value={questionItem} onChange={inputItem} />\n        <QuestionSelect value={questionType} select={setQuestionType} />\n      </div>\n      <div className=\"space_10px\"></div>\n\n      <GreyButton\n        size={'small'}\n        label={'作成 ＋ '}\n        onClick={questionAddHnadleClick}\n      />\n    </div>\n  )\n}\nexport default QuestionComponent\n","/Users/miyashota/project/react-app/src/script/Component/Question/QuestionEdit.jsx",["557"],"import React, { useState, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nimport { QuestionComponent } from '../render'\nimport {\n  AppBarSubHeader,\n  BlueButton,\n  BlueInput,\n  BlueButtonNomal,\n  SelectBox,\n  DateTimePicker,\n} from '../../MaterialUi/materialui'\nimport { db } from '../../../firebase/firebase'\nimport {\n  createQuestions,\n  readQuestionItem,\n} from '../../../reducks/questions/operations'\n\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n/* ===================================================================== */\n\nconst QuestionEdit = () => {\n  const dispatch = useDispatch()\n  const [qid, setQid] = useState('')\n  const [destination, setDestination] = useState('')\n  const [title, setTitle] = useState('')\n  const [item, setItem] = useState('')\n  const [limitTime, setLimitTime] = useState('')\n  const [questionData, setQuestionData] = useState('')\n\n  useEffect(() => {\n    // URLからqidを取得\n    const id = window.location.pathname.split('/question/edit')[1]\n    if (id !== '') {\n      setQid(id.split('/')[1])\n    }\n    // qidが存在すれば投稿情報を取得する\n    if (qid !== '') {\n      db.collection('questions')\n        .doc(qid)\n        .get()\n        .then((snapshot) => {\n          const question = snapshot.data()\n          setDestination(question.destination)\n          setTitle(question.title)\n          setItem(question.item)\n          const limit = question.limit_time.toDate()\n          setLimitTime(limit)\n          const questionData = question.question_data\n          dispatch(readQuestionItem(questionData))\n        })\n    }\n  }, [qid])\n  // タイトル入力イベント\n  const inputTitle = useCallback(\n    (event) => {\n      setTitle(event.target.value)\n    },\n    [setTitle]\n  )\n  // 内容入力イベント\n  const inputItem = useCallback(\n    (event) => {\n      setItem(event.target.value)\n    },\n    [setItem]\n  )\n  // 回答期限入力イベント\n  const inputDate = (date) => {\n    setLimitTime(date)\n  }\n  // キャンセルボタンクリック\n  const backHandleClick = () => {\n    dispatch(push('/question'))\n  }\n  // 投稿ボタンクリック\n  const updateHandleClick = () => {\n    dispatch(\n      createQuestions(qid, destination, title, item, limitTime, questionData)\n    )\n  }\n\n  return (\n    <section className=\"main\">\n      {qid === '' ? (\n        <AppBarSubHeader subtitle={'アンケート　ー新規ー'} />\n      ) : (\n        <AppBarSubHeader subtitle={'アンケート　ー編集ー'} />\n      )}\n\n      <div className=\"contents_style\">\n        <Paper className=\"paper\">\n          <Typography className=\"label\">投稿先</Typography>\n          <SelectBox\n            options={send}\n            value={destination}\n            select={setDestination}\n          />\n          <div className=\"space_15px\"></div>\n\n          <Typography className=\"label\">タイトル</Typography>\n          <BlueInput\n            label={null}\n            type={'text'}\n            fullWidth={true}\n            multiline={true}\n            value={title}\n            defaultValue={title}\n            onChange={inputTitle}\n          />\n          <div className=\"space_15px\"></div>\n\n          <Typography className=\"label\">内容</Typography>\n          <BlueInput\n            label={null}\n            type={'text'}\n            fullWidth={true}\n            multiline={true}\n            value={item}\n            defaultValue={item}\n            onChange={inputItem}\n          />\n          <div className=\"space_15px\"></div>\n\n          <Typography className=\"label\">回答期限</Typography>\n          <DateTimePicker\n            ampm={false}\n            fullWidth={true}\n            value={limitTime}\n            onChange={inputDate}\n          />\n          <div className=\"space_15px\"></div>\n\n          <Typography className=\"label\">質問作成</Typography>\n\n          <QuestionComponent setQuestionData={setQuestionData} />\n\n          <div className=\"right\">\n            <span>\n              <BlueButtonNomal label={'キャンセル'} onClick={backHandleClick} />\n              <BlueButton\n                label={qid === '' ? '投稿' : '変更'}\n                onClick={updateHandleClick}\n              />\n            </span>\n          </div>\n        </Paper>\n      </div>\n    </section>\n  )\n}\nexport default QuestionEdit\n\nconst send = [\n  { id: 'all', name: '全体' },\n  { id: 'teacher', name: '全教官' },\n  { id: 'student', name: '全学生' },\n  { id: 'PI-11A-172', name: 'PI-11A-172' },\n  { id: 'PW-11A-172', name: 'PW-11A-172' },\n]\n",["558","559"],"/Users/miyashota/project/react-app/src/script/Component/Question/QuestionList.jsx",["560"],"import React, { useState, useEffect } from 'react'\nimport { push } from 'connected-react-router'\nimport { useDispatch } from 'react-redux'\nimport { format } from 'date-fns'\nimport { ja } from 'date-fns/locale'\n\nimport { ProfDialog } from '../render'\nimport { PinkButton, BlueButtonNomal } from '../../MaterialUi/materialui'\nimport { db } from '../../../firebase/firebase'\nimport { deleteQuestions } from '../../../reducks/questions/operations'\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Typography from '@material-ui/core/Typography'\nimport Avatar from '@material-ui/core/Avatar'\n/* ===================================================================== */\n\nconst QuestionList = (props) => {\n  const dispatch = useDispatch()\n  const [name, setName] = useState('')\n  const [className, setClassName] = useState('')\n  const [icon, setIcon] = useState('')\n  const [openDialog, setOpenDialog] = useState(false)\n  const [submitCheck, setSubmitCheck] = useState(false)\n\n  // 時間を正規表現\n  const updateTime = props.updateTime\n  const u_date = updateTime.toDate()\n  const updateDateTime = format(u_date, 'yyyy年M月dd日 H:mm', { locale: ja })\n  const limitTime = props.limitTime\n  const l_date = limitTime.toDate()\n  const limitDateTime = format(l_date, 'yyyy年M月dd日 H:mm', { locale: ja })\n  // プロフの表示\n  const IconViewHandleClick = () => {\n    setOpenDialog(true)\n  }\n  // 編集ボタンクリック\n  const editHandleClick = () => {\n    dispatch(push('/question/edit/' + props.qid))\n  }\n  // 削除ボタンクリック\n  const deleteHandleClick = () => {\n    dispatch(deleteQuestions(props.qid))\n  }\n  // 回答ボタンクリック\n  const answerHandleClick = () => {\n    dispatch(push('/question/answer/' + props.qid))\n  }\n  // 結果ボタンクリック\n  const analyticsHandleClick = () => {\n    dispatch(push('/question/analytics/' + props.qid))\n  }\n  // 投稿者の情報を取得\n  useEffect(() => {\n    if (props.createrUid) {\n      db.collection('users')\n        .doc(props.createrUid)\n        .get()\n        .then((snapshots) => {\n          // .onSnapshot((snapshots) => {\n          const userData = snapshots.data()\n          if (userData) {\n            setName(userData.user_name)\n            setClassName(userData.class_name)\n            setIcon(userData.icon.path)\n          } else {\n            setName('退会済みのユーザー')\n          }\n        })\n    }\n\n    db.collection('questions')\n      .doc(props.qid)\n      .collection('answers')\n      .doc(props.currentUid)\n      .get()\n      .then((snapshots) => {\n        const userData = snapshots.data()\n        if (userData) {\n          setSubmitCheck(true)\n        }\n      })\n  }, [])\n\n  return (\n    <div>\n      <Card className=\"margin_btm_20px\">\n        <CardHeader\n          avatar={\n            icon ? (\n              <Avatar\n                className={\n                  props.currentUid === props.createrUid\n                    ? 'pointer icon_circle_blue'\n                    : 'pointer'\n                }\n                alt=\"userIcon\"\n                src={icon}\n                onClick={IconViewHandleClick}\n              />\n            ) : (\n              <Avatar\n                className={\n                  props.currentUid === props.createrUid\n                    ? 'pointer icon_circle_blue'\n                    : 'pointer'\n                }\n                onClick={IconViewHandleClick}\n              >\n                {name.charAt(0)}\n              </Avatar>\n            )\n          }\n          title={\n            <Typography>\n              {className} ｜ {name}\n            </Typography>\n          }\n          subheader={`更新日時：${updateDateTime}`}\n        />\n\n        <CardContent>\n          <Typography variant=\"body2\" className=\"label\">\n            タイトル\n          </Typography>\n          <div className=\"space_5px\"></div>\n\n          <Typography variant=\"body1\" className=\"padding_10px\">\n            {props.title}\n          </Typography>\n          <div className=\"space_10px\"></div>\n\n          <Typography variant=\"body2\" className=\"label\">\n            内容\n          </Typography>\n          <div className=\"space_5px\"></div>\n\n          <Typography\n            variant=\"body1\"\n            className=\"padding_10px\"\n            style={{ whiteSpace: 'pre-wrap' }}\n          >\n            {props.item}\n          </Typography>\n          <div className=\"space_10px\"></div>\n\n          <Typography variant=\"body1\" className=\"red_center\">\n            回答期限：{limitDateTime}\n          </Typography>\n        </CardContent>\n\n        <CardActions className=\"margin_10px\">\n          {props.currentUid === props.createrUid && (\n            <>\n              <BlueButtonNomal label={'編集'} onClick={editHandleClick} />\n              <BlueButtonNomal label={'削除'} onClick={deleteHandleClick} />\n            </>\n          )}\n          <div className=\"flex_grow\"></div>\n\n          {submitCheck && (\n            <Typography variant=\"body2\" className=\"red_center\">\n              回答済\n            </Typography>\n          )}\n\n          {props.currentUid === props.createrUid ? (\n            <PinkButton label={'結果'} onClick={analyticsHandleClick} />\n          ) : (\n            <PinkButton label={'回答'} onClick={answerHandleClick} />\n          )}\n        </CardActions>\n      </Card>\n\n      <ProfDialog\n        uid={props.createrUid}\n        openDialog={openDialog}\n        setOpenDialog={setOpenDialog}\n      />\n    </div>\n  )\n}\nexport default QuestionList\n","/Users/miyashota/project/react-app/src/script/Component/Top/SignUp.jsx",[],"/Users/miyashota/project/react-app/src/script/Component/Mission/Mission.jsx",["561"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nimport { MissionList } from '../render'\nimport { AppBarSubHeader, ToolTip } from '../../MaterialUi/materialui'\nimport { getUserValue } from '../../../reducks/users/selectors'\nimport { getUserId } from '../../../reducks/users/selectors'\nimport { readMissions } from '../../../reducks/missions/operations'\nimport { getMissionLists } from '../../../reducks/missions/selectors'\n\nimport EditIcon from '@material-ui/icons/Edit'\nimport Fab from '@material-ui/core/Fab'\n/* ===================================================================== */\n\nconst Mission = () => {\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const current_uid = getUserId(selector)\n  const current_value = getUserValue(selector)\n  const missions = getMissionLists(selector)\n\n  // 課題作成ボタンクリック\n  const pushHandleClick = () => {\n    dispatch(push('/mission/edit'))\n  }\n  // 全投稿を取得\n  useEffect(() => {\n    dispatch(readMissions())\n  }, [])\n\n  return (\n    <section className=\"main\">\n      <AppBarSubHeader subtitle={'課題一覧'} />\n\n      {current_value === 'teacher' && (\n        <div className=\"edit_addbtn\">\n          <ToolTip title=\"課題作成\">\n            <Fab color=\"secondary\" onClick={pushHandleClick}>\n              <EditIcon />\n            </Fab>\n          </ToolTip>\n        </div>\n      )}\n\n      <div className=\"contents_style\">\n        {missions.length > 0 ? (\n          missions.map((mission) => (\n            <MissionList\n              currentUid={current_uid}\n              key={mission.mid}\n              mid={mission.mid}\n              title={mission.title}\n              item={mission.item}\n              file={mission.file}\n              limitTime={mission.limit_time}\n              createrUid={mission.creater_uid}\n              updateTime={mission.update_time}\n            />\n          ))\n        ) : missions.length === 0 ? (\n          <h3>現在出ている課題はありません</h3>\n        ) : null}\n      </div>\n    </section>\n  )\n}\nexport default Mission\n","/Users/miyashota/project/react-app/src/script/MaterialUi/ToolTip.jsx",[],"/Users/miyashota/project/react-app/src/script/Component/Layout/Nav.jsx",[],"/Users/miyashota/project/react-app/src/script/Component/Mission/MissionEdit.jsx",[],"/Users/miyashota/project/react-app/src/script/Component/Mission/CollectList.jsx",["562","563","564","565","566"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { getAnswerLists } from '../../../reducks/questions/selectors'\nimport { readAnswers } from '../../../reducks/questions/operations'\n\nimport { withStyles, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\n/* ===================================================================== */\n\nconst StyledTableCell = withStyles({\n  head: {\n    backgroundColor: '#bbdefb',\n    color: '000000de',\n    fontWeight: 'bold',\n  },\n  body: {\n    fontSize: 14,\n  },\n})(TableCell)\n\nconst StyledTableRow = withStyles({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: '#f8f8f8',\n    },\n  },\n})(TableRow)\n\nconst useStyles = makeStyles({\n  title: {\n    fontSize: 15,\n  },\n  name: {\n    width: 100,\n    minWidth: 30,\n    paddingRight: '0',\n    fontSize: 12,\n  },\n  item: {\n    width: 300,\n    fontSize: 12,\n  },\n  symbol: {\n    width: 1,\n    paddingLeft: '0',\n    fontSize: 12,\n  },\n})\n\nconst CollectList = (props) => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <TableContainer className=\"margin_btm_20px\" component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <StyledTableCell\n                className={classes.title}\n                size=\"small\"\n                colSpan={2}\n              >\n                {props.missions.title}\n              </StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.submits.length !== 0 ? (\n              props.submits.map((data, index) => (\n                <StyledTableRow key={index}>\n                  <StyledTableCell\n                    className={classes.name}\n                    component=\"th\"\n                    scope=\"row\"\n                  >\n                    {data.creater_name}\n                  </StyledTableCell>\n                  <StyledTableCell className={classes.item} align=\"left\">\n                    <a href={data.file.path}>{data.file.file_name}</a>\n                  </StyledTableCell>\n                </StyledTableRow>\n              ))\n            ) : (\n              <StyledTableRow>\n                <TableCell\n                  className={classes.name}\n                  size=\"small\"\n                  component=\"th\"\n                  scope=\"answer\"\n                >\n                  <p>提出者はまだいません。</p>\n                </TableCell>\n              </StyledTableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  )\n}\n\nexport default CollectList\n","/Users/miyashota/project/react-app/src/script/Component/Mission/Collect.jsx",[],"/Users/miyashota/project/react-app/src/script/Component/Setting/ProfEdit.jsx",["567"],"/Users/miyashota/project/react-app/src/reducks/questions/reducers.js",["568"],"import * as Action from './actions'\nimport { initialState } from '../store/initialState.js'\n/* ===================================================================== */\n\nexport const QuestionsReducter = (state = initialState.questions, action) => {\n  switch (action.type) {\n    case Action.READ_QUESTIONS:\n      return {\n        ...state,\n        list: [...action.payload],\n      }\n    case Action.DELETE_QUESTIONS:\n      return {\n        ...state,\n        list: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const QuestionItemReducter = (\n  state = initialState.addquestions,\n  action\n) => {\n  switch (action.type) {\n    case Action.ADD_QUESTIONITEM:\n      return [...state, action.payload]\n    case Action.DELETE_QUESTIONITEM:\n      return state.filter((state, index) => index !== action.payload)\n    case Action.READ_QUESTIONITEM:\n      return action.payload\n    case Action.CLEAR_QUESTIONITEM:\n      return state, action.payload\n    default:\n      return state\n  }\n}\n\nexport const AnswersReducter = (state = initialState.answers, action) => {\n  switch (action.type) {\n    case Action.READ_ANSWERS:\n      return {\n        ...state,\n        list: action.payload,\n      }\n    default:\n      return state\n  }\n}\n",["569","570"],"/Users/miyashota/project/react-app/src/reducks/missions/actions.js",[],"/Users/miyashota/project/react-app/src/script/Component/Setting/AuthEdit.jsx",[],"/Users/miyashota/project/react-app/src/script/MaterialUi/BlueButtonNomal.jsx",[],"/Users/miyashota/project/react-app/src/script/Component/Setting/UserDelete.jsx",[],"/Users/miyashota/project/react-app/src/script/MaterialUi/PinkButtonNomal.jsx",["571"],"import React from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { blue } from '@material-ui/core/colors'\n/* ===================================================================== */\n\nconst useStyles = makeStyles((theme) => ({\n  blue: {\n    boxShadow: 'none',\n    backgroundColor: 'white',\n    margin: '0 15px 0 0',\n    paddingLeft: 15,\n    paddingRight: 15,\n    color: '#e91e63',\n  },\n}))\n\nconst PinkButtonNomal = (props) => {\n  const classes = useStyles()\n  return (\n    <Button\n      fullWidth={props.fullWidth}\n      size={props.size}\n      color=\"default\"\n      className={classes.blue}\n      onClick={() => props.onClick()}\n    >\n      {props.label}\n    </Button>\n  )\n}\n\nexport default PinkButtonNomal\n","/Users/miyashota/project/react-app/src/reducks/missions/selectors.js",[],"/Users/miyashota/project/react-app/src/script/Component/Layout/Header.jsx",[],"/Users/miyashota/project/react-app/src/script/MaterialUi/ToolTipTime.jsx",[],"/Users/miyashota/project/react-app/src/script/Component/Setting/ProfDialog.jsx",[],"/Users/miyashota/project/react-app/src/script/Component/Setting/IconCropper.jsx",[],"/Users/miyashota/project/react-app/src/script/MaterialUi/IconUpload.jsx",[],"/Users/miyashota/project/react-app/src/reducks/missions/reducers.js",[],"/Users/miyashota/project/react-app/src/script/Component/Schedule/Schedule.jsx",["572","573"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { db } from '../../../firebase/firebase'\nimport {\n  getUserId,\n  getClassName,\n  getUserValue,\n} from '../../../reducks/users/selectors'\nimport { schoolevent } from './data/schoolevent'\nimport { AppBarSubHeader } from '../../MaterialUi/materialui'\n\nimport Paper from '@material-ui/core/Paper'\nimport { ViewState, EditingState } from '@devexpress/dx-react-scheduler'\nimport {\n  Scheduler,\n  Toolbar,\n  MonthView,\n  Appointments,\n  AppointmentTooltip,\n  EditRecurrenceMenu,\n  AllDayPanel,\n  DateNavigator,\n  Resources,\n} from '@devexpress/dx-react-scheduler-material-ui'\nimport {\n  blue,\n  deepPurple,\n  blueGrey,\n  teal,\n  pink,\n} from '@material-ui/core/colors'\n/* ===================================================================== */\n\nconst Schedule = () => {\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const current_uid = getUserId(selector)\n  const current_class = getClassName(selector)\n  const current_value = getUserValue(selector)\n  const [doingTasks, setDoingTasks] = useState('')\n  const [completedTasks, setCompletedTasks] = useState('')\n  const [allTasks, setAllTasks] = useState('')\n  const [createdTasks, setCreatedTasks] = useState('')\n  const userSchedule = schoolevent.concat(\n    doingTasks,\n    completedTasks,\n    allTasks,\n    createdTasks\n  )\n\n  // スケジュールを取得\n  useEffect(() => {\n    // ログインユーザーのタスク取得\n    db.collection('users')\n      .doc(current_uid)\n      .collection('tasks')\n      .where('tag', '==', '4')\n      .get()\n      .then((snapshots) => {\n        const myTaskData = []\n        if (snapshots.length !== 0) {\n          snapshots.forEach((snapshot) => {\n            const task = snapshot.data()\n            const taskData = {\n              title: task.title,\n              tag: '4',\n              startDate: task.startDate.toDate(),\n              endDate: task.endDate.toDate(),\n            }\n            myTaskData.push(taskData)\n          })\n        }\n        setDoingTasks(myTaskData)\n      })\n    db.collection('users')\n      .doc(current_uid)\n      .collection('tasks')\n      .where('tag', '==', '5')\n      .get()\n      .then((snapshots) => {\n        const myTaskData = []\n        if (snapshots.length !== 0) {\n          snapshots.forEach((snapshot) => {\n            const task = snapshot.data()\n            const taskData = {\n              title: task.title,\n              tag: '5',\n              startDate: task.startDate.toDate(),\n              endDate: task.endDate.toDate(),\n            }\n            myTaskData.push(taskData)\n          })\n        }\n        setCompletedTasks(myTaskData)\n      })\n    // 全体のスケジュール取得\n    db.collection('schedules')\n      .where('destination', 'in', ['all', current_value, current_class])\n      .get()\n      .then((snapshots) => {\n        const myTaskData = []\n        if (snapshots.length !== 0) {\n          snapshots.forEach((snapshot) => {\n            const task = snapshot.data()\n            if (task.creater_uid !== current_uid) {\n              const taskData = {\n                title: task.title,\n                tag: task.tag,\n                startDate: task.startDate.toDate(),\n                endDate: task.endDate.toDate(),\n              }\n              myTaskData.push(taskData)\n            }\n          })\n        }\n        setAllTasks(myTaskData)\n      })\n    db.collection('schedules')\n      .where('creater_uid', '==', current_uid)\n      .get()\n      .then((snapshots) => {\n        const myTaskData = []\n        if (snapshots.length !== 0) {\n          snapshots.forEach((snapshot) => {\n            const task = snapshot.data()\n            const taskData = {\n              title: task.title,\n              tag: '6',\n              startDate: task.startDate.toDate(),\n              endDate: task.endDate.toDate(),\n            }\n            myTaskData.push(taskData)\n          })\n        }\n        setCreatedTasks(myTaskData)\n      })\n  }, [])\n\n  return (\n    <section className=\"schedules_main\">\n      <AppBarSubHeader subtitle={'スケジュール'} />\n\n      <Paper style={{ boxShadow: 'none', borderBottom: '1px solid #00000022' }}>\n        <Scheduler data={userSchedule} locale=\"JA\">\n          <ViewState />\n          <EditingState />\n          <MonthView />\n          <AllDayPanel />\n          <EditRecurrenceMenu />\n          <Appointments />\n          <AppointmentTooltip showCloseButton />\n          <Toolbar />\n          <DateNavigator />\n          <Resources data={resources} />\n        </Scheduler>\n      </Paper>\n    </section>\n  )\n}\n\nexport default Schedule\n\nconst resources = [\n  {\n    fieldName: 'tag',\n    title: 'tag',\n    instances: [\n      { id: '1', text: '学校行事', color: blueGrey },\n      { id: '2', text: '課題', color: deepPurple },\n      { id: '3', text: 'アンケート', color: teal },\n      { id: '4', text: '個人タスク　ー実行中ー', color: blue },\n      { id: '5', text: '個人タスク　ー実行済ー', color: blue[100] },\n      { id: '6', text: '投稿したタスク', color: pink },\n    ],\n  },\n]\n","/Users/miyashota/project/react-app/src/script/Component/ScrollTop.jsx",["574"],"import React, { useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n/* ===================================================================== */\n\nconst ScrollTop = () => {\n  const { pathname } = useLocation()\n\n  // パス変更時に画面トップへスクロール\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [pathname])\n\n  return null // 何もレンダリングしない\n}\nexport default ScrollTop\n","/Users/miyashota/project/react-app/src/reducks/tasks/operations.js",[],"/Users/miyashota/project/react-app/src/script/Component/Task/MyTask.jsx",["575"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nimport { MyTaskList } from '../render'\nimport { AppBarSubHeader, ToolTip } from '../../MaterialUi/materialui'\nimport { readTasks } from '../../../reducks/tasks/operations'\nimport {\n  getDoingTasksLists,\n  getCompletedTasksLists,\n} from '../../../reducks/tasks/selectors'\n\nimport EditIcon from '@material-ui/icons/Edit'\nimport Fab from '@material-ui/core/Fab'\nimport Paper from '@material-ui/core/Paper'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\n/* ===================================================================== */\n\nconst MyTask = () => {\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const doingTasks = getDoingTasksLists(selector)\n  const completedTasks = getCompletedTasksLists(selector)\n  const [state, setState] = useState({\n    doing: true,\n    completed: true,\n  })\n  // 自分の未完了のスケジュールを取得\n  useEffect(() => {\n    dispatch(readTasks())\n  }, [])\n  // 実行中タスク、実行済みタスク切り替え\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked })\n  }\n  // 連絡作成ボタンクリック\n  const pushHandleClick = () => {\n    dispatch(push('/task/edit'))\n  }\n\n  return (\n    <section className=\"main\">\n      <AppBarSubHeader subtitle={'タスク管理'} />\n\n      <div className=\"edit_addbtn\">\n        <ToolTip title=\"連絡作成\">\n          <Fab color=\"secondary\" onClick={pushHandleClick}>\n            <EditIcon />\n          </Fab>\n        </ToolTip>\n      </div>\n\n      <div className=\"contents_style\">\n        <Paper className=\"paper_sub\">\n          <FormControlLabel\n            control={\n              <Switch\n                color=\"primary\"\n                checked={state.doing}\n                onChange={handleChange}\n                name=\"doing\"\n              />\n            }\n            label={state.doing ? '実行中タスク' : '実行済タスク'}\n            className=\"padding_left_10px\"\n          />\n\n          <MyTaskList\n            state={state}\n            myTasks={state.doing ? doingTasks : completedTasks}\n          />\n        </Paper>\n      </div>\n    </section>\n  )\n}\nexport default MyTask\n","/Users/miyashota/project/react-app/src/script/Component/Task/MyTaskEdit.jsx",["576"],"import React, { useState, useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nimport {\n  AppBarSubHeader,\n  BlueInput,\n  DateTimePicker,\n  BlueButton,\n  BlueButtonNomal,\n} from '../../MaterialUi/materialui'\nimport { db } from '../../../firebase/firebase'\nimport { getUserId } from '../../../reducks/users/selectors'\nimport { addTask } from '../../../reducks/tasks/operations'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n/* ===================================================================== */\n\nconst useStyles = makeStyles((theme) => ({\n  picker: {\n    display: 'block',\n    [theme.breakpoints.up('sm')]: {\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n  },\n}))\n\nconst MyTaskEdit = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state)\n  const current_uid = getUserId(selector)\n  const [tid, setTid] = useState('')\n  const [title, setTitle] = useState('')\n  const [startDate, setStartDate] = useState(null)\n  const [endDate, setEndeDate] = useState(null)\n\n  useEffect(() => {\n    // URLからtidを取得\n    const id = window.location.pathname.split('/task/edit')[1]\n    if (id !== '') {\n      setTid(id.split('/')[1])\n    }\n    // tidが存在すれば投稿情報を取得する\n    if (tid !== '') {\n      db.collection('users')\n        .doc(current_uid)\n        .collection('tasks')\n        .doc(tid)\n        .get()\n        .then((snapshot) => {\n          const task = snapshot.data()\n          setTitle(task.title)\n          setStartDate(task.startDate.toDate())\n          setEndeDate(task.endDate.toDate())\n        })\n    }\n  }, [tid])\n  // タスク名入力イベント\n  const inputTitle = useCallback(\n    (event) => {\n      setTitle(event.target.value)\n    },\n    [setTitle]\n  )\n  // 開始時刻入力イベント\n  const inputStartDate = (date) => {\n    setStartDate(date)\n  }\n  // 終了時刻入力イベント\n  const inputEndDate = (date) => {\n    setEndeDate(date)\n  }\n  // 終了時刻チェック\n  const dateCheck = (startDate, endDate) => {\n    if (startDate !== '' && endDate !== '') {\n      if (endDate < startDate) {\n        return '※開始時刻よりも後の時刻を入力してください'\n      }\n    } else {\n      return ''\n    }\n  }\n  // キャンセルボタンクリック\n  const handleClose = () => {\n    dispatch(push('/task'))\n  }\n  // 保存ボタンクリック\n  const createHandleClick = () => {\n    dispatch(addTask(tid, title, startDate, endDate))\n  }\n  console.log(tid)\n\n  return (\n    <section className=\"main\">\n      {tid === '' ? (\n        <AppBarSubHeader subtitle={'タスク ー新規ー'} />\n      ) : (\n        <AppBarSubHeader subtitle={'タスク ー編集ー'} />\n      )}\n\n      <div className=\"contents_style\">\n        <Paper className=\"paper\">\n          <Typography className=\"label\">タスク名</Typography>\n          <BlueInput\n            label={null}\n            type={'text'}\n            fullWidth={true}\n            multiline={true}\n            value={title}\n            defaultValue={title}\n            onChange={inputTitle}\n          />\n          <div className=\"space_15px\"></div>\n\n          <div className={classes.picker}>\n            <div className=\"flex_10\">\n              <Typography className=\"label\">開始時刻</Typography>\n              <DateTimePicker\n                fullWidth={true}\n                ampm={false}\n                value={startDate}\n                onChange={inputStartDate}\n              />\n            </div>\n            <div className=\"flex_1\"></div>\n            <div className=\"flex_10\">\n              <Typography className=\"label\">終了時刻</Typography>\n              <DateTimePicker\n                fullWidth={true}\n                ampm={false}\n                value={endDate}\n                minDate={startDate}\n                onChange={inputEndDate}\n              />\n              <Typography\n                variant=\"body2\"\n                style={{ color: '#e91e63', fontSize: '11px' }}\n                className=\"label\"\n              >\n                {dateCheck(startDate, endDate)}\n              </Typography>\n            </div>\n          </div>\n\n          <div className=\"right margin_top_20px\">\n            <BlueButtonNomal label={'キャンセル'} onClick={handleClose} />\n            <BlueButton\n              label={tid === '' ? '追加' : '保存'}\n              onClick={createHandleClick}\n            />\n          </div>\n        </Paper>\n      </div>\n    </section>\n  )\n}\nexport default MyTaskEdit\n","/Users/miyashota/project/react-app/src/script/Component/Schedule/data/schoolevent.js",[],"/Users/miyashota/project/react-app/src/reducks/tasks/reducers.js",[],"/Users/miyashota/project/react-app/src/script/Component/Task/MyTaskList.jsx",["577","578"],"import React, { useState, useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { format } from 'date-fns'\nimport { ja } from 'date-fns/locale'\n\nimport {\n  updateDoingTask,\n  updateCompletedTask,\n  deleteDoingTask,\n  deleteCompletedTask,\n} from '../../../reducks/tasks/operations'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport EditSharpIcon from '@material-ui/icons/EditSharp'\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp'\nimport Divider from '@material-ui/core/Divider'\n/* ===================================================================== */\n\nconst MyTaskList = (props) => {\n  const dispatch = useDispatch()\n  // 時間を正規表現\n  const timeChange = (time) => {\n    const redate = time.toDate()\n    const date = format(redate, 'M月dd日 H:mm', { locale: ja })\n    return date\n  }\n  // チェックボックスボタンクリック\n  const checkHandleClick = (tid) => {\n    if (props.state.doing) {\n      dispatch(updateDoingTask(tid))\n    } else {\n      dispatch(updateCompletedTask(tid))\n    }\n  }\n  // 編集ボタンクリック\n  const editHandleClick = (tid) => {\n    dispatch(push('/task/edit/' + tid))\n  }\n  // 削除ボタンクリック\n  const deleteHandleClick = (tid) => {\n    if (props.state.doing) {\n      dispatch(deleteDoingTask(tid))\n    } else {\n      dispatch(deleteCompletedTask(tid))\n    }\n  }\n\n  return (\n    <List component=\"nav\">\n      {props.myTasks.length > 0 ? (\n        props.myTasks.map((task, index) => (\n          <>\n            <ListItem button key={task.tid}>\n              <ListItemIcon>\n                <Checkbox\n                  edge=\"end\"\n                  color=\"primary\"\n                  onClick={() => checkHandleClick(task.tid)}\n                />\n              </ListItemIcon>\n              <ListItemText\n                primary={task.title}\n                secondary={`${timeChange(task.startDate)}-${timeChange(\n                  task.endDate\n                )}`}\n              />\n\n              {props.state.doing && (\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"comments\"\n                  onClick={() => editHandleClick(task.tid)}\n                >\n                  <EditSharpIcon />\n                </IconButton>\n              )}\n              <div className=\"padding_left_10px\">\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"comments\"\n                  onClick={() => deleteHandleClick(task.tid)}\n                >\n                  <DeleteSharpIcon />\n                </IconButton>\n              </div>\n            </ListItem>\n            {props.myTasks.length !== index + 1 && <Divider />}\n          </>\n        ))\n      ) : (\n        <ListItem>\n          <ListItemText primary={'タスクがありません'} />\n        </ListItem>\n      )}\n    </List>\n  )\n}\nexport default MyTaskList\n","/Users/miyashota/project/react-app/src/reducks/tasks/actions.js",[],"/Users/miyashota/project/react-app/src/reducks/tasks/selectors.js",[],"/Users/miyashota/project/react-app/src/script/Component/Chat/ChatMessageList.jsx",["579","580"],"/Users/miyashota/project/react-app/src/script/Component/Chat/ChatMessageComponent.jsx",["581"],"import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { format } from 'date-fns'\nimport { ja } from 'date-fns/locale'\n\nimport { ToolTipTime } from '../../MaterialUi/materialui'\nimport { db } from '../../../firebase/firebase'\nimport { getUserId } from '../../../reducks/users/selectors'\n\nimport Avatar from '@material-ui/core/Avatar'\n/* ===================================================================== */\n\nconst ChatMessageComponent = (props) => {\n  const selector = useSelector((state) => state)\n  const current_uid = getUserId(selector)\n  const [icon, setIcon] = useState('')\n  const [name, setName] = useState('')\n\n  // 投稿者の情報を取得\n  useEffect(() => {\n    if (props.createrUid) {\n      const unsubscribe = db\n        .collection('users')\n        .doc(props.createrUid)\n        .onSnapshot((snapshots) => {\n          const userData = snapshots.data()\n          if (userData) {\n            setName(userData.user_name)\n            setIcon(userData.icon.path)\n          } else {\n            setName('退会済みのユーザー')\n          }\n        })\n      return () => unsubscribe()\n    }\n  }, [])\n  // 時間を正規表現\n  const timeChange = (time) => {\n    const redate = time.toDate()\n    const date = format(redate, 'yyyy年M月dd日 H:mm', { locale: ja })\n    return date\n  }\n\n  return (\n    <div\n      className={\n        props.createrUid === current_uid ? 'chat_msg_box_mine' : ' chat_msg_box'\n      }\n      key={props.key}\n    >\n      <div\n        className={props.createrUid === current_uid && 'chat_from_name_mine'}\n      >\n        {icon ? (\n          <Avatar\n            className=\"pointer\"\n            alt=\"userIcon\"\n            src={icon}\n            onClick={() => props.onClick(props.createrUid)}\n          />\n        ) : (\n          <Avatar\n            className=\"pointer\"\n            onClick={() => props.onClick(props.createrUid)}\n          >\n            {name.charAt(0)}\n          </Avatar>\n        )}\n      </div>\n      <div className=\"chat_msg\">\n        <span className=\"chat_from_name\">\n          <p\n            className={\n              props.createrUid === current_uid && 'chat_from_name_mine'\n            }\n          >\n            {name}\n          </p>\n        </span>\n        <span>\n          <ToolTipTime title={timeChange(props.updateTime)}>\n            <p\n              style={{ whiteSpace: 'pre-wrap' }}\n              className={\n                props.createrUid === current_uid ? 'message_mine' : ' message'\n              }\n            >\n              {props.message}\n            </p>\n          </ToolTipTime>\n        </span>\n      </div>\n    </div>\n  )\n}\n\nexport default ChatMessageComponent\n\n/* ===================================================================== */\n","/Users/miyashota/project/react-app/src/script/Component/Chat/RoomEdit.jsx",[],"/Users/miyashota/project/react-app/src/script/Component/Chat/RoomUserList.jsx",["582"],"import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { db } from '../../../firebase/firebase'\nimport { getUserId } from '../../../reducks/users/selectors'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemPrimaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Avatar from '@material-ui/core/Avatar'\n/* ===================================================================== */\n\nconst RoomUserList = (props) => {\n  const selector = useSelector((state) => state)\n  const current_uid = getUserId(selector)\n  const [userList, setUserList] = useState([])\n\n  // 自分以外のユーザーを取得\n  useEffect(() => {\n    db.collection('users')\n      .where('uid', '!=', current_uid)\n      .get()\n      .then((snapshots) => {\n        const userList = []\n        snapshots.forEach((snapshots) => {\n          const user = snapshots.data()\n          const userData = {\n            uid: user.uid,\n            user_name: user.user_name,\n            class_name: user.class_name,\n            icon: user.icon.path,\n          }\n          userList.push(userData)\n        })\n        const data = userList.filter((e) => {\n          return e.class_name === props.className\n        })\n        setUserList(data)\n      })\n  }, [])\n\n  // ユーザー選択イベント\n  const handleToggle = (uid, name) => () => {\n    const currentIndex = props.checked.indexOf(uid)\n    const newChecked = [...props.checked]\n    const newName = [...props.userName]\n    if (currentIndex === -1) {\n      newChecked.push(uid)\n      newName.push(`${name}　ー　${props.classValueName}`)\n    } else {\n      newChecked.splice(currentIndex, 1)\n      newName.splice(currentIndex, 1)\n    }\n    props.setChecked(newChecked)\n    props.setUserName(newName)\n  }\n\n  return (\n    <List className=\"full_width\" dense>\n      {userList !== '' &&\n        userList.map((data) => {\n          const labelId = `checkbox-list-label-${data.uid}`\n          return (\n            <ListItem\n              button\n              key={data.uid}\n              onClick={handleToggle(data.uid, data.user_name)}\n            >\n              <ListItemAvatar>\n                <Avatar src={data.icon} />\n              </ListItemAvatar>\n              <ListItemText id={labelId} primary={data.user_name} />\n              <ListItemPrimaryAction>\n                <Checkbox\n                  edge=\"end\"\n                  color=\"primary\"\n                  id={labelId}\n                  onChange={handleToggle(data.uid, data.user_name)}\n                  checked={props.checked.indexOf(data.uid) !== -1}\n                />\n              </ListItemPrimaryAction>\n            </ListItem>\n          )\n        })}\n    </List>\n  )\n}\n\nexport default RoomUserList\n","/Users/miyashota/project/react-app/src/script/Component/Chat/ChatMessage.jsx",[],"/Users/miyashota/project/react-app/src/script/Component/Mission/MissionSubmit.jsx",["583"],"/Users/miyashota/project/react-app/src/script/Component/Chat/RoomCheckedList.jsx",[],{"ruleId":"584","replacedBy":"585"},{"ruleId":"586","replacedBy":"587"},{"ruleId":"584","replacedBy":"588"},{"ruleId":"586","replacedBy":"589"},{"ruleId":"584","replacedBy":"590"},{"ruleId":"586","replacedBy":"591"},{"ruleId":"584","replacedBy":"592"},{"ruleId":"586","replacedBy":"593"},{"ruleId":"584","replacedBy":"594"},{"ruleId":"586","replacedBy":"595"},{"ruleId":"584","replacedBy":"596"},{"ruleId":"586","replacedBy":"597"},{"ruleId":"598","severity":1,"message":"599","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":25},{"ruleId":"584","replacedBy":"602"},{"ruleId":"586","replacedBy":"603"},{"ruleId":"604","severity":1,"message":"605","line":17,"column":6,"nodeType":"606","endLine":17,"endColumn":8,"suggestions":"607"},{"ruleId":"584","replacedBy":"608"},{"ruleId":"586","replacedBy":"609"},{"ruleId":"584","replacedBy":"610"},{"ruleId":"586","replacedBy":"611"},{"ruleId":"584","replacedBy":"612"},{"ruleId":"586","replacedBy":"613"},{"ruleId":"598","severity":1,"message":"599","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":25},{"ruleId":"584","replacedBy":"614"},{"ruleId":"586","replacedBy":"615"},{"ruleId":"598","severity":1,"message":"616","line":1,"column":8,"nodeType":"600","messageId":"601","endLine":1,"endColumn":16},{"ruleId":"598","severity":1,"message":"617","line":6,"column":3,"nodeType":"600","messageId":"601","endLine":6,"endColumn":24},{"ruleId":"584","replacedBy":"618"},{"ruleId":"586","replacedBy":"619"},{"ruleId":"584","replacedBy":"620"},{"ruleId":"586","replacedBy":"621"},{"ruleId":"598","severity":1,"message":"622","line":4,"column":8,"nodeType":"600","messageId":"601","endLine":4,"endColumn":28},{"ruleId":"598","severity":1,"message":"623","line":5,"column":8,"nodeType":"600","messageId":"601","endLine":5,"endColumn":15},{"ruleId":"584","replacedBy":"624"},{"ruleId":"586","replacedBy":"625"},{"ruleId":"584","replacedBy":"626"},{"ruleId":"586","replacedBy":"627"},{"ruleId":"584","replacedBy":"628"},{"ruleId":"586","replacedBy":"629"},{"ruleId":"598","severity":1,"message":"630","line":1,"column":8,"nodeType":"600","messageId":"601","endLine":1,"endColumn":13},{"ruleId":"598","severity":1,"message":"631","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":28},{"ruleId":"598","severity":1,"message":"599","line":1,"column":30,"nodeType":"600","messageId":"601","endLine":1,"endColumn":38},{"ruleId":"598","severity":1,"message":"632","line":1,"column":40,"nodeType":"600","messageId":"601","endLine":1,"endColumn":49},{"ruleId":"598","severity":1,"message":"633","line":1,"column":51,"nodeType":"600","messageId":"601","endLine":1,"endColumn":57},{"ruleId":"598","severity":1,"message":"634","line":2,"column":10,"nodeType":"600","messageId":"601","endLine":2,"endColumn":17},{"ruleId":"598","severity":1,"message":"635","line":3,"column":8,"nodeType":"600","messageId":"601","endLine":3,"endColumn":23},{"ruleId":"636","severity":1,"message":"637","line":12,"column":38,"nodeType":"638","messageId":"639","endLine":12,"endColumn":39,"suggestions":"640"},{"ruleId":"598","severity":1,"message":"641","line":5,"column":10,"nodeType":"600","messageId":"601","endLine":5,"endColumn":14},{"ruleId":"584","replacedBy":"642"},{"ruleId":"586","replacedBy":"643"},{"ruleId":"598","severity":1,"message":"631","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":28},{"ruleId":"598","severity":1,"message":"632","line":1,"column":30,"nodeType":"600","messageId":"601","endLine":1,"endColumn":39},{"ruleId":"598","severity":1,"message":"599","line":1,"column":41,"nodeType":"600","messageId":"601","endLine":1,"endColumn":49},{"ruleId":"598","severity":1,"message":"644","line":2,"column":23,"nodeType":"600","messageId":"601","endLine":2,"endColumn":34},{"ruleId":"598","severity":1,"message":"645","line":5,"column":10,"nodeType":"600","messageId":"601","endLine":5,"endColumn":12},{"ruleId":"598","severity":1,"message":"646","line":18,"column":8,"nodeType":"600","messageId":"601","endLine":18,"endColumn":23},{"ruleId":"598","severity":1,"message":"647","line":19,"column":8,"nodeType":"600","messageId":"601","endLine":19,"endColumn":21},{"ruleId":"598","severity":1,"message":"648","line":20,"column":8,"nodeType":"600","messageId":"601","endLine":20,"endColumn":21},{"ruleId":"598","severity":1,"message":"649","line":21,"column":8,"nodeType":"600","messageId":"601","endLine":21,"endColumn":24},{"ruleId":"598","severity":1,"message":"650","line":22,"column":8,"nodeType":"600","messageId":"601","endLine":22,"endColumn":30},{"ruleId":"598","severity":1,"message":"651","line":31,"column":8,"nodeType":"600","messageId":"601","endLine":31,"endColumn":21},{"ruleId":"598","severity":1,"message":"652","line":32,"column":8,"nodeType":"600","messageId":"601","endLine":32,"endColumn":19},{"ruleId":"598","severity":1,"message":"653","line":33,"column":8,"nodeType":"600","messageId":"601","endLine":33,"endColumn":18},{"ruleId":"598","severity":1,"message":"654","line":34,"column":8,"nodeType":"600","messageId":"601","endLine":34,"endColumn":21},{"ruleId":"598","severity":1,"message":"599","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":25},{"ruleId":"598","severity":1,"message":"631","line":1,"column":27,"nodeType":"600","messageId":"601","endLine":1,"endColumn":38},{"ruleId":"584","replacedBy":"655"},{"ruleId":"586","replacedBy":"656"},{"ruleId":"598","severity":1,"message":"657","line":14,"column":8,"nodeType":"600","messageId":"601","endLine":14,"endColumn":16},{"ruleId":"604","severity":1,"message":"658","line":93,"column":6,"nodeType":"606","endLine":93,"endColumn":11,"suggestions":"659"},{"ruleId":"660","severity":1,"message":"661","line":57,"column":5,"nodeType":"662","messageId":"663","endLine":57,"endColumn":10},{"ruleId":"604","severity":1,"message":"664","line":150,"column":6,"nodeType":"606","endLine":150,"endColumn":8,"suggestions":"665"},{"ruleId":"598","severity":1,"message":"599","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":25},{"ruleId":"598","severity":1,"message":"631","line":1,"column":27,"nodeType":"600","messageId":"601","endLine":1,"endColumn":38},{"ruleId":"598","severity":1,"message":"616","line":1,"column":8,"nodeType":"600","messageId":"601","endLine":1,"endColumn":16},{"ruleId":"584","replacedBy":"666"},{"ruleId":"586","replacedBy":"667"},{"ruleId":"604","severity":1,"message":"668","line":56,"column":6,"nodeType":"606","endLine":56,"endColumn":8,"suggestions":"669"},{"ruleId":"604","severity":1,"message":"670","line":116,"column":6,"nodeType":"606","endLine":116,"endColumn":8,"suggestions":"671"},{"ruleId":"604","severity":1,"message":"672","line":28,"column":6,"nodeType":"606","endLine":28,"endColumn":8,"suggestions":"673"},{"ruleId":"604","severity":1,"message":"674","line":92,"column":6,"nodeType":"606","endLine":92,"endColumn":8,"suggestions":"675"},{"ruleId":"604","severity":1,"message":"664","line":62,"column":6,"nodeType":"606","endLine":62,"endColumn":8,"suggestions":"676"},{"ruleId":"677","severity":1,"message":"678","line":83,"column":26,"nodeType":"679","endLine":83,"endColumn":30},{"ruleId":"604","severity":1,"message":"672","line":30,"column":6,"nodeType":"606","endLine":30,"endColumn":8,"suggestions":"680"},{"ruleId":"604","severity":1,"message":"681","line":57,"column":6,"nodeType":"606","endLine":57,"endColumn":11,"suggestions":"682"},{"ruleId":"604","severity":1,"message":"672","line":55,"column":6,"nodeType":"606","endLine":55,"endColumn":11,"suggestions":"683"},{"ruleId":"584","replacedBy":"684"},{"ruleId":"586","replacedBy":"685"},{"ruleId":"604","severity":1,"message":"686","line":85,"column":6,"nodeType":"606","endLine":85,"endColumn":8,"suggestions":"687"},{"ruleId":"604","severity":1,"message":"672","line":30,"column":6,"nodeType":"606","endLine":30,"endColumn":8,"suggestions":"688"},{"ruleId":"598","severity":1,"message":"632","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":26},{"ruleId":"598","severity":1,"message":"689","line":2,"column":10,"nodeType":"600","messageId":"601","endLine":2,"endColumn":21},{"ruleId":"598","severity":1,"message":"644","line":2,"column":23,"nodeType":"600","messageId":"601","endLine":2,"endColumn":34},{"ruleId":"598","severity":1,"message":"690","line":4,"column":10,"nodeType":"600","messageId":"601","endLine":4,"endColumn":24},{"ruleId":"598","severity":1,"message":"691","line":5,"column":10,"nodeType":"600","messageId":"601","endLine":5,"endColumn":21},{"ruleId":"604","severity":1,"message":"664","line":42,"column":6,"nodeType":"606","endLine":42,"endColumn":8,"suggestions":"692"},{"ruleId":"693","severity":1,"message":"694","line":34,"column":19,"nodeType":"695","messageId":"696","endLine":34,"endColumn":20},{"ruleId":"584","replacedBy":"697"},{"ruleId":"586","replacedBy":"698"},{"ruleId":"598","severity":1,"message":"699","line":5,"column":10,"nodeType":"600","messageId":"601","endLine":5,"endColumn":14},{"ruleId":"598","severity":1,"message":"700","line":36,"column":9,"nodeType":"600","messageId":"601","endLine":36,"endColumn":17},{"ruleId":"604","severity":1,"message":"701","line":138,"column":6,"nodeType":"606","endLine":138,"endColumn":8,"suggestions":"702"},{"ruleId":"598","severity":1,"message":"630","line":1,"column":8,"nodeType":"600","messageId":"601","endLine":1,"endColumn":13},{"ruleId":"604","severity":1,"message":"672","line":32,"column":6,"nodeType":"606","endLine":32,"endColumn":8,"suggestions":"703"},{"ruleId":"604","severity":1,"message":"664","line":61,"column":6,"nodeType":"606","endLine":61,"endColumn":11,"suggestions":"704"},{"ruleId":"598","severity":1,"message":"599","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":25},{"ruleId":"598","severity":1,"message":"631","line":1,"column":27,"nodeType":"600","messageId":"601","endLine":1,"endColumn":38},{"ruleId":"604","severity":1,"message":"681","line":83,"column":6,"nodeType":"606","endLine":83,"endColumn":8,"suggestions":"705"},{"ruleId":"604","severity":1,"message":"706","line":90,"column":24,"nodeType":"600","endLine":90,"endColumn":35},{"ruleId":"604","severity":1,"message":"674","line":36,"column":6,"nodeType":"606","endLine":36,"endColumn":8,"suggestions":"707"},{"ruleId":"604","severity":1,"message":"708","line":43,"column":6,"nodeType":"606","endLine":43,"endColumn":8,"suggestions":"709"},{"ruleId":"598","severity":1,"message":"710","line":24,"column":9,"nodeType":"600","messageId":"601","endLine":24,"endColumn":20},"no-native-reassign",["711"],"no-negated-in-lhs",["712"],["711"],["712"],["711"],["712"],["711"],["712"],["711"],["712"],["711"],["712"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["711"],["712"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'isSignedIn'. Either include them or remove the dependency array.","ArrayExpression",["713"],["711"],["712"],["711"],["712"],["711"],["712"],["711"],["712"],"'firebase' is defined but never used.","'deleteQuestionsAction' is defined but never used.",["711"],["712"],["711"],["712"],"'AddCircleOutlineIcon' is defined but never used.","'AddIcon' is defined but never used.",["711"],["712"],["711"],["712"],["711"],["712"],"'React' is defined but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'storage' is defined but never used.","'HTMLReactParser' is defined but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["714","715"],"'pink' is defined but never used.",["711"],["712"],"'useSelector' is defined but never used.","'db' is defined but never used.","'SchoolSharpIcon' is defined but never used.","'TuneSharpIcon' is defined but never used.","'AppsSharpIcon' is defined but never used.","'ShuffleSharpIcon' is defined but never used.","'VerticalSplitSharpIcon' is defined but never used.","'AddCircleIcon' is defined but never used.","'HistoryIcon' is defined but never used.","'PersonIcon' is defined but never used.","'ExitToAppIcon' is defined but never used.",["711"],["712"],"'MoreIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'props.view'. Either include it or remove the dependency array.",["716"],"no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","React Hook useEffect has a missing dependency: 'current_uid'. Either include it or remove the dependency array.",["717"],["711"],["712"],"React Hook useEffect has missing dependencies: 'current_class' and 'dispatch'. Either include them or remove the dependency array.",["718"],"React Hook useEffect has missing dependencies: 'props.createrUid', 'props.currentUid', and 'props.mid'. Either include them or remove the dependency array.",["719"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["720"],"React Hook useEffect has a missing dependency: 'props.createrUid'. Either include it or remove the dependency array.",["721"],["722"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["723"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["724"],["725"],["711"],["712"],"React Hook useEffect has missing dependencies: 'props.createrUid', 'props.currentUid', and 'props.qid'. Either include them or remove the dependency array.",["726"],["727"],"'useDispatch' is defined but never used.","'getAnswerLists' is defined but never used.","'readAnswers' is defined but never used.",["728"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["711"],["712"],"'blue' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'current_class', 'current_uid', and 'current_value'. Either include them or remove the dependency array.",["729"],["730"],["731"],["732"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?",["733"],"React Hook useEffect has missing dependencies: 'current_uid' and 'props.className'. Either include them or remove the dependency array.",["734"],"'current_uid' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"735","fix":"736"},{"messageId":"737","fix":"738","desc":"739"},{"messageId":"740","fix":"741","desc":"742"},{"desc":"743","fix":"744"},{"desc":"745","fix":"746"},{"desc":"747","fix":"748"},{"desc":"749","fix":"750"},{"desc":"751","fix":"752"},{"desc":"753","fix":"754"},{"desc":"745","fix":"755"},{"desc":"751","fix":"756"},{"desc":"757","fix":"758"},{"desc":"759","fix":"760"},{"desc":"761","fix":"762"},{"desc":"751","fix":"763"},{"desc":"745","fix":"764"},{"desc":"765","fix":"766"},{"desc":"751","fix":"767"},{"desc":"768","fix":"769"},{"desc":"770","fix":"771"},{"desc":"753","fix":"772"},{"desc":"773","fix":"774"},"Update the dependencies array to be: [dispatch, isSignedIn]",{"range":"775","text":"776"},"removeEscape",{"range":"777","text":"778"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"779","text":"780"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [props.view, rid]",{"range":"781","text":"782"},"Update the dependencies array to be: [current_uid]",{"range":"783","text":"784"},"Update the dependencies array to be: [current_class, dispatch]",{"range":"785","text":"786"},"Update the dependencies array to be: [props.createrUid, props.currentUid, props.mid]",{"range":"787","text":"788"},"Update the dependencies array to be: [dispatch]",{"range":"789","text":"790"},"Update the dependencies array to be: [props.createrUid]",{"range":"791","text":"792"},{"range":"793","text":"784"},{"range":"794","text":"790"},"Update the dependencies array to be: [add, props]",{"range":"795","text":"796"},"Update the dependencies array to be: [dispatch, qid]",{"range":"797","text":"798"},"Update the dependencies array to be: [props.createrUid, props.currentUid, props.qid]",{"range":"799","text":"800"},{"range":"801","text":"790"},{"range":"802","text":"784"},"Update the dependencies array to be: [current_class, current_uid, current_value]",{"range":"803","text":"804"},{"range":"805","text":"790"},"Update the dependencies array to be: [current_uid, tid]",{"range":"806","text":"807"},"Update the dependencies array to be: [props]",{"range":"808","text":"809"},{"range":"810","text":"792"},"Update the dependencies array to be: [current_uid, props.className]",{"range":"811","text":"812"},[556,558],"[dispatch, isSignedIn]",[401,402],"",[401,401],"\\",[2237,2242],"[props.view, rid]",[3694,3696],"[current_uid]",[1950,1952],"[current_class, dispatch]",[3585,3587],"[props.createrUid, props.currentUid, props.mid]",[939,941],"[dispatch]",[2861,2863],"[props.createrUid]",[1752,1754],[1101,1103],[1552,1557],"[add, props]",[1673,1678],"[dispatch, qid]",[2704,2706],"[props.createrUid, props.currentUid, props.qid]",[1080,1082],[1275,1277],[3981,3983],"[current_class, current_uid, current_value]",[1113,1115],[1785,1790],"[current_uid, tid]",[2328,2330],"[props]",[1126,1128],[1471,1473],"[current_uid, props.className]"]